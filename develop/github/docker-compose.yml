services:
  cassandra:
    image: cassandra:3.11
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_LISTEN_ADDRESS: 127.0.0.1
      MAX_HEAP_SIZE: "2G"
      HEAP_NEWSIZE: "200M"

  mysql:
    image: mysql:8.0.29-oracle
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d

  postgresql:
    image: postgres:13.5
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    volumes:
      - ./postgresql-init:/docker-entrypoint-initdb.d

  elasticsearch:
    image: elasticsearch:7.10.1
    ports:
      - "9200:9200"
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g

  elasticsearch8:
    image: elasticsearch:8.0.0
    ports:
      - "9200:9200"
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.127.0
    ports:
      - "4317:4317"
    volumes:
      - /tmp:/out:rw
    environment:
      OTEL_CONFIG: |
        receivers:
          otlp:
            protocols:
              grpc:
                endpoint: 0.0.0.0:4317
        processors:
          batch:
            timeout: 1s          
            send_batch_size: 100
            send_batch_max_size: 1000
          # Remove superfluous attributes to save space
          transform:
            trace_statements:
              - context: resource
                statements:
                  - delete_matching_keys(attributes, "host\\..*")
                  - delete_matching_keys(attributes, "os\\..*")
                  - delete_matching_keys(attributes, "process\\..*")
                  - delete_matching_keys(attributes, "service.version")
              - context: span
                statements:
                  - delete_matching_keys(attributes, "net\\..*")
                  - delete_matching_keys(attributes, "rpc.system")
                  - delete_matching_keys(attributes, "rpc.request.headers\\..*")
        exporters:
          file:
            path: /out/traces.json
            flush_interval: 1s
        service:
          pipelines:
            traces:
              receivers: [otlp]
              processors: [transform, batch]
              exporters: [file]
    command: [ "--config", "env:OTEL_CONFIG" ]
