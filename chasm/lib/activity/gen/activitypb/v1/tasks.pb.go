// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/chasm/lib/activity/proto/v1/tasks.proto

package activitypb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityDispatchTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current attempt number for this activity execution. Since task validation/exec happen outside of a lock, we
	// need to guard against any concurrent operations where the originally intended task may be outdated.
	Attempt       int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityDispatchTask) Reset() {
	*x = ActivityDispatchTask{}
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityDispatchTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDispatchTask) ProtoMessage() {}

func (x *ActivityDispatchTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDispatchTask.ProtoReflect.Descriptor instead.
func (*ActivityDispatchTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityDispatchTask) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

type ScheduleToStartTimeoutTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current attempt number for this activity execution.
	Attempt       int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleToStartTimeoutTask) Reset() {
	*x = ScheduleToStartTimeoutTask{}
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleToStartTimeoutTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleToStartTimeoutTask) ProtoMessage() {}

func (x *ScheduleToStartTimeoutTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleToStartTimeoutTask.ProtoReflect.Descriptor instead.
func (*ScheduleToStartTimeoutTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleToStartTimeoutTask) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

type ScheduleToCloseTimeoutTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current attempt number for this activity execution.
	Attempt       int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleToCloseTimeoutTask) Reset() {
	*x = ScheduleToCloseTimeoutTask{}
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleToCloseTimeoutTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleToCloseTimeoutTask) ProtoMessage() {}

func (x *ScheduleToCloseTimeoutTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleToCloseTimeoutTask.ProtoReflect.Descriptor instead.
func (*ScheduleToCloseTimeoutTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *ScheduleToCloseTimeoutTask) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

type StartToCloseTimeoutTask struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current attempt number for this activity execution.
	Attempt       int32 `protobuf:"varint,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartToCloseTimeoutTask) Reset() {
	*x = StartToCloseTimeoutTask{}
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartToCloseTimeoutTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartToCloseTimeoutTask) ProtoMessage() {}

func (x *StartToCloseTimeoutTask) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartToCloseTimeoutTask.ProtoReflect.Descriptor instead.
func (*StartToCloseTimeoutTask) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescGZIP(), []int{3}
}

func (x *StartToCloseTimeoutTask) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

var File_temporal_server_chasm_lib_activity_proto_v1_tasks_proto protoreflect.FileDescriptor

const file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDesc = "" +
	"\n" +
	"7temporal/server/chasm/lib/activity/proto/v1/tasks.proto\x12+temporal.server.chasm.lib.activity.proto.v1\"0\n" +
	"\x14ActivityDispatchTask\x12\x18\n" +
	"\aattempt\x18\x01 \x01(\x05R\aattempt\"6\n" +
	"\x1aScheduleToStartTimeoutTask\x12\x18\n" +
	"\aattempt\x18\x01 \x01(\x05R\aattempt\"6\n" +
	"\x1aScheduleToCloseTimeoutTask\x12\x18\n" +
	"\aattempt\x18\x01 \x01(\x05R\aattempt\"3\n" +
	"\x17StartToCloseTimeoutTask\x12\x18\n" +
	"\aattempt\x18\x01 \x01(\x05R\aattemptBDZBgo.temporal.io/server/chasm/lib/activity/gen/activitypb;activitypbb\x06proto3"

var (
	file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescOnce sync.Once
	file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescData []byte
)

func file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescGZIP() []byte {
	file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescOnce.Do(func() {
		file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDesc), len(file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDesc)))
	})
	return file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDescData
}

var file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_goTypes = []any{
	(*ActivityDispatchTask)(nil),       // 0: temporal.server.chasm.lib.activity.proto.v1.ActivityDispatchTask
	(*ScheduleToStartTimeoutTask)(nil), // 1: temporal.server.chasm.lib.activity.proto.v1.ScheduleToStartTimeoutTask
	(*ScheduleToCloseTimeoutTask)(nil), // 2: temporal.server.chasm.lib.activity.proto.v1.ScheduleToCloseTimeoutTask
	(*StartToCloseTimeoutTask)(nil),    // 3: temporal.server.chasm.lib.activity.proto.v1.StartToCloseTimeoutTask
}
var file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_init() }
func file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_init() {
	if File_temporal_server_chasm_lib_activity_proto_v1_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDesc), len(file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_goTypes,
		DependencyIndexes: file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_depIdxs,
		MessageInfos:      file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_msgTypes,
	}.Build()
	File_temporal_server_chasm_lib_activity_proto_v1_tasks_proto = out.File
	file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_goTypes = nil
	file_temporal_server_chasm_lib_activity_proto_v1_tasks_proto_depIdxs = nil
}
