// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/chasm/lib/scheduler/proto/v1/request_response.proto

package schedulerpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v11 "go.temporal.io/api/common/v1"
	v1 "go.temporal.io/api/schedule/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace the schedule will be created in.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// User-provided schedule ID.
	ScheduleId string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// A unique identifier for this create request for idempotence. Typically UUIDv4.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Identity of the user/worker performing this update.
	Identity     string            `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	Schedule     *v1.Schedule      `protobuf:"bytes,5,opt,name=schedule,proto3" json:"schedule,omitempty"`
	InitialPatch *v1.SchedulePatch `protobuf:"bytes,6,opt,name=initial_patch,json=initialPatch,proto3" json:"initial_patch,omitempty"`
	// User-provided search attributes to be attached to the schedule itself.
	SearchAttributes *v11.SearchAttributes `protobuf:"bytes,10,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	// User-provided memo to be attached to the schedule itself.
	Memo          *v11.Memo `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScheduleRequest) Reset() {
	*x = CreateScheduleRequest{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleRequest) ProtoMessage() {}

func (x *CreateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleRequest.ProtoReflect.Descriptor instead.
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{0}
}

func (x *CreateScheduleRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *CreateScheduleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateScheduleRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *CreateScheduleRequest) GetSchedule() *v1.Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *CreateScheduleRequest) GetInitialPatch() *v1.SchedulePatch {
	if x != nil {
		return x.InitialPatch
	}
	return nil
}

func (x *CreateScheduleRequest) GetSearchAttributes() *v11.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *CreateScheduleRequest) GetMemo() *v11.Memo {
	if x != nil {
		return x.Memo
	}
	return nil
}

type CreateScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConflictToken int64                  `protobuf:"varint,1,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateScheduleResponse) Reset() {
	*x = CreateScheduleResponse{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateScheduleResponse) ProtoMessage() {}

func (x *CreateScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateScheduleResponse.ProtoReflect.Descriptor instead.
func (*CreateScheduleResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{1}
}

func (x *CreateScheduleResponse) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

type UpdateScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace the schedule is in.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// User-provided schedule ID.
	ScheduleId string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// A unique identifier for this update request for idempotence. Typically UUIDv4.
	RequestId string       `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Schedule  *v1.Schedule `protobuf:"bytes,4,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// User-provided search attributes to be attached to the schedule itself.
	SearchAttributes *v11.SearchAttributes `protobuf:"bytes,10,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	// User-provided memo to be attached to the schedule itself.
	Memo *v11.Memo `protobuf:"bytes,11,opt,name=memo,proto3" json:"memo,omitempty"`
	// Conflict token from a previous read, for optimistic concurrency control.
	ConflictToken int64 `protobuf:"varint,12,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	// Identity of the user/worker performing this update.
	Identity      string `protobuf:"bytes,13,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScheduleRequest) Reset() {
	*x = UpdateScheduleRequest{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleRequest) ProtoMessage() {}

func (x *UpdateScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduleRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateScheduleRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *UpdateScheduleRequest) GetSchedule() *v1.Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *UpdateScheduleRequest) GetSearchAttributes() *v11.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *UpdateScheduleRequest) GetMemo() *v11.Memo {
	if x != nil {
		return x.Memo
	}
	return nil
}

func (x *UpdateScheduleRequest) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

func (x *UpdateScheduleRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type UpdateScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConflictToken int64                  `protobuf:"varint,1,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScheduleResponse) Reset() {
	*x = UpdateScheduleResponse{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduleResponse) ProtoMessage() {}

func (x *UpdateScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduleResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduleResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateScheduleResponse) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

type PatchScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace the schedule is in.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// User-provided schedule ID.
	ScheduleId string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// A unique identifier for this patch request for idempotence. Typically UUIDv4.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Identity of the user/worker performing this patch.
	Identity string `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	// Patch to apply to the schedule.
	Patch *v1.SchedulePatch `protobuf:"bytes,5,opt,name=patch,proto3" json:"patch,omitempty"`
	// Conflict token from a previous read, for optimistic concurrency control.
	ConflictToken int64 `protobuf:"varint,10,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchScheduleRequest) Reset() {
	*x = PatchScheduleRequest{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchScheduleRequest) ProtoMessage() {}

func (x *PatchScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchScheduleRequest.ProtoReflect.Descriptor instead.
func (*PatchScheduleRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{4}
}

func (x *PatchScheduleRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PatchScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *PatchScheduleRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PatchScheduleRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *PatchScheduleRequest) GetPatch() *v1.SchedulePatch {
	if x != nil {
		return x.Patch
	}
	return nil
}

func (x *PatchScheduleRequest) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

type PatchScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConflictToken int64                  `protobuf:"varint,1,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PatchScheduleResponse) Reset() {
	*x = PatchScheduleResponse{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PatchScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchScheduleResponse) ProtoMessage() {}

func (x *PatchScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchScheduleResponse.ProtoReflect.Descriptor instead.
func (*PatchScheduleResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{5}
}

func (x *PatchScheduleResponse) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

type DeleteScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace the schedule is in.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// User-provided schedule ID.
	ScheduleId string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	// Identity of the user/worker performing this deletion.
	Identity      string `protobuf:"bytes,3,opt,name=identity,proto3" json:"identity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScheduleRequest) Reset() {
	*x = DeleteScheduleRequest{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleRequest) ProtoMessage() {}

func (x *DeleteScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleRequest.ProtoReflect.Descriptor instead.
func (*DeleteScheduleRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteScheduleRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

func (x *DeleteScheduleRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

type DeleteScheduleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteScheduleResponse) Reset() {
	*x = DeleteScheduleResponse{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteScheduleResponse) ProtoMessage() {}

func (x *DeleteScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteScheduleResponse.ProtoReflect.Descriptor instead.
func (*DeleteScheduleResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{7}
}

type DescribeScheduleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace the schedule is in.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// User-provided schedule ID.
	ScheduleId    string `protobuf:"bytes,2,opt,name=schedule_id,json=scheduleId,proto3" json:"schedule_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeScheduleRequest) Reset() {
	*x = DescribeScheduleRequest{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScheduleRequest) ProtoMessage() {}

func (x *DescribeScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScheduleRequest.ProtoReflect.Descriptor instead.
func (*DescribeScheduleRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeScheduleRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeScheduleRequest) GetScheduleId() string {
	if x != nil {
		return x.ScheduleId
	}
	return ""
}

type DescribeScheduleResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Schedule         *v1.Schedule           `protobuf:"bytes,1,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Info             *v1.ScheduleInfo       `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	Memo             *v11.Memo              `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo,omitempty"`
	SearchAttributes *v11.SearchAttributes  `protobuf:"bytes,4,opt,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	ConflictToken    int64                  `protobuf:"varint,5,opt,name=conflict_token,json=conflictToken,proto3" json:"conflict_token,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DescribeScheduleResponse) Reset() {
	*x = DescribeScheduleResponse{}
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeScheduleResponse) ProtoMessage() {}

func (x *DescribeScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeScheduleResponse.ProtoReflect.Descriptor instead.
func (*DescribeScheduleResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeScheduleResponse) GetSchedule() *v1.Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *DescribeScheduleResponse) GetInfo() *v1.ScheduleInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *DescribeScheduleResponse) GetMemo() *v11.Memo {
	if x != nil {
		return x.Memo
	}
	return nil
}

func (x *DescribeScheduleResponse) GetSearchAttributes() *v11.SearchAttributes {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *DescribeScheduleResponse) GetConflictToken() int64 {
	if x != nil {
		return x.ConflictToken
	}
	return 0
}

var File_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto protoreflect.FileDescriptor

const file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDesc = "" +
	"\n" +
	"Ctemporal/server/chasm/lib/scheduler/proto/v1/request_response.proto\x12,temporal.server.chasm.lib.scheduler.proto.v1\x1a&temporal/api/schedule/v1/message.proto\x1a$temporal/api/common/v1/message.proto\"\xad\x03\n" +
	"\x15CreateScheduleRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vschedule_id\x18\x02 \x01(\tR\n" +
	"scheduleId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12\x1a\n" +
	"\bidentity\x18\x04 \x01(\tR\bidentity\x12>\n" +
	"\bschedule\x18\x05 \x01(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\x12L\n" +
	"\rinitial_patch\x18\x06 \x01(\v2'.temporal.api.schedule.v1.SchedulePatchR\finitialPatch\x12U\n" +
	"\x11search_attributes\x18\n" +
	" \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\x120\n" +
	"\x04memo\x18\v \x01(\v2\x1c.temporal.api.common.v1.MemoR\x04memo\"?\n" +
	"\x16CreateScheduleResponse\x12%\n" +
	"\x0econflict_token\x18\x01 \x01(\x03R\rconflictToken\"\x86\x03\n" +
	"\x15UpdateScheduleRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vschedule_id\x18\x02 \x01(\tR\n" +
	"scheduleId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12>\n" +
	"\bschedule\x18\x04 \x01(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\x12U\n" +
	"\x11search_attributes\x18\n" +
	" \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\x120\n" +
	"\x04memo\x18\v \x01(\v2\x1c.temporal.api.common.v1.MemoR\x04memo\x12%\n" +
	"\x0econflict_token\x18\f \x01(\x03R\rconflictToken\x12\x1a\n" +
	"\bidentity\x18\r \x01(\tR\bidentity\"?\n" +
	"\x16UpdateScheduleResponse\x12%\n" +
	"\x0econflict_token\x18\x01 \x01(\x03R\rconflictToken\"\xfb\x01\n" +
	"\x14PatchScheduleRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vschedule_id\x18\x02 \x01(\tR\n" +
	"scheduleId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId\x12\x1a\n" +
	"\bidentity\x18\x04 \x01(\tR\bidentity\x12=\n" +
	"\x05patch\x18\x05 \x01(\v2'.temporal.api.schedule.v1.SchedulePatchR\x05patch\x12%\n" +
	"\x0econflict_token\x18\n" +
	" \x01(\x03R\rconflictToken\">\n" +
	"\x15PatchScheduleResponse\x12%\n" +
	"\x0econflict_token\x18\x01 \x01(\x03R\rconflictToken\"w\n" +
	"\x15DeleteScheduleRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vschedule_id\x18\x02 \x01(\tR\n" +
	"scheduleId\x12\x1a\n" +
	"\bidentity\x18\x03 \x01(\tR\bidentity\"\x18\n" +
	"\x16DeleteScheduleResponse\"]\n" +
	"\x17DescribeScheduleRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vschedule_id\x18\x02 \x01(\tR\n" +
	"scheduleId\"\xc6\x02\n" +
	"\x18DescribeScheduleResponse\x12>\n" +
	"\bschedule\x18\x01 \x01(\v2\".temporal.api.schedule.v1.ScheduleR\bschedule\x12:\n" +
	"\x04info\x18\x02 \x01(\v2&.temporal.api.schedule.v1.ScheduleInfoR\x04info\x120\n" +
	"\x04memo\x18\x03 \x01(\v2\x1c.temporal.api.common.v1.MemoR\x04memo\x12U\n" +
	"\x11search_attributes\x18\x04 \x01(\v2(.temporal.api.common.v1.SearchAttributesR\x10searchAttributes\x12%\n" +
	"\x0econflict_token\x18\x05 \x01(\x03R\rconflictTokenBGZEgo.temporal.io/server/chasm/lib/scheduler/gen/schedulerpb;schedulerpbb\x06proto3"

var (
	file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescOnce sync.Once
	file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescData []byte
)

func file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescGZIP() []byte {
	file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescOnce.Do(func() {
		file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDesc), len(file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDesc)))
	})
	return file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDescData
}

var file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_goTypes = []any{
	(*CreateScheduleRequest)(nil),    // 0: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleRequest
	(*CreateScheduleResponse)(nil),   // 1: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleResponse
	(*UpdateScheduleRequest)(nil),    // 2: temporal.server.chasm.lib.scheduler.proto.v1.UpdateScheduleRequest
	(*UpdateScheduleResponse)(nil),   // 3: temporal.server.chasm.lib.scheduler.proto.v1.UpdateScheduleResponse
	(*PatchScheduleRequest)(nil),     // 4: temporal.server.chasm.lib.scheduler.proto.v1.PatchScheduleRequest
	(*PatchScheduleResponse)(nil),    // 5: temporal.server.chasm.lib.scheduler.proto.v1.PatchScheduleResponse
	(*DeleteScheduleRequest)(nil),    // 6: temporal.server.chasm.lib.scheduler.proto.v1.DeleteScheduleRequest
	(*DeleteScheduleResponse)(nil),   // 7: temporal.server.chasm.lib.scheduler.proto.v1.DeleteScheduleResponse
	(*DescribeScheduleRequest)(nil),  // 8: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleRequest
	(*DescribeScheduleResponse)(nil), // 9: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleResponse
	(*v1.Schedule)(nil),              // 10: temporal.api.schedule.v1.Schedule
	(*v1.SchedulePatch)(nil),         // 11: temporal.api.schedule.v1.SchedulePatch
	(*v11.SearchAttributes)(nil),     // 12: temporal.api.common.v1.SearchAttributes
	(*v11.Memo)(nil),                 // 13: temporal.api.common.v1.Memo
	(*v1.ScheduleInfo)(nil),          // 14: temporal.api.schedule.v1.ScheduleInfo
}
var file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_depIdxs = []int32{
	10, // 0: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleRequest.schedule:type_name -> temporal.api.schedule.v1.Schedule
	11, // 1: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleRequest.initial_patch:type_name -> temporal.api.schedule.v1.SchedulePatch
	12, // 2: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleRequest.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	13, // 3: temporal.server.chasm.lib.scheduler.proto.v1.CreateScheduleRequest.memo:type_name -> temporal.api.common.v1.Memo
	10, // 4: temporal.server.chasm.lib.scheduler.proto.v1.UpdateScheduleRequest.schedule:type_name -> temporal.api.schedule.v1.Schedule
	12, // 5: temporal.server.chasm.lib.scheduler.proto.v1.UpdateScheduleRequest.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	13, // 6: temporal.server.chasm.lib.scheduler.proto.v1.UpdateScheduleRequest.memo:type_name -> temporal.api.common.v1.Memo
	11, // 7: temporal.server.chasm.lib.scheduler.proto.v1.PatchScheduleRequest.patch:type_name -> temporal.api.schedule.v1.SchedulePatch
	10, // 8: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleResponse.schedule:type_name -> temporal.api.schedule.v1.Schedule
	14, // 9: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleResponse.info:type_name -> temporal.api.schedule.v1.ScheduleInfo
	13, // 10: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleResponse.memo:type_name -> temporal.api.common.v1.Memo
	12, // 11: temporal.server.chasm.lib.scheduler.proto.v1.DescribeScheduleResponse.search_attributes:type_name -> temporal.api.common.v1.SearchAttributes
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_init() }
func file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_init() {
	if File_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDesc), len(file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_goTypes,
		DependencyIndexes: file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_depIdxs,
		MessageInfos:      file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_msgTypes,
	}.Build()
	File_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto = out.File
	file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_goTypes = nil
	file_temporal_server_chasm_lib_scheduler_proto_v1_request_response_proto_depIdxs = nil
}
