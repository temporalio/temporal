syntax = "proto3";

package temporal.server.chasm.lib.callbacks.proto.v1;

option go_package = "go.temporal.io/server/chasm/lib/callbacks/gen/callbackspb;callbackspb";

import "google/protobuf/timestamp.proto";
import "temporal/api/common/v1/message.proto";
import "temporal/api/failure/v1/message.proto";
import "temporal/server/api/enums/v1/common.proto";

message CallbackState {
    // Trigger for when the workflow is closed.
    message WorkflowClosed {}

    message Trigger {
        oneof variant {
            WorkflowClosed workflow_closed = 1;
        }
    }

    // Information on how this callback should be invoked (e.g. its URL and type).
    Callback callback = 1;
    // Trigger for this callback.
    Trigger trigger = 2;
    // The time when the callback was registered.
    google.protobuf.Timestamp registration_time = 3;

    temporal.server.api.enums.v1.CallbackState state = 4;
    // The number of attempts made to deliver the callback.
    // This number represents a minimum bound since the attempt is incremented after the callback request completes.
    int32 attempt = 5;

    // The time when the last attempt completed.
    google.protobuf.Timestamp last_attempt_complete_time = 6;
    // The last attempt's failure, if any.
    temporal.api.failure.v1.Failure last_attempt_failure = 7;
    // The time when the next attempt is scheduled.
    google.protobuf.Timestamp next_attempt_schedule_time = 8;

    // Request ID that added the callback.
    string request_id = 9;
}


message Callback {
    message Nexus {
        // Callback URL.
        // (-- api-linter: core::0140::uri=disabled
        //     aip.dev/not-precedent: Not respecting aip here. --)
        string url = 1;
        // Header to attach to callback request.
        map<string, string> header = 2;
    }

    message CHASM {
        // namespace id of the target state machine.
        string namespace_id = 1;
        // ID of the workflow that the target state machine is attached to.
        string workflow_id = 2;
        // Run id of said workflow.
        string run_id = 3;
        // A reference to the component.
        repeated string component_path = 4;
        // Method to invoke on target component
        string method = 5;
    }

    reserved 1; // For a generic callback mechanism to be added later.
    oneof variant {
        Nexus nexus = 2;
        CHASM chasm = 3;
    }

    repeated temporal.api.common.v1.Link links = 100;
}
