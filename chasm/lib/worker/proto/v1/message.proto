syntax = "proto3";

package temporal.server.chasm.lib.worker.proto.v1;

option go_package = "go.temporal.io/server/chasm/lib/worker/gen/workerpb;workerpb";

import "google/protobuf/timestamp.proto";
import "temporal/api/worker/v1/message.proto";

// Metadata about the worker.
message WorkerState {
    // Time at which the lease expires.
    google.protobuf.Timestamp lease_expiration_time = 1;
    
    // Current status of the worker.
    WorkerStatus status = 2;

    // Worker heartbeat information including metadata and capabilities.
    temporal.api.worker.v1.WorkerHeartbeat worker_heartbeat = 3;
}

// Status of a worker.
enum WorkerStatus {
    WORKER_STATUS_UNSPECIFIED = 0;
    WORKER_STATUS_ACTIVE = 1;      // Worker is actively sending heartbeats
    WORKER_STATUS_INACTIVE = 2;    // Worker lease has expired, awaiting cleanup
    WORKER_STATUS_CLEANED_UP = 3;  // Worker has been cleaned up and removed
}
