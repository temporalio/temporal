log:
    stdout: true
    level: {{ default .Env.LOG_LEVEL "info" }}

persistence:
    numHistoryShards: {{ default .Env.NUM_HISTORY_SHARDS "4" }}
    defaultStore: default
    visibilityStore: visibility
    {{- $es := default .Env.ENABLE_ES "false" | lower -}}
    {{- if eq $es "true" }}
    advancedVisibilityStore: es-visibility
    {{- end }}
    datastores:
        {{- $db := default .Env.DB "cassandra" | lower -}}
        {{- if eq $db "cassandra" }}
        default:
            cassandra:
                hosts: {{ default .Env.CASSANDRA_SEEDS "" }}
                keyspace: {{ default .Env.KEYSPACE "temporal" }}
        visibility:
            cassandra:
                hosts: {{ default .Env.CASSANDRA_SEEDS "" }}
                keyspace: {{ default .Env.VISIBILITY_KEYSPACE "temporal_visibility" }}
        {{- else if eq $db "mysql" }}
        default:
            sql:
                pluginName: "mysql"
                databaseName: {{ default .Env.DBNAME "temporal" }}
                connectAddr: "{{ default .Env.MYSQL_SEEDS "" }}:{{ default .Env.DB_PORT "3306" }}"
                connectProtocol: "tcp"
                user: {{ default .Env.MYSQL_USER "" }}
                password: {{ default .Env.MYSQL_PWD "" }}
                {{- if .Env.MYSQL_TX_ISOLATION_COMPAT }}
                connectAttributes:
                    tx_isolation: 'READ-COMMITTED'
                {{- end }}
                maxConns: {{ default .Env.SQL_MAX_CONNS "20" }}
                maxIdleConns: {{ default .Env.SQL_MAX_IDLE_CONNS "20" }}
                maxConnLifetime: {{ default .Env.SQL_MAX_CONN_TIME "1h" }}
        visibility:
            sql:
                pluginName: "mysql"
                databaseName: {{ default .Env.VISIBILITY_DBNAME "temporal_visibility" }}
                connectAddr: "{{ default .Env.MYSQL_SEEDS "" }}:{{ default .Env.DB_PORT "3306" }}"
                connectProtocol: "tcp"
                user: {{ default .Env.MYSQL_USER "" }}
                password: {{ default .Env.MYSQL_PWD "" }}
                {{- if .Env.MYSQL_TX_ISOLATION_COMPAT }}
                connectAttributes:
                    tx_isolation: 'READ-COMMITTED'
                {{- end }}
                maxConns: {{ default .Env.SQL_VIS_MAX_CONNS "20" }}
                maxIdleConns: {{ default .Env.SQL_VIS_MAX_IDLE_CONNS "20" }}
                maxConnLifetime: {{ default .Env.SQL_VIS_MAX_CONN_TIME "1h" }}
        {{- else if eq $db "postgresql" }}
        default:
            sql:
                pluginName: "postgres"
                databaseName: {{ default .Env.DBNAME "temporal" }}
                connectAddr: "{{ default .Env.POSTGRES_SEEDS "" }}:{{ default .Env.DB_PORT "5432" }}"
                connectProtocol: "tcp"
                user: {{ default .Env.POSTGRES_USER "" }}
                password: {{ default .Env.POSTGRES_PWD "" }}
                maxConns: {{ default .Env.SQL_MAX_CONNS "20" }}
                maxIdleConns: {{ default .Env.SQL_MAX_IDLE_CONNS "20" }}
                maxConnLifetime: {{ default .Env.SQL_MAX_CONN_TIME "1h" }}
        visibility:
            sql:
                pluginName: "postgres"
                databaseName: {{ default .Env.VISIBILITY_DBNAME "temporal_visibility" }}
                connectAddr: "{{ default .Env.POSTGRES_SEEDS "" }}:{{ default .Env.DB_PORT "5432" }}"
                connectProtocol: "tcp"
                user: {{ default .Env.POSTGRES_USER "" }}
                password: {{ default .Env.POSTGRES_PWD "" }}
                maxConns: {{ default .Env.SQL_VIS_MAX_CONNS "20" }}
                maxIdleConns: {{ default .Env.SQL_VIS_MAX_IDLE_CONNS "20" }}
                maxConnLifetime: {{ default .Env.SQL_VIS_MAX_CONN_TIME "1h" }}
        {{- end }}
        {{- if eq $es "true" }}
        es-visibility:
            elasticsearch:
                url:
                    scheme: "http"
                    host: "{{ default .Env.ES_SEEDS "" }}:9200"
                indices:
                    visibility: temporal-visibility-dev
        {{- end }}

global:
    membership:
        maxJoinDuration: 30s
        broadcastAddress: {{ default .Env.TEMPORAL_BROADCAST_ADDRESS "" }}
    tls:
        internode:
            server:
                certFile: {{ default .Env.TEMPORAL_TLS_SERVER_CERT "" }}
                keyFile: {{ default .Env.TEMPORAL_TLS_SERVER_KEY "" }}
                requireClientAuth: {{ default .Env.TEMPORAL_TLS_REQUIRE_CLIENT_AUTH "false" }}
                clientCaFiles:
                    - {{ default .Env.TEMPORAL_TLS_SERVER_CA_CERT "" }}
            client:
                rootCaFiles:
                    - {{ default .Env.TEMPORAL_TLS_SERVER_CA_CERT "" }}
        frontend:
            server:
                certFile: {{ default .Env.TEMPORAL_TLS_FRONTEND_CERT "" }}
                keyFile: {{ default .Env.TEMPORAL_TLS_FRONTEND_KEY "" }}
                requireClientAuth: {{ default .Env.TEMPORAL_TLS_REQUIRE_CLIENT_AUTH "false" }}
                clientCaFiles:
                    - {{ default .Env.TEMPORAL_TLS_CLIENT1_CA_CERT "" }}
                    - {{ default .Env.TEMPORAL_TLS_CLIENT2_CA_CERT "" }}
            client:
                rootCaFiles:
                    - {{ default .Env.TEMPORAL_TLS_SERVER_CA_CERT "" }}

services:
    frontend:
        rpc:
            grpcPort: 7233
            membershipPort: 6933
            bindOnIP: {{ default .Env.BIND_ON_IP "127.0.0.1" }}
        {{- if .Env.STATSD_ENDPOINT }}
        metrics:
            statsd:
                hostPort: {{ .Env.STATSD_ENDPOINT }}
                prefix: "frontend"
        {{- else if .Env.PROMETHEUS_ENDPOINT }}
        metrics:
            prometheus:
                timerType: {{ default .Env.PROMETHEUS_TIMER_TYPE "histogram" }}
                listenAddress: {{ .Env.PROMETHEUS_ENDPOINT }}
        {{- end }}

    matching:
        rpc:
            grpcPort: 7235
            membershipPort: 6935
            bindOnIP: {{ default .Env.BIND_ON_IP "127.0.0.1" }}
        {{- if .Env.STATSD_ENDPOINT }}
        metrics:
            statsd:
                hostPort: {{ .Env.STATSD_ENDPOINT }}
                prefix: "matching"
        {{- else if .Env.PROMETHEUS_ENDPOINT }}
        metrics:
            prometheus:
                timerType: {{ default .Env.PROMETHEUS_TIMER_TYPE "histogram" }}
                listenAddress: {{ .Env.PROMETHEUS_ENDPOINT }}
        {{- end }}

    history:
        rpc:
            grpcPort: 7234
            membershipPort: 6934
            bindOnIP: {{ default .Env.BIND_ON_IP "127.0.0.1" }}
        {{- if .Env.STATSD_ENDPOINT }}
        metrics:
            statsd:
                hostPort: {{ .Env.STATSD_ENDPOINT }}
                prefix: "history"
        {{- else if .Env.PROMETHEUS_ENDPOINT }}
        metrics:
            prometheus:
                timerType: {{ default .Env.PROMETHEUS_TIMER_TYPE "histogram" }}
                listenAddress: {{ .Env.PROMETHEUS_ENDPOINT }}
        {{- end }}

    worker:
        rpc:
            grpcPort: 7239
            membershipPort: 6939
            bindOnIP: {{ default .Env.BIND_ON_IP "127.0.0.1" }}
        {{- if .Env.STATSD_ENDPOINT }}
        metrics:
            statsd:
                hostPort: {{ .Env.STATSD_ENDPOINT }}
                prefix: "worker"
        {{- else if .Env.PROMETHEUS_ENDPOINT }}
        metrics:
            prometheus:
                timerType: {{ default .Env.PROMETHEUS_TIMER_TYPE "histogram" }}
                listenAddress: {{ .Env.PROMETHEUS_ENDPOINT }}
        {{- end }}

clusterMetadata:
    enableGlobalNamespace: false
    failoverVersionIncrement: 10
    masterClusterName: "active"
    currentClusterName: "active"
    clusterInformation:
        active:
            enabled: true
            initialFailoverVersion: 1
            rpcName: "frontend"
            rpcAddress: "127.0.0.1:7233"

dcRedirectionPolicy:
    policy: "noop"
    toDC: ""

archival:
  history:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"
  visibility:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"

namespaceDefaults:
  archival:
    history:
      state: "disabled"
      URI: "file:///tmp/temporal_archival/development"
    visibility:
      state: "disabled"
      URI: "file:///tmp/temporal_vis_archival/development"

kafka:
    tls:
        enabled: false
    clusters:
        test:
            brokers:
                - {{ default .Env.KAFKA_SEEDS "" }}:9092
    topics:
        temporal-visibility-dev:
            cluster: test
        temporal-visibility-dev-dlq:
            cluster: test
    applications:
        visibility:
            topic: temporal-visibility-dev
            dlq-topic: temporal-visibility-dev-dlq

{{ $publicIp := default .Env.BIND_ON_IP "127.0.0.1" -}}
{{- $defaultPublicHostPost := (print $publicIp ":7233") -}}
publicClient:
    hostPort: {{ default .Env.PUBLIC_FRONTEND_ADDRESS $defaultPublicHostPost }}

dynamicConfigClient:
    filepath: {{ default .Env.DYNAMIC_CONFIG_FILE_PATH "/etc/temporal/config/dynamicconfig" }}
    pollInterval: "60s"
