# Runs all required Temporal service dependencies.
# Use to run service locally or run integration tests.
# Include platform specific file also:
# docker-compose -f docker-compose.yml -f docker-compose.linux.yml up
version: "3.5"

services:
  mysql:
    image: mysql:5.7
    container_name: temporal-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - temporal-dependencies-network
  cassandra:
    image: cassandra:3.11
    container_name: temporal-cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_LISTEN_ADDRESS: 127.0.0.1
    networks:
      - temporal-dependencies-network
  postgresql:
    image: postgres:9.6
    container_name: temporal-postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    networks:
      - temporal-dependencies-network
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: temporal-zookeeper
    networks:
      - temporal-dependencies-network
  kafka:
    image: wurstmeister/kafka:2.12-2.1.1
    container_name: temporal-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - temporal-dependencies-network
  elasticsearch:
    image: elasticsearch:6.8.8
    container_name: temporal-elasticsearch
    ports:
      - "9200:9200"
    environment:
      # Make ES available both on _local_ and _site_,
      # and use use _local_ for the publish_host.
      #
      # See here for details on network configuration:
      # https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
      - network.host=_local_,_site_
      - network.publish_host=_local_
      # Set storage limit to low number.
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms100m -Xmx100m
    depends_on:
      - kafka
    networks:
      - temporal-dependencies-network
  temporal-web:
    image: temporalio/web:1.3.0
    container_name: temporal-web

networks:
  temporal-dependencies-network:
    driver: bridge
    name: temporal-dependencies-network

