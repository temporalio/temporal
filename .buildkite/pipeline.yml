steps:
  - label: ":golang: build"
    agents:
      queue: "default"
      docker: "*"
    command: "make"
    plugins:
      - docker-compose#v3.1.0:
          run: build
          config: docker/buildkite/docker-compose.yml

  - wait

  - label: ":golang: integration test with cassandra 1"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with mysql 1"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with postgresql 1"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-postgresql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with cassandra 2"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with mysql 2"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with postgresql 2"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-postgresql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with cassandra 3"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with mysql 3"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with postgresql 3"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-postgresql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with cassandra 4"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-cassandra
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with mysql 4"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-mysql
          config: docker/buildkite/docker-compose.yml

  - label: ":golang: integration test with postgresql 4"
    agents:
      queue: "default"
      docker: "*"
    command: "make cover_integration_profile"
    artifact_paths:
      - "build/coverage/*.out"
    retry:
      automatic:
        limit: 1
    plugins:
      - docker-compose#v3.1.0:
          run: integration-test-postgresql
          config: docker/buildkite/docker-compose.yml


