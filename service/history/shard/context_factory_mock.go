// Code generated by MockGen. DO NOT EDIT.
// Source: context_factory.go
//
// Generated by this command:
//
//	mockgen -package shard -source context_factory.go -destination context_factory_mock.go
//

// Package shard is a generated GoMock package.
package shard

import (
	reflect "reflect"

	interfaces "go.temporal.io/server/service/history/interfaces"
	gomock "go.uber.org/mock/gomock"
)

// MockContextFactory is a mock of ContextFactory interface.
type MockContextFactory struct {
	ctrl     *gomock.Controller
	recorder *MockContextFactoryMockRecorder
	isgomock struct{}
}

// MockContextFactoryMockRecorder is the mock recorder for MockContextFactory.
type MockContextFactoryMockRecorder struct {
	mock *MockContextFactory
}

// NewMockContextFactory creates a new mock instance.
func NewMockContextFactory(ctrl *gomock.Controller) *MockContextFactory {
	mock := &MockContextFactory{ctrl: ctrl}
	mock.recorder = &MockContextFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContextFactory) EXPECT() *MockContextFactoryMockRecorder {
	return m.recorder
}

// CreateContext mocks base method.
func (m *MockContextFactory) CreateContext(shardID int32, closeCallback CloseCallback) (interfaces.ControllableContext, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateContext", shardID, closeCallback)
	ret0, _ := ret[0].(interfaces.ControllableContext)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateContext indicates an expected call of CreateContext.
func (mr *MockContextFactoryMockRecorder) CreateContext(shardID, closeCallback any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateContext", reflect.TypeOf((*MockContextFactory)(nil).CreateContext), shardID, closeCallback)
}
