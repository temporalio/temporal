// Code generated by MockGen. DO NOT EDIT.
// Source: history_events_handler.go
//
// Generated by this command:
//
//	mockgen -package eventhandler -source history_events_handler.go -destination history_events_handler_mock.go
//

// Package eventhandler is a generated GoMock package.
package eventhandler

import (
	context "context"
	reflect "reflect"

	history "go.temporal.io/api/history/v1"
	history0 "go.temporal.io/server/api/history/v1"
	workflow "go.temporal.io/server/api/workflow/v1"
	definition "go.temporal.io/server/common/definition"
	gomock "go.uber.org/mock/gomock"
)

// MockHistoryEventsHandler is a mock of HistoryEventsHandler interface.
type MockHistoryEventsHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryEventsHandlerMockRecorder
	isgomock struct{}
}

// MockHistoryEventsHandlerMockRecorder is the mock recorder for MockHistoryEventsHandler.
type MockHistoryEventsHandlerMockRecorder struct {
	mock *MockHistoryEventsHandler
}

// NewMockHistoryEventsHandler creates a new mock instance.
func NewMockHistoryEventsHandler(ctrl *gomock.Controller) *MockHistoryEventsHandler {
	mock := &MockHistoryEventsHandler{ctrl: ctrl}
	mock.recorder = &MockHistoryEventsHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryEventsHandler) EXPECT() *MockHistoryEventsHandlerMockRecorder {
	return m.recorder
}

// HandleHistoryEvents mocks base method.
func (m *MockHistoryEventsHandler) HandleHistoryEvents(ctx context.Context, sourceClusterName string, workflowKey definition.WorkflowKey, baseExecutionInfo *workflow.BaseExecutionInfo, versionHistoryItems []*history0.VersionHistoryItem, historyEvents [][]*history.HistoryEvent, newEvents []*history.HistoryEvent, newRunID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleHistoryEvents", ctx, sourceClusterName, workflowKey, baseExecutionInfo, versionHistoryItems, historyEvents, newEvents, newRunID)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleHistoryEvents indicates an expected call of HandleHistoryEvents.
func (mr *MockHistoryEventsHandlerMockRecorder) HandleHistoryEvents(ctx, sourceClusterName, workflowKey, baseExecutionInfo, versionHistoryItems, historyEvents, newEvents, newRunID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleHistoryEvents", reflect.TypeOf((*MockHistoryEventsHandler)(nil).HandleHistoryEvents), ctx, sourceClusterName, workflowKey, baseExecutionInfo, versionHistoryItems, historyEvents, newEvents, newRunID)
}
