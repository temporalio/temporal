// Code generated by MockGen. DO NOT EDIT.
// Source: nDCStateRebuilder.go

// Package history is a generated GoMock package.
package history

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	definition "github.com/temporalio/temporal/common/definition"
)

// MocknDCStateRebuilder is a mock of nDCStateRebuilder interface.
type MocknDCStateRebuilder struct {
	ctrl     *gomock.Controller
	recorder *MocknDCStateRebuilderMockRecorder
}

// MocknDCStateRebuilderMockRecorder is the mock recorder for MocknDCStateRebuilder.
type MocknDCStateRebuilderMockRecorder struct {
	mock *MocknDCStateRebuilder
}

// NewMocknDCStateRebuilder creates a new mock instance.
func NewMocknDCStateRebuilder(ctrl *gomock.Controller) *MocknDCStateRebuilder {
	mock := &MocknDCStateRebuilder{ctrl: ctrl}
	mock.recorder = &MocknDCStateRebuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocknDCStateRebuilder) EXPECT() *MocknDCStateRebuilderMockRecorder {
	return m.recorder
}

// rebuild mocks base method.
func (m *MocknDCStateRebuilder) rebuild(ctx context.Context, now time.Time, baseWorkflowIdentifier definition.WorkflowIdentifier, baseBranchToken []byte, baseLastEventID, baseLastEventVersion int64, targetWorkflowIdentifier definition.WorkflowIdentifier, targetBranchToken []byte, requestID string) (mutableState, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "rebuild", ctx, now, baseWorkflowIdentifier, baseBranchToken, baseLastEventID, baseLastEventVersion, targetWorkflowIdentifier, targetBranchToken, requestID)
	ret0, _ := ret[0].(mutableState)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// rebuild indicates an expected call of rebuild.
func (mr *MocknDCStateRebuilderMockRecorder) rebuild(ctx, now, baseWorkflowIdentifier, baseBranchToken, baseLastEventID, baseLastEventVersion, targetWorkflowIdentifier, targetBranchToken, requestID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "rebuild", reflect.TypeOf((*MocknDCStateRebuilder)(nil).rebuild), ctx, now, baseWorkflowIdentifier, baseBranchToken, baseLastEventID, baseLastEventVersion, targetWorkflowIdentifier, targetBranchToken, requestID)
}
