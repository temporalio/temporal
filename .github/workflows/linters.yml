name: linters
on:
  pull_request:
permissions:
  contents: read
jobs:
  lint-actions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: lint actions
        run: |
          echo "::add-matcher::.github/actionlint-matcher.json"
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          make lint-actions
        shell: bash

  lint-protos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: lint protobuf definitions
        run: |
          make lint-protos

  lint-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: lint protobuf API definitions
        run: |
          make lint-api
          

  lint-workflows:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: lint system workflows with workflowcheck
        run: make workflowcheck

  fmt-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: format golang import statements
        run: |
          make fmt-imports

      - name: check-is-dirty
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Detected uncommitted changes."
            git status
            git diff
            exit 1
          fi

  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true

      - name: lint code
        run: |
          make GOLANGCI_LINT_FIX=false GOLANGCI_LINT_BASE_REV=HEAD~ lint-code

      - name: check-is-dirty
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Detected uncommitted changes."
            git status
            git diff
            exit 1
          fi

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        env:
          BASE_REF: ${{ github.base_ref }}
        run: |
          git diff --name-only --diff-filter=ACMR "origin/${BASE_REF}"...HEAD | tr '\n' ' ' > changed_files.txt
          echo "files=$(cat changed_files.txt)" >> "$GITHUB_OUTPUT"

      - name: check spelling with typos on changed files
        if: steps.changed-files.outputs.files != ''
        uses: crate-ci/typos@v1.28.4
        with:
          config: .github/_typos.toml
          files: ${{ steps.changed-files.outputs.files }}

  linters-succeed:
    name: All Linters Succeed
    needs:
      - lint-api
      - lint-protos
      - lint-actions
      - fmt-imports
      - golangci
      - typos
    runs-on: ubuntu-latest
    if: always()
    env:
      RESULTS: ${{ toJSON(needs.*.result) }}
    steps:
      - name: Check results
        run: |
          if [[ -n $(echo "$RESULTS" | jq '.[] | select (. != "success")') ]]; then
            exit 1
          fi
