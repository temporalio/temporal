name: Flaky Tests Report

on:
  schedule:
    # Run on Tuesdays and Fridays at noon Eastern time (5 PM UTC)
    - cron: '0 17 * * 2,5'
  pull_request:
    # TODO: Remove this pull_request trigger before merging to main
    # This is only for testing the workflow during development
    branches: [ main ]

permissions:
  contents: read
  actions: read

jobs:
  flaky-tests-report:
    runs-on: ubuntu-latest    
    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.TEMPORAL_CICD_APP_ID }}
          private-key: ${{ secrets.TEMPORAL_CICD_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: ">=0.8.0"

      - name: Install Python dependencies
        run: |
          cd tools/flakes
          uv sync

      - name: Install tringa
        run: |
          uv tool install git+https://github.com/dandavison/tringa@main --force

      - name: Run bash script to generate output file
        id: generate-output-file
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          set -euo pipefail
          
          # Clean up any existing files
          rm -rf out.json timeout.txt retry.txt flaky.txt crash.txt
          
          tringa --json --since-days 7 repo sql \
            'select classname, name, count(*) as failure_count, max(artifact) as artifact from test where passed = false and skipped = false group by classname, name order by failure_count desc' \
            --branch main \
            --workflow-id 80591745 \
            https://github.com/temporalio/temporal > out.json
          
          echo "✅ Tringa command completed"
          echo "📊 Output file size: $(wc -c < out.json) bytes"
          echo "📄 Full output file:"
          cat out.json

      - name: Run Python script to process flaky tests
        id: process-flaky-tests
        run: |
          echo "Starting Python script processing..."
          echo "Current directory: $(pwd)"
          
          echo "Running: cd tools/flakes && uv run main.py --file ../../out.json --github-summary --slack-webhook ${{ secrets.SLACK_WEBHOOK }} --slack-message-type success --run-id ${{ github.run_id }}"
          cd tools/flakes && uv run main.py \
            --file ../../out.json \
            --github-summary \
            --slack-webhook "${{ secrets.SLACK_WEBHOOK }}" \
            --slack-message-type success \
            --run-id "${{ github.run_id }}"

      - name: Upload generated reports
        uses: actions/upload-artifact@v4
        if: steps.process-flaky-tests.outcome == 'success'
        with:
          name: flaky-tests-reports-${{ github.run_number }}
          path: |
            out.json
            tools/flakes/crash.txt
            tools/flakes/flaky.txt
            tools/flakes/flaky_slack.txt
            tools/flakes/retry.txt
            tools/flakes/timeout.txt
          retention-days: 30

      - name: Create GitHub Actions failure summary
        if: steps.process-flaky-tests.outcome == 'failure'
        run: |
          {
            echo "## ❌ Flaky Tests Report Generation Failed"
            echo ""
            echo "The flaky tests report workflow failed to generate the report."
            echo ""
            echo "### Workflow Details"
            echo ""
            echo "- **Run ID**: [${{ github.run_id }}](https://github.com/temporalio/temporal/actions/runs/${{ github.run_id }})"
            echo "- **Branch**: \`${{ github.ref_name }}\`"
            echo "- **Commit**: [${{ github.sha }}](https://github.com/temporalio/temporal/commit/${{ github.sha }})"
            echo ""
            echo "### Failure Point"
            echo ""
            echo "Python script processing failed"
            echo ""
            echo "Please check the workflow logs for more details."
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Send Slack workflow failure notification
        if: steps.process-flaky-tests.outcome == 'failure'
        run: |
          echo "📤 Sending Slack failure notification..."
          cd tools/flakes
          uv run main.py \
            --slack-webhook "${{ secrets.SLACK_WEBHOOK }}" \
            --slack-message-type failure \
            --run-id "${{ github.run_id }}" \
            --ref-name "${{ github.ref_name }}" \
            --sha "${{ github.sha }}"
