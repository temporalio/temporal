// The MIT License
//
// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/historyservice/v1/request_response.proto

package historyservice

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v122 "go.temporal.io/api/activity/v1"
	v14 "go.temporal.io/api/common/v1"
	v112 "go.temporal.io/api/deployment/v1"
	v12 "go.temporal.io/api/enums/v1"
	v13 "go.temporal.io/api/failure/v1"
	v115 "go.temporal.io/api/history/v1"
	v121 "go.temporal.io/api/nexus/v1"
	v114 "go.temporal.io/api/protocol/v1"
	v113 "go.temporal.io/api/query/v1"
	v19 "go.temporal.io/api/taskqueue/v1"
	v15 "go.temporal.io/api/workflow/v1"
	v1 "go.temporal.io/api/workflowservice/v1"
	v118 "go.temporal.io/server/api/adminservice/v1"
	v16 "go.temporal.io/server/api/clock/v1"
	v119 "go.temporal.io/server/api/common/v1"
	v110 "go.temporal.io/server/api/enums/v1"
	v17 "go.temporal.io/server/api/history/v1"
	v116 "go.temporal.io/server/api/namespace/v1"
	v18 "go.temporal.io/server/api/persistence/v1"
	v117 "go.temporal.io/server/api/replication/v1"
	v111 "go.temporal.io/server/api/taskqueue/v1"
	v120 "go.temporal.io/server/api/token/v1"
	v11 "go.temporal.io/server/api/workflow/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RoutingOptions define how a request is routed to the appropriate host.
type RoutingOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Routing is custom and implemented in the non-generated client/history/client.go.
	Custom bool `protobuf:"varint,1,opt,name=custom,proto3" json:"custom,omitempty"`
	// Request will be routed to a random host.
	AnyHost bool `protobuf:"varint,2,opt,name=any_host,json=anyHost,proto3" json:"any_host,omitempty"`
	// Request will be routed according to the specified shard ID field.
	ShardId string `protobuf:"bytes,3,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// Requested routed by task token or workflow ID may also specify how to obtain the namespace ID. Defaults to the
	// "namespace_id" field.
	NamespaceId string `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Request will be routed by resolving the namespace ID and workflow ID to a given shard.
	WorkflowId string `protobuf:"bytes,5,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Request will be routed by resolving the namespace ID and the workflow ID from this task token to a given shard.
	TaskToken string `protobuf:"bytes,6,opt,name=task_token,json=taskToken,proto3" json:"task_token,omitempty"`
	// Request will be routed by resolving the namespace ID and the workflow ID from the first task info element.
	TaskInfos     string `protobuf:"bytes,7,opt,name=task_infos,json=taskInfos,proto3" json:"task_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoutingOptions) Reset() {
	*x = RoutingOptions{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutingOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingOptions) ProtoMessage() {}

func (x *RoutingOptions) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingOptions.ProtoReflect.Descriptor instead.
func (*RoutingOptions) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{0}
}

func (x *RoutingOptions) GetCustom() bool {
	if x != nil {
		return x.Custom
	}
	return false
}

func (x *RoutingOptions) GetAnyHost() bool {
	if x != nil {
		return x.AnyHost
	}
	return false
}

func (x *RoutingOptions) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *RoutingOptions) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RoutingOptions) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RoutingOptions) GetTaskToken() string {
	if x != nil {
		return x.TaskToken
	}
	return ""
}

func (x *RoutingOptions) GetTaskInfos() string {
	if x != nil {
		return x.TaskInfos
	}
	return ""
}

type StartWorkflowExecutionRequest struct {
	state                           protoimpl.MessageState            `protogen:"open.v1"`
	NamespaceId                     string                            `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	StartRequest                    *v1.StartWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=start_request,json=startRequest,proto3" json:"start_request,omitempty"`
	ParentExecutionInfo             *v11.ParentExecutionInfo          `protobuf:"bytes,3,opt,name=parent_execution_info,json=parentExecutionInfo,proto3" json:"parent_execution_info,omitempty"`
	Attempt                         int32                             `protobuf:"varint,4,opt,name=attempt,proto3" json:"attempt,omitempty"`
	WorkflowExecutionExpirationTime *timestamppb.Timestamp            `protobuf:"bytes,5,opt,name=workflow_execution_expiration_time,json=workflowExecutionExpirationTime,proto3" json:"workflow_execution_expiration_time,omitempty"`
	ContinueAsNewInitiator          v12.ContinueAsNewInitiator        `protobuf:"varint,6,opt,name=continue_as_new_initiator,json=continueAsNewInitiator,proto3,enum=temporal.api.enums.v1.ContinueAsNewInitiator" json:"continue_as_new_initiator,omitempty"`
	// History service should use the values of continued_failure and last_completion_result
	// here, not the ones in start_request (those are moved into here in the frontend).
	ContinuedFailure         *v13.Failure         `protobuf:"bytes,7,opt,name=continued_failure,json=continuedFailure,proto3" json:"continued_failure,omitempty"`
	LastCompletionResult     *v14.Payloads        `protobuf:"bytes,8,opt,name=last_completion_result,json=lastCompletionResult,proto3" json:"last_completion_result,omitempty"`
	FirstWorkflowTaskBackoff *durationpb.Duration `protobuf:"bytes,9,opt,name=first_workflow_task_backoff,json=firstWorkflowTaskBackoff,proto3" json:"first_workflow_task_backoff,omitempty"`
	// For child or continued-as-new workflows, including a version here from the source
	// (parent/previous) will set the initial version stamp of this workflow.
	// Deprecated. use `inherited_build_id`
	SourceVersionStamp *v14.WorkerVersionStamp `protobuf:"bytes,10,opt,name=source_version_stamp,json=sourceVersionStamp,proto3" json:"source_version_stamp,omitempty"`
	// The root execution info of the new workflow.
	// For top-level workflows (ie., without parent), this field must be nil.
	RootExecutionInfo *v11.RootExecutionInfo `protobuf:"bytes,11,opt,name=root_execution_info,json=rootExecutionInfo,proto3" json:"root_execution_info,omitempty"`
	// inherited build ID from parent/previous execution
	InheritedBuildId string `protobuf:"bytes,12,opt,name=inherited_build_id,json=inheritedBuildId,proto3" json:"inherited_build_id,omitempty"`
	// If set, takes precedence over the Versioning Behavior sent by the SDK on Workflow Task completion.
	// To unset the override after the workflow is running, use UpdateWorkflowExecutionOptions.
	VersioningOverride *v15.VersioningOverride `protobuf:"bytes,13,opt,name=versioning_override,json=versioningOverride,proto3" json:"versioning_override,omitempty"`
	// If set, we verify the parent-child relationship before applying ID conflict policy WORKFLOW_ID_CONFLICT_POLICY_TERMINATE_EXISTING
	ChildWorkflowOnly bool `protobuf:"varint,14,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartWorkflowExecutionRequest) Reset() {
	*x = StartWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowExecutionRequest) ProtoMessage() {}

func (x *StartWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*StartWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{1}
}

func (x *StartWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *StartWorkflowExecutionRequest) GetStartRequest() *v1.StartWorkflowExecutionRequest {
	if x != nil {
		return x.StartRequest
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetParentExecutionInfo() *v11.ParentExecutionInfo {
	if x != nil {
		return x.ParentExecutionInfo
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *StartWorkflowExecutionRequest) GetWorkflowExecutionExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WorkflowExecutionExpirationTime
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetContinueAsNewInitiator() v12.ContinueAsNewInitiator {
	if x != nil {
		return x.ContinueAsNewInitiator
	}
	return v12.ContinueAsNewInitiator(0)
}

func (x *StartWorkflowExecutionRequest) GetContinuedFailure() *v13.Failure {
	if x != nil {
		return x.ContinuedFailure
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetLastCompletionResult() *v14.Payloads {
	if x != nil {
		return x.LastCompletionResult
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetFirstWorkflowTaskBackoff() *durationpb.Duration {
	if x != nil {
		return x.FirstWorkflowTaskBackoff
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetSourceVersionStamp() *v14.WorkerVersionStamp {
	if x != nil {
		return x.SourceVersionStamp
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetRootExecutionInfo() *v11.RootExecutionInfo {
	if x != nil {
		return x.RootExecutionInfo
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetInheritedBuildId() string {
	if x != nil {
		return x.InheritedBuildId
	}
	return ""
}

func (x *StartWorkflowExecutionRequest) GetVersioningOverride() *v15.VersioningOverride {
	if x != nil {
		return x.VersioningOverride
	}
	return nil
}

func (x *StartWorkflowExecutionRequest) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

type StartWorkflowExecutionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	RunId string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Clock *v16.VectorClock       `protobuf:"bytes,2,opt,name=clock,proto3" json:"clock,omitempty"`
	// Set if request_eager_execution is set on the start request
	EagerWorkflowTask *v1.PollWorkflowTaskQueueResponse `protobuf:"bytes,3,opt,name=eager_workflow_task,json=eagerWorkflowTask,proto3" json:"eager_workflow_task,omitempty"`
	Started           bool                              `protobuf:"varint,4,opt,name=started,proto3" json:"started,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartWorkflowExecutionResponse) Reset() {
	*x = StartWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkflowExecutionResponse) ProtoMessage() {}

func (x *StartWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*StartWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{2}
}

func (x *StartWorkflowExecutionResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *StartWorkflowExecutionResponse) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *StartWorkflowExecutionResponse) GetEagerWorkflowTask() *v1.PollWorkflowTaskQueueResponse {
	if x != nil {
		return x.EagerWorkflowTask
	}
	return nil
}

func (x *StartWorkflowExecutionResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type GetMutableStateRequest struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	NamespaceId         string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution           *v14.WorkflowExecution   `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	ExpectedNextEventId int64                    `protobuf:"varint,3,opt,name=expected_next_event_id,json=expectedNextEventId,proto3" json:"expected_next_event_id,omitempty"`
	CurrentBranchToken  []byte                   `protobuf:"bytes,4,opt,name=current_branch_token,json=currentBranchToken,proto3" json:"current_branch_token,omitempty"`
	VersionHistoryItem  *v17.VersionHistoryItem  `protobuf:"bytes,5,opt,name=version_history_item,json=versionHistoryItem,proto3" json:"version_history_item,omitempty"`
	VersionedTransition *v18.VersionedTransition `protobuf:"bytes,6,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetMutableStateRequest) Reset() {
	*x = GetMutableStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMutableStateRequest) ProtoMessage() {}

func (x *GetMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMutableStateRequest.ProtoReflect.Descriptor instead.
func (*GetMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{3}
}

func (x *GetMutableStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetMutableStateRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetMutableStateRequest) GetExpectedNextEventId() int64 {
	if x != nil {
		return x.ExpectedNextEventId
	}
	return 0
}

func (x *GetMutableStateRequest) GetCurrentBranchToken() []byte {
	if x != nil {
		return x.CurrentBranchToken
	}
	return nil
}

func (x *GetMutableStateRequest) GetVersionHistoryItem() *v17.VersionHistoryItem {
	if x != nil {
		return x.VersionHistoryItem
	}
	return nil
}

func (x *GetMutableStateRequest) GetVersionedTransition() *v18.VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

type GetMutableStateResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Execution              *v14.WorkflowExecution `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	WorkflowType           *v14.WorkflowType      `protobuf:"bytes,2,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	NextEventId            int64                  `protobuf:"varint,3,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	PreviousStartedEventId int64                  `protobuf:"varint,4,opt,name=previous_started_event_id,json=previousStartedEventId,proto3" json:"previous_started_event_id,omitempty"`
	LastFirstEventId       int64                  `protobuf:"varint,5,opt,name=last_first_event_id,json=lastFirstEventId,proto3" json:"last_first_event_id,omitempty"`
	TaskQueue              *v19.TaskQueue         `protobuf:"bytes,6,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	StickyTaskQueue        *v19.TaskQueue         `protobuf:"bytes,7,opt,name=sticky_task_queue,json=stickyTaskQueue,proto3" json:"sticky_task_queue,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StickyTaskQueueScheduleToStartTimeout *durationpb.Duration        `protobuf:"bytes,11,opt,name=sticky_task_queue_schedule_to_start_timeout,json=stickyTaskQueueScheduleToStartTimeout,proto3" json:"sticky_task_queue_schedule_to_start_timeout,omitempty"`
	CurrentBranchToken                    []byte                      `protobuf:"bytes,13,opt,name=current_branch_token,json=currentBranchToken,proto3" json:"current_branch_token,omitempty"`
	WorkflowState                         v110.WorkflowExecutionState `protobuf:"varint,15,opt,name=workflow_state,json=workflowState,proto3,enum=temporal.server.api.enums.v1.WorkflowExecutionState" json:"workflow_state,omitempty"`
	WorkflowStatus                        v12.WorkflowExecutionStatus `protobuf:"varint,16,opt,name=workflow_status,json=workflowStatus,proto3,enum=temporal.api.enums.v1.WorkflowExecutionStatus" json:"workflow_status,omitempty"`
	VersionHistories                      *v17.VersionHistories       `protobuf:"bytes,17,opt,name=version_histories,json=versionHistories,proto3" json:"version_histories,omitempty"`
	IsStickyTaskQueueEnabled              bool                        `protobuf:"varint,18,opt,name=is_sticky_task_queue_enabled,json=isStickyTaskQueueEnabled,proto3" json:"is_sticky_task_queue_enabled,omitempty"`
	LastFirstEventTxnId                   int64                       `protobuf:"varint,19,opt,name=last_first_event_txn_id,json=lastFirstEventTxnId,proto3" json:"last_first_event_txn_id,omitempty"`
	FirstExecutionRunId                   string                      `protobuf:"bytes,20,opt,name=first_execution_run_id,json=firstExecutionRunId,proto3" json:"first_execution_run_id,omitempty"`
	// If using build-id based versioning: version stamp of last worker to complete a workflow
	// task for this workflow.
	MostRecentWorkerVersionStamp *v14.WorkerVersionStamp `protobuf:"bytes,21,opt,name=most_recent_worker_version_stamp,json=mostRecentWorkerVersionStamp,proto3" json:"most_recent_worker_version_stamp,omitempty"`
	// The currently assigned build ID for this execution. Presence of this value means worker versioning is used
	// for this execution.
	AssignedBuildId   string                               `protobuf:"bytes,22,opt,name=assigned_build_id,json=assignedBuildId,proto3" json:"assigned_build_id,omitempty"`
	InheritedBuildId  string                               `protobuf:"bytes,23,opt,name=inherited_build_id,json=inheritedBuildId,proto3" json:"inherited_build_id,omitempty"`
	TransitionHistory []*v18.VersionedTransition           `protobuf:"bytes,24,rep,name=transition_history,json=transitionHistory,proto3" json:"transition_history,omitempty"`
	VersioningInfo    *v15.WorkflowExecutionVersioningInfo `protobuf:"bytes,25,opt,name=versioning_info,json=versioningInfo,proto3" json:"versioning_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetMutableStateResponse) Reset() {
	*x = GetMutableStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMutableStateResponse) ProtoMessage() {}

func (x *GetMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMutableStateResponse.ProtoReflect.Descriptor instead.
func (*GetMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{4}
}

func (x *GetMutableStateResponse) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetMutableStateResponse) GetWorkflowType() *v14.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *GetMutableStateResponse) GetNextEventId() int64 {
	if x != nil {
		return x.NextEventId
	}
	return 0
}

func (x *GetMutableStateResponse) GetPreviousStartedEventId() int64 {
	if x != nil {
		return x.PreviousStartedEventId
	}
	return 0
}

func (x *GetMutableStateResponse) GetLastFirstEventId() int64 {
	if x != nil {
		return x.LastFirstEventId
	}
	return 0
}

func (x *GetMutableStateResponse) GetTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *GetMutableStateResponse) GetStickyTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.StickyTaskQueue
	}
	return nil
}

func (x *GetMutableStateResponse) GetStickyTaskQueueScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.StickyTaskQueueScheduleToStartTimeout
	}
	return nil
}

func (x *GetMutableStateResponse) GetCurrentBranchToken() []byte {
	if x != nil {
		return x.CurrentBranchToken
	}
	return nil
}

func (x *GetMutableStateResponse) GetWorkflowState() v110.WorkflowExecutionState {
	if x != nil {
		return x.WorkflowState
	}
	return v110.WorkflowExecutionState(0)
}

func (x *GetMutableStateResponse) GetWorkflowStatus() v12.WorkflowExecutionStatus {
	if x != nil {
		return x.WorkflowStatus
	}
	return v12.WorkflowExecutionStatus(0)
}

func (x *GetMutableStateResponse) GetVersionHistories() *v17.VersionHistories {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

func (x *GetMutableStateResponse) GetIsStickyTaskQueueEnabled() bool {
	if x != nil {
		return x.IsStickyTaskQueueEnabled
	}
	return false
}

func (x *GetMutableStateResponse) GetLastFirstEventTxnId() int64 {
	if x != nil {
		return x.LastFirstEventTxnId
	}
	return 0
}

func (x *GetMutableStateResponse) GetFirstExecutionRunId() string {
	if x != nil {
		return x.FirstExecutionRunId
	}
	return ""
}

func (x *GetMutableStateResponse) GetMostRecentWorkerVersionStamp() *v14.WorkerVersionStamp {
	if x != nil {
		return x.MostRecentWorkerVersionStamp
	}
	return nil
}

func (x *GetMutableStateResponse) GetAssignedBuildId() string {
	if x != nil {
		return x.AssignedBuildId
	}
	return ""
}

func (x *GetMutableStateResponse) GetInheritedBuildId() string {
	if x != nil {
		return x.InheritedBuildId
	}
	return ""
}

func (x *GetMutableStateResponse) GetTransitionHistory() []*v18.VersionedTransition {
	if x != nil {
		return x.TransitionHistory
	}
	return nil
}

func (x *GetMutableStateResponse) GetVersioningInfo() *v15.WorkflowExecutionVersioningInfo {
	if x != nil {
		return x.VersioningInfo
	}
	return nil
}

type PollMutableStateRequest struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId         string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution           *v14.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	ExpectedNextEventId int64                   `protobuf:"varint,3,opt,name=expected_next_event_id,json=expectedNextEventId,proto3" json:"expected_next_event_id,omitempty"`
	CurrentBranchToken  []byte                  `protobuf:"bytes,4,opt,name=current_branch_token,json=currentBranchToken,proto3" json:"current_branch_token,omitempty"`
	VersionHistoryItem  *v17.VersionHistoryItem `protobuf:"bytes,5,opt,name=version_history_item,json=versionHistoryItem,proto3" json:"version_history_item,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PollMutableStateRequest) Reset() {
	*x = PollMutableStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollMutableStateRequest) ProtoMessage() {}

func (x *PollMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollMutableStateRequest.ProtoReflect.Descriptor instead.
func (*PollMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{5}
}

func (x *PollMutableStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PollMutableStateRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *PollMutableStateRequest) GetExpectedNextEventId() int64 {
	if x != nil {
		return x.ExpectedNextEventId
	}
	return 0
}

func (x *PollMutableStateRequest) GetCurrentBranchToken() []byte {
	if x != nil {
		return x.CurrentBranchToken
	}
	return nil
}

func (x *PollMutableStateRequest) GetVersionHistoryItem() *v17.VersionHistoryItem {
	if x != nil {
		return x.VersionHistoryItem
	}
	return nil
}

type PollMutableStateResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Execution              *v14.WorkflowExecution `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	WorkflowType           *v14.WorkflowType      `protobuf:"bytes,2,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	NextEventId            int64                  `protobuf:"varint,3,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	PreviousStartedEventId int64                  `protobuf:"varint,4,opt,name=previous_started_event_id,json=previousStartedEventId,proto3" json:"previous_started_event_id,omitempty"`
	LastFirstEventId       int64                  `protobuf:"varint,5,opt,name=last_first_event_id,json=lastFirstEventId,proto3" json:"last_first_event_id,omitempty"`
	TaskQueue              *v19.TaskQueue         `protobuf:"bytes,6,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	StickyTaskQueue        *v19.TaskQueue         `protobuf:"bytes,7,opt,name=sticky_task_queue,json=stickyTaskQueue,proto3" json:"sticky_task_queue,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StickyTaskQueueScheduleToStartTimeout *durationpb.Duration        `protobuf:"bytes,11,opt,name=sticky_task_queue_schedule_to_start_timeout,json=stickyTaskQueueScheduleToStartTimeout,proto3" json:"sticky_task_queue_schedule_to_start_timeout,omitempty"`
	CurrentBranchToken                    []byte                      `protobuf:"bytes,12,opt,name=current_branch_token,json=currentBranchToken,proto3" json:"current_branch_token,omitempty"`
	VersionHistories                      *v17.VersionHistories       `protobuf:"bytes,14,opt,name=version_histories,json=versionHistories,proto3" json:"version_histories,omitempty"`
	WorkflowState                         v110.WorkflowExecutionState `protobuf:"varint,15,opt,name=workflow_state,json=workflowState,proto3,enum=temporal.server.api.enums.v1.WorkflowExecutionState" json:"workflow_state,omitempty"`
	WorkflowStatus                        v12.WorkflowExecutionStatus `protobuf:"varint,16,opt,name=workflow_status,json=workflowStatus,proto3,enum=temporal.api.enums.v1.WorkflowExecutionStatus" json:"workflow_status,omitempty"`
	LastFirstEventTxnId                   int64                       `protobuf:"varint,17,opt,name=last_first_event_txn_id,json=lastFirstEventTxnId,proto3" json:"last_first_event_txn_id,omitempty"`
	FirstExecutionRunId                   string                      `protobuf:"bytes,18,opt,name=first_execution_run_id,json=firstExecutionRunId,proto3" json:"first_execution_run_id,omitempty"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *PollMutableStateResponse) Reset() {
	*x = PollMutableStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollMutableStateResponse) ProtoMessage() {}

func (x *PollMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollMutableStateResponse.ProtoReflect.Descriptor instead.
func (*PollMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{6}
}

func (x *PollMutableStateResponse) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *PollMutableStateResponse) GetWorkflowType() *v14.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *PollMutableStateResponse) GetNextEventId() int64 {
	if x != nil {
		return x.NextEventId
	}
	return 0
}

func (x *PollMutableStateResponse) GetPreviousStartedEventId() int64 {
	if x != nil {
		return x.PreviousStartedEventId
	}
	return 0
}

func (x *PollMutableStateResponse) GetLastFirstEventId() int64 {
	if x != nil {
		return x.LastFirstEventId
	}
	return 0
}

func (x *PollMutableStateResponse) GetTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *PollMutableStateResponse) GetStickyTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.StickyTaskQueue
	}
	return nil
}

func (x *PollMutableStateResponse) GetStickyTaskQueueScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.StickyTaskQueueScheduleToStartTimeout
	}
	return nil
}

func (x *PollMutableStateResponse) GetCurrentBranchToken() []byte {
	if x != nil {
		return x.CurrentBranchToken
	}
	return nil
}

func (x *PollMutableStateResponse) GetVersionHistories() *v17.VersionHistories {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

func (x *PollMutableStateResponse) GetWorkflowState() v110.WorkflowExecutionState {
	if x != nil {
		return x.WorkflowState
	}
	return v110.WorkflowExecutionState(0)
}

func (x *PollMutableStateResponse) GetWorkflowStatus() v12.WorkflowExecutionStatus {
	if x != nil {
		return x.WorkflowStatus
	}
	return v12.WorkflowExecutionStatus(0)
}

func (x *PollMutableStateResponse) GetLastFirstEventTxnId() int64 {
	if x != nil {
		return x.LastFirstEventTxnId
	}
	return 0
}

func (x *PollMutableStateResponse) GetFirstExecutionRunId() string {
	if x != nil {
		return x.FirstExecutionRunId
	}
	return ""
}

type ResetStickyTaskQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution     *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetStickyTaskQueueRequest) Reset() {
	*x = ResetStickyTaskQueueRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetStickyTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetStickyTaskQueueRequest) ProtoMessage() {}

func (x *ResetStickyTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetStickyTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*ResetStickyTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{7}
}

func (x *ResetStickyTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ResetStickyTaskQueueRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type ResetStickyTaskQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetStickyTaskQueueResponse) Reset() {
	*x = ResetStickyTaskQueueResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetStickyTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetStickyTaskQueueResponse) ProtoMessage() {}

func (x *ResetStickyTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetStickyTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*ResetStickyTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{8}
}

type ExecuteMultiOperationRequest struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	NamespaceId   string                                    `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId    string                                    `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Operations    []*ExecuteMultiOperationRequest_Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteMultiOperationRequest) Reset() {
	*x = ExecuteMultiOperationRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteMultiOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteMultiOperationRequest) ProtoMessage() {}

func (x *ExecuteMultiOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteMultiOperationRequest.ProtoReflect.Descriptor instead.
func (*ExecuteMultiOperationRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{9}
}

func (x *ExecuteMultiOperationRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ExecuteMultiOperationRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ExecuteMultiOperationRequest) GetOperations() []*ExecuteMultiOperationRequest_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

type ExecuteMultiOperationResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Responses     []*ExecuteMultiOperationResponse_Response `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteMultiOperationResponse) Reset() {
	*x = ExecuteMultiOperationResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteMultiOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteMultiOperationResponse) ProtoMessage() {}

func (x *ExecuteMultiOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteMultiOperationResponse.ProtoReflect.Descriptor instead.
func (*ExecuteMultiOperationResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{10}
}

func (x *ExecuteMultiOperationResponse) GetResponses() []*ExecuteMultiOperationResponse_Response {
	if x != nil {
		return x.Responses
	}
	return nil
}

type RecordWorkflowTaskStartedRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	ScheduledEventId  int64                  `protobuf:"varint,3,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	// Unique id of each poll request. Used to ensure at most once delivery of tasks.
	RequestId           string                           `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	PollRequest         *v1.PollWorkflowTaskQueueRequest `protobuf:"bytes,6,opt,name=poll_request,json=pollRequest,proto3" json:"poll_request,omitempty"`
	Clock               *v16.VectorClock                 `protobuf:"bytes,7,opt,name=clock,proto3" json:"clock,omitempty"`
	BuildIdRedirectInfo *v111.BuildIdRedirectInfo        `protobuf:"bytes,8,opt,name=build_id_redirect_info,json=buildIdRedirectInfo,proto3" json:"build_id_redirect_info,omitempty"`
	// The deployment passed by History when the task was scheduled.
	// Deprecated. use `version_directive.deployment`.
	ScheduledDeployment *v112.Deployment `protobuf:"bytes,9,opt,name=scheduled_deployment,json=scheduledDeployment,proto3" json:"scheduled_deployment,omitempty"`
	// Versioning directive that was sent by history when scheduling the task.
	VersionDirective *v111.TaskVersionDirective `protobuf:"bytes,10,opt,name=version_directive,json=versionDirective,proto3" json:"version_directive,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordWorkflowTaskStartedRequest) Reset() {
	*x = RecordWorkflowTaskStartedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordWorkflowTaskStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordWorkflowTaskStartedRequest) ProtoMessage() {}

func (x *RecordWorkflowTaskStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordWorkflowTaskStartedRequest.ProtoReflect.Descriptor instead.
func (*RecordWorkflowTaskStartedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{11}
}

func (x *RecordWorkflowTaskStartedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecordWorkflowTaskStartedRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *RecordWorkflowTaskStartedRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecordWorkflowTaskStartedRequest) GetPollRequest() *v1.PollWorkflowTaskQueueRequest {
	if x != nil {
		return x.PollRequest
	}
	return nil
}

func (x *RecordWorkflowTaskStartedRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordWorkflowTaskStartedRequest) GetBuildIdRedirectInfo() *v111.BuildIdRedirectInfo {
	if x != nil {
		return x.BuildIdRedirectInfo
	}
	return nil
}

func (x *RecordWorkflowTaskStartedRequest) GetScheduledDeployment() *v112.Deployment {
	if x != nil {
		return x.ScheduledDeployment
	}
	return nil
}

func (x *RecordWorkflowTaskStartedRequest) GetVersionDirective() *v111.TaskVersionDirective {
	if x != nil {
		return x.VersionDirective
	}
	return nil
}

type RecordWorkflowTaskStartedResponse struct {
	state                      protoimpl.MessageState         `protogen:"open.v1"`
	WorkflowType               *v14.WorkflowType              `protobuf:"bytes,1,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	PreviousStartedEventId     int64                          `protobuf:"varint,2,opt,name=previous_started_event_id,json=previousStartedEventId,proto3" json:"previous_started_event_id,omitempty"`
	ScheduledEventId           int64                          `protobuf:"varint,3,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	StartedEventId             int64                          `protobuf:"varint,4,opt,name=started_event_id,json=startedEventId,proto3" json:"started_event_id,omitempty"`
	NextEventId                int64                          `protobuf:"varint,5,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	Attempt                    int32                          `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	StickyExecutionEnabled     bool                           `protobuf:"varint,7,opt,name=sticky_execution_enabled,json=stickyExecutionEnabled,proto3" json:"sticky_execution_enabled,omitempty"`
	TransientWorkflowTask      *v17.TransientWorkflowTaskInfo `protobuf:"bytes,8,opt,name=transient_workflow_task,json=transientWorkflowTask,proto3" json:"transient_workflow_task,omitempty"`
	WorkflowExecutionTaskQueue *v19.TaskQueue                 `protobuf:"bytes,9,opt,name=workflow_execution_task_queue,json=workflowExecutionTaskQueue,proto3" json:"workflow_execution_task_queue,omitempty"`
	BranchToken                []byte                         `protobuf:"bytes,11,opt,name=branch_token,json=branchToken,proto3" json:"branch_token,omitempty"`
	ScheduledTime              *timestamppb.Timestamp         `protobuf:"bytes,12,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	StartedTime                *timestamppb.Timestamp         `protobuf:"bytes,13,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	Queries                    map[string]*v113.WorkflowQuery `protobuf:"bytes,14,rep,name=queries,proto3" json:"queries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Clock                      *v16.VectorClock               `protobuf:"bytes,15,opt,name=clock,proto3" json:"clock,omitempty"`
	Messages                   []*v114.Message                `protobuf:"bytes,16,rep,name=messages,proto3" json:"messages,omitempty"`
	Version                    int64                          `protobuf:"varint,17,opt,name=version,proto3" json:"version,omitempty"`
	History                    *v115.History                  `protobuf:"bytes,18,opt,name=history,proto3" json:"history,omitempty"`
	NextPageToken              []byte                         `protobuf:"bytes,19,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	RawHistory                 *v115.History                  `protobuf:"bytes,20,opt,name=raw_history,json=rawHistory,proto3" json:"raw_history,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RecordWorkflowTaskStartedResponse) Reset() {
	*x = RecordWorkflowTaskStartedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordWorkflowTaskStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordWorkflowTaskStartedResponse) ProtoMessage() {}

func (x *RecordWorkflowTaskStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordWorkflowTaskStartedResponse.ProtoReflect.Descriptor instead.
func (*RecordWorkflowTaskStartedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{12}
}

func (x *RecordWorkflowTaskStartedResponse) GetWorkflowType() *v14.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetPreviousStartedEventId() int64 {
	if x != nil {
		return x.PreviousStartedEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetStartedEventId() int64 {
	if x != nil {
		return x.StartedEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetNextEventId() int64 {
	if x != nil {
		return x.NextEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetStickyExecutionEnabled() bool {
	if x != nil {
		return x.StickyExecutionEnabled
	}
	return false
}

func (x *RecordWorkflowTaskStartedResponse) GetTransientWorkflowTask() *v17.TransientWorkflowTaskInfo {
	if x != nil {
		return x.TransientWorkflowTask
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetWorkflowExecutionTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.WorkflowExecutionTaskQueue
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetBranchToken() []byte {
	if x != nil {
		return x.BranchToken
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetQueries() map[string]*v113.WorkflowQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetMessages() []*v114.Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponse) GetHistory() *v115.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponse) GetRawHistory() *v115.History {
	if x != nil {
		return x.RawHistory
	}
	return nil
}

// RecordWorkflowTaskStartedResponseWithRawHistory should be wire compatible with RecordWorkflowTaskStartedResponse.
// The only difference is that RecordWorkflowTaskStartedResponseWithRawHistory has a `history` field that contains the
// raw history batches. RecordWorkflowTaskStartedResponseWithRawHistory will be returned by history service.
// History client will deserialize this message to RecordWorkflowTaskStartedResponse.
type RecordWorkflowTaskStartedResponseWithRawHistory struct {
	state                      protoimpl.MessageState         `protogen:"open.v1"`
	WorkflowType               *v14.WorkflowType              `protobuf:"bytes,1,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	PreviousStartedEventId     int64                          `protobuf:"varint,2,opt,name=previous_started_event_id,json=previousStartedEventId,proto3" json:"previous_started_event_id,omitempty"`
	ScheduledEventId           int64                          `protobuf:"varint,3,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	StartedEventId             int64                          `protobuf:"varint,4,opt,name=started_event_id,json=startedEventId,proto3" json:"started_event_id,omitempty"`
	NextEventId                int64                          `protobuf:"varint,5,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	Attempt                    int32                          `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	StickyExecutionEnabled     bool                           `protobuf:"varint,7,opt,name=sticky_execution_enabled,json=stickyExecutionEnabled,proto3" json:"sticky_execution_enabled,omitempty"`
	TransientWorkflowTask      *v17.TransientWorkflowTaskInfo `protobuf:"bytes,8,opt,name=transient_workflow_task,json=transientWorkflowTask,proto3" json:"transient_workflow_task,omitempty"`
	WorkflowExecutionTaskQueue *v19.TaskQueue                 `protobuf:"bytes,9,opt,name=workflow_execution_task_queue,json=workflowExecutionTaskQueue,proto3" json:"workflow_execution_task_queue,omitempty"`
	BranchToken                []byte                         `protobuf:"bytes,11,opt,name=branch_token,json=branchToken,proto3" json:"branch_token,omitempty"`
	ScheduledTime              *timestamppb.Timestamp         `protobuf:"bytes,12,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	StartedTime                *timestamppb.Timestamp         `protobuf:"bytes,13,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	Queries                    map[string]*v113.WorkflowQuery `protobuf:"bytes,14,rep,name=queries,proto3" json:"queries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Clock                      *v16.VectorClock               `protobuf:"bytes,15,opt,name=clock,proto3" json:"clock,omitempty"`
	Messages                   []*v114.Message                `protobuf:"bytes,16,rep,name=messages,proto3" json:"messages,omitempty"`
	Version                    int64                          `protobuf:"varint,17,opt,name=version,proto3" json:"version,omitempty"`
	History                    *v115.History                  `protobuf:"bytes,18,opt,name=history,proto3" json:"history,omitempty"`
	NextPageToken              []byte                         `protobuf:"bytes,19,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	RawHistory                 [][]byte                       `protobuf:"bytes,20,rep,name=raw_history,json=rawHistory,proto3" json:"raw_history,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) Reset() {
	*x = RecordWorkflowTaskStartedResponseWithRawHistory{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordWorkflowTaskStartedResponseWithRawHistory) ProtoMessage() {}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordWorkflowTaskStartedResponseWithRawHistory.ProtoReflect.Descriptor instead.
func (*RecordWorkflowTaskStartedResponseWithRawHistory) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{13}
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetWorkflowType() *v14.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetPreviousStartedEventId() int64 {
	if x != nil {
		return x.PreviousStartedEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetStartedEventId() int64 {
	if x != nil {
		return x.StartedEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetNextEventId() int64 {
	if x != nil {
		return x.NextEventId
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetStickyExecutionEnabled() bool {
	if x != nil {
		return x.StickyExecutionEnabled
	}
	return false
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetTransientWorkflowTask() *v17.TransientWorkflowTaskInfo {
	if x != nil {
		return x.TransientWorkflowTask
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetWorkflowExecutionTaskQueue() *v19.TaskQueue {
	if x != nil {
		return x.WorkflowExecutionTaskQueue
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetBranchToken() []byte {
	if x != nil {
		return x.BranchToken
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetQueries() map[string]*v113.WorkflowQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetMessages() []*v114.Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetHistory() *v115.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *RecordWorkflowTaskStartedResponseWithRawHistory) GetRawHistory() [][]byte {
	if x != nil {
		return x.RawHistory
	}
	return nil
}

type RecordActivityTaskStartedRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	ScheduledEventId  int64                  `protobuf:"varint,3,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	// Unique id of each poll request. Used to ensure at most once delivery of tasks.
	RequestId           string                           `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	PollRequest         *v1.PollActivityTaskQueueRequest `protobuf:"bytes,6,opt,name=poll_request,json=pollRequest,proto3" json:"poll_request,omitempty"`
	Clock               *v16.VectorClock                 `protobuf:"bytes,7,opt,name=clock,proto3" json:"clock,omitempty"`
	BuildIdRedirectInfo *v111.BuildIdRedirectInfo        `protobuf:"bytes,8,opt,name=build_id_redirect_info,json=buildIdRedirectInfo,proto3" json:"build_id_redirect_info,omitempty"`
	// Stamp represents the internal “version” of the activity options and can/will be changed with Activity API.
	Stamp int32 `protobuf:"varint,9,opt,name=stamp,proto3" json:"stamp,omitempty"`
	// The deployment passed by History when the task was scheduled.
	// Deprecated. use `version_directive.deployment`.
	ScheduledDeployment *v112.Deployment `protobuf:"bytes,10,opt,name=scheduled_deployment,json=scheduledDeployment,proto3" json:"scheduled_deployment,omitempty"`
	// Versioning directive that was sent by history when scheduling the task.
	VersionDirective *v111.TaskVersionDirective `protobuf:"bytes,12,opt,name=version_directive,json=versionDirective,proto3" json:"version_directive,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordActivityTaskStartedRequest) Reset() {
	*x = RecordActivityTaskStartedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordActivityTaskStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordActivityTaskStartedRequest) ProtoMessage() {}

func (x *RecordActivityTaskStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordActivityTaskStartedRequest.ProtoReflect.Descriptor instead.
func (*RecordActivityTaskStartedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{14}
}

func (x *RecordActivityTaskStartedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecordActivityTaskStartedRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *RecordActivityTaskStartedRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *RecordActivityTaskStartedRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecordActivityTaskStartedRequest) GetPollRequest() *v1.PollActivityTaskQueueRequest {
	if x != nil {
		return x.PollRequest
	}
	return nil
}

func (x *RecordActivityTaskStartedRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordActivityTaskStartedRequest) GetBuildIdRedirectInfo() *v111.BuildIdRedirectInfo {
	if x != nil {
		return x.BuildIdRedirectInfo
	}
	return nil
}

func (x *RecordActivityTaskStartedRequest) GetStamp() int32 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *RecordActivityTaskStartedRequest) GetScheduledDeployment() *v112.Deployment {
	if x != nil {
		return x.ScheduledDeployment
	}
	return nil
}

func (x *RecordActivityTaskStartedRequest) GetVersionDirective() *v111.TaskVersionDirective {
	if x != nil {
		return x.VersionDirective
	}
	return nil
}

type RecordActivityTaskStartedResponse struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	ScheduledEvent              *v115.HistoryEvent     `protobuf:"bytes,1,opt,name=scheduled_event,json=scheduledEvent,proto3" json:"scheduled_event,omitempty"`
	StartedTime                 *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	Attempt                     int32                  `protobuf:"varint,3,opt,name=attempt,proto3" json:"attempt,omitempty"`
	CurrentAttemptScheduledTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=current_attempt_scheduled_time,json=currentAttemptScheduledTime,proto3" json:"current_attempt_scheduled_time,omitempty"`
	HeartbeatDetails            *v14.Payloads          `protobuf:"bytes,5,opt,name=heartbeat_details,json=heartbeatDetails,proto3" json:"heartbeat_details,omitempty"`
	WorkflowType                *v14.WorkflowType      `protobuf:"bytes,6,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	WorkflowNamespace           string                 `protobuf:"bytes,7,opt,name=workflow_namespace,json=workflowNamespace,proto3" json:"workflow_namespace,omitempty"`
	Clock                       *v16.VectorClock       `protobuf:"bytes,8,opt,name=clock,proto3" json:"clock,omitempty"`
	Version                     int64                  `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
	Priority                    *v14.Priority          `protobuf:"bytes,10,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RecordActivityTaskStartedResponse) Reset() {
	*x = RecordActivityTaskStartedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordActivityTaskStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordActivityTaskStartedResponse) ProtoMessage() {}

func (x *RecordActivityTaskStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordActivityTaskStartedResponse.ProtoReflect.Descriptor instead.
func (*RecordActivityTaskStartedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{15}
}

func (x *RecordActivityTaskStartedResponse) GetScheduledEvent() *v115.HistoryEvent {
	if x != nil {
		return x.ScheduledEvent
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *RecordActivityTaskStartedResponse) GetCurrentAttemptScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentAttemptScheduledTime
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetHeartbeatDetails() *v14.Payloads {
	if x != nil {
		return x.HeartbeatDetails
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetWorkflowType() *v14.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetWorkflowNamespace() string {
	if x != nil {
		return x.WorkflowNamespace
	}
	return ""
}

func (x *RecordActivityTaskStartedResponse) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordActivityTaskStartedResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RecordActivityTaskStartedResponse) GetPriority() *v14.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type RespondWorkflowTaskCompletedRequest struct {
	state           protoimpl.MessageState                  `protogen:"open.v1"`
	NamespaceId     string                                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	CompleteRequest *v1.RespondWorkflowTaskCompletedRequest `protobuf:"bytes,2,opt,name=complete_request,json=completeRequest,proto3" json:"complete_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RespondWorkflowTaskCompletedRequest) Reset() {
	*x = RespondWorkflowTaskCompletedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondWorkflowTaskCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondWorkflowTaskCompletedRequest) ProtoMessage() {}

func (x *RespondWorkflowTaskCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondWorkflowTaskCompletedRequest.ProtoReflect.Descriptor instead.
func (*RespondWorkflowTaskCompletedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{16}
}

func (x *RespondWorkflowTaskCompletedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondWorkflowTaskCompletedRequest) GetCompleteRequest() *v1.RespondWorkflowTaskCompletedRequest {
	if x != nil {
		return x.CompleteRequest
	}
	return nil
}

type RespondWorkflowTaskCompletedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Deprecated: Marked as deprecated in temporal/server/api/historyservice/v1/request_response.proto.
	StartedResponse     *RecordWorkflowTaskStartedResponse  `protobuf:"bytes,1,opt,name=started_response,json=startedResponse,proto3" json:"started_response,omitempty"`
	ActivityTasks       []*v1.PollActivityTaskQueueResponse `protobuf:"bytes,2,rep,name=activity_tasks,json=activityTasks,proto3" json:"activity_tasks,omitempty"`
	ResetHistoryEventId int64                               `protobuf:"varint,3,opt,name=reset_history_event_id,json=resetHistoryEventId,proto3" json:"reset_history_event_id,omitempty"`
	NewWorkflowTask     *v1.PollWorkflowTaskQueueResponse   `protobuf:"bytes,4,opt,name=new_workflow_task,json=newWorkflowTask,proto3" json:"new_workflow_task,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RespondWorkflowTaskCompletedResponse) Reset() {
	*x = RespondWorkflowTaskCompletedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondWorkflowTaskCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondWorkflowTaskCompletedResponse) ProtoMessage() {}

func (x *RespondWorkflowTaskCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondWorkflowTaskCompletedResponse.ProtoReflect.Descriptor instead.
func (*RespondWorkflowTaskCompletedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{17}
}

// Deprecated: Marked as deprecated in temporal/server/api/historyservice/v1/request_response.proto.
func (x *RespondWorkflowTaskCompletedResponse) GetStartedResponse() *RecordWorkflowTaskStartedResponse {
	if x != nil {
		return x.StartedResponse
	}
	return nil
}

func (x *RespondWorkflowTaskCompletedResponse) GetActivityTasks() []*v1.PollActivityTaskQueueResponse {
	if x != nil {
		return x.ActivityTasks
	}
	return nil
}

func (x *RespondWorkflowTaskCompletedResponse) GetResetHistoryEventId() int64 {
	if x != nil {
		return x.ResetHistoryEventId
	}
	return 0
}

func (x *RespondWorkflowTaskCompletedResponse) GetNewWorkflowTask() *v1.PollWorkflowTaskQueueResponse {
	if x != nil {
		return x.NewWorkflowTask
	}
	return nil
}

type RespondWorkflowTaskFailedRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	NamespaceId   string                               `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	FailedRequest *v1.RespondWorkflowTaskFailedRequest `protobuf:"bytes,2,opt,name=failed_request,json=failedRequest,proto3" json:"failed_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondWorkflowTaskFailedRequest) Reset() {
	*x = RespondWorkflowTaskFailedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondWorkflowTaskFailedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondWorkflowTaskFailedRequest) ProtoMessage() {}

func (x *RespondWorkflowTaskFailedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondWorkflowTaskFailedRequest.ProtoReflect.Descriptor instead.
func (*RespondWorkflowTaskFailedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{18}
}

func (x *RespondWorkflowTaskFailedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondWorkflowTaskFailedRequest) GetFailedRequest() *v1.RespondWorkflowTaskFailedRequest {
	if x != nil {
		return x.FailedRequest
	}
	return nil
}

type RespondWorkflowTaskFailedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondWorkflowTaskFailedResponse) Reset() {
	*x = RespondWorkflowTaskFailedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondWorkflowTaskFailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondWorkflowTaskFailedResponse) ProtoMessage() {}

func (x *RespondWorkflowTaskFailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondWorkflowTaskFailedResponse.ProtoReflect.Descriptor instead.
func (*RespondWorkflowTaskFailedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{19}
}

type IsWorkflowTaskValidRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId      string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution        *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	Clock            *v16.VectorClock       `protobuf:"bytes,3,opt,name=clock,proto3" json:"clock,omitempty"`
	ScheduledEventId int64                  `protobuf:"varint,4,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IsWorkflowTaskValidRequest) Reset() {
	*x = IsWorkflowTaskValidRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsWorkflowTaskValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkflowTaskValidRequest) ProtoMessage() {}

func (x *IsWorkflowTaskValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsWorkflowTaskValidRequest.ProtoReflect.Descriptor instead.
func (*IsWorkflowTaskValidRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{20}
}

func (x *IsWorkflowTaskValidRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *IsWorkflowTaskValidRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *IsWorkflowTaskValidRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *IsWorkflowTaskValidRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

type IsWorkflowTaskValidResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// whether matching service can call history service to start the workflow task
	IsValid       bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsWorkflowTaskValidResponse) Reset() {
	*x = IsWorkflowTaskValidResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsWorkflowTaskValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsWorkflowTaskValidResponse) ProtoMessage() {}

func (x *IsWorkflowTaskValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsWorkflowTaskValidResponse.ProtoReflect.Descriptor instead.
func (*IsWorkflowTaskValidResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{21}
}

func (x *IsWorkflowTaskValidResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type RecordActivityTaskHeartbeatRequest struct {
	state            protoimpl.MessageState                 `protogen:"open.v1"`
	NamespaceId      string                                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	HeartbeatRequest *v1.RecordActivityTaskHeartbeatRequest `protobuf:"bytes,2,opt,name=heartbeat_request,json=heartbeatRequest,proto3" json:"heartbeat_request,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordActivityTaskHeartbeatRequest) Reset() {
	*x = RecordActivityTaskHeartbeatRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordActivityTaskHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordActivityTaskHeartbeatRequest) ProtoMessage() {}

func (x *RecordActivityTaskHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordActivityTaskHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*RecordActivityTaskHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{22}
}

func (x *RecordActivityTaskHeartbeatRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecordActivityTaskHeartbeatRequest) GetHeartbeatRequest() *v1.RecordActivityTaskHeartbeatRequest {
	if x != nil {
		return x.HeartbeatRequest
	}
	return nil
}

type RecordActivityTaskHeartbeatResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CancelRequested bool                   `protobuf:"varint,1,opt,name=cancel_requested,json=cancelRequested,proto3" json:"cancel_requested,omitempty"`
	ActivityPaused  bool                   `protobuf:"varint,2,opt,name=activity_paused,json=activityPaused,proto3" json:"activity_paused,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RecordActivityTaskHeartbeatResponse) Reset() {
	*x = RecordActivityTaskHeartbeatResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordActivityTaskHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordActivityTaskHeartbeatResponse) ProtoMessage() {}

func (x *RecordActivityTaskHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordActivityTaskHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*RecordActivityTaskHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{23}
}

func (x *RecordActivityTaskHeartbeatResponse) GetCancelRequested() bool {
	if x != nil {
		return x.CancelRequested
	}
	return false
}

func (x *RecordActivityTaskHeartbeatResponse) GetActivityPaused() bool {
	if x != nil {
		return x.ActivityPaused
	}
	return false
}

type RespondActivityTaskCompletedRequest struct {
	state           protoimpl.MessageState                  `protogen:"open.v1"`
	NamespaceId     string                                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	CompleteRequest *v1.RespondActivityTaskCompletedRequest `protobuf:"bytes,2,opt,name=complete_request,json=completeRequest,proto3" json:"complete_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RespondActivityTaskCompletedRequest) Reset() {
	*x = RespondActivityTaskCompletedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskCompletedRequest) ProtoMessage() {}

func (x *RespondActivityTaskCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskCompletedRequest.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskCompletedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{24}
}

func (x *RespondActivityTaskCompletedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondActivityTaskCompletedRequest) GetCompleteRequest() *v1.RespondActivityTaskCompletedRequest {
	if x != nil {
		return x.CompleteRequest
	}
	return nil
}

type RespondActivityTaskCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondActivityTaskCompletedResponse) Reset() {
	*x = RespondActivityTaskCompletedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskCompletedResponse) ProtoMessage() {}

func (x *RespondActivityTaskCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskCompletedResponse.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskCompletedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{25}
}

type RespondActivityTaskFailedRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	NamespaceId   string                               `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	FailedRequest *v1.RespondActivityTaskFailedRequest `protobuf:"bytes,2,opt,name=failed_request,json=failedRequest,proto3" json:"failed_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondActivityTaskFailedRequest) Reset() {
	*x = RespondActivityTaskFailedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskFailedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskFailedRequest) ProtoMessage() {}

func (x *RespondActivityTaskFailedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskFailedRequest.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskFailedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{26}
}

func (x *RespondActivityTaskFailedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondActivityTaskFailedRequest) GetFailedRequest() *v1.RespondActivityTaskFailedRequest {
	if x != nil {
		return x.FailedRequest
	}
	return nil
}

type RespondActivityTaskFailedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondActivityTaskFailedResponse) Reset() {
	*x = RespondActivityTaskFailedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskFailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskFailedResponse) ProtoMessage() {}

func (x *RespondActivityTaskFailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskFailedResponse.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskFailedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{27}
}

type RespondActivityTaskCanceledRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	NamespaceId   string                                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	CancelRequest *v1.RespondActivityTaskCanceledRequest `protobuf:"bytes,2,opt,name=cancel_request,json=cancelRequest,proto3" json:"cancel_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondActivityTaskCanceledRequest) Reset() {
	*x = RespondActivityTaskCanceledRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskCanceledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskCanceledRequest) ProtoMessage() {}

func (x *RespondActivityTaskCanceledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskCanceledRequest.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskCanceledRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{28}
}

func (x *RespondActivityTaskCanceledRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondActivityTaskCanceledRequest) GetCancelRequest() *v1.RespondActivityTaskCanceledRequest {
	if x != nil {
		return x.CancelRequest
	}
	return nil
}

type RespondActivityTaskCanceledResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondActivityTaskCanceledResponse) Reset() {
	*x = RespondActivityTaskCanceledResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondActivityTaskCanceledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondActivityTaskCanceledResponse) ProtoMessage() {}

func (x *RespondActivityTaskCanceledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondActivityTaskCanceledResponse.ProtoReflect.Descriptor instead.
func (*RespondActivityTaskCanceledResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{29}
}

type IsActivityTaskValidRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId      string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution        *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	Clock            *v16.VectorClock       `protobuf:"bytes,3,opt,name=clock,proto3" json:"clock,omitempty"`
	ScheduledEventId int64                  `protobuf:"varint,4,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IsActivityTaskValidRequest) Reset() {
	*x = IsActivityTaskValidRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsActivityTaskValidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsActivityTaskValidRequest) ProtoMessage() {}

func (x *IsActivityTaskValidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsActivityTaskValidRequest.ProtoReflect.Descriptor instead.
func (*IsActivityTaskValidRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{30}
}

func (x *IsActivityTaskValidRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *IsActivityTaskValidRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *IsActivityTaskValidRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *IsActivityTaskValidRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

type IsActivityTaskValidResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// whether matching service can call history service to start the activity task
	IsValid       bool `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsActivityTaskValidResponse) Reset() {
	*x = IsActivityTaskValidResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsActivityTaskValidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsActivityTaskValidResponse) ProtoMessage() {}

func (x *IsActivityTaskValidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsActivityTaskValidResponse.ProtoReflect.Descriptor instead.
func (*IsActivityTaskValidResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{31}
}

func (x *IsActivityTaskValidResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type SignalWorkflowExecutionRequest struct {
	state                     protoimpl.MessageState             `protogen:"open.v1"`
	NamespaceId               string                             `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	SignalRequest             *v1.SignalWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=signal_request,json=signalRequest,proto3" json:"signal_request,omitempty"`
	ExternalWorkflowExecution *v14.WorkflowExecution             `protobuf:"bytes,3,opt,name=external_workflow_execution,json=externalWorkflowExecution,proto3" json:"external_workflow_execution,omitempty"`
	ChildWorkflowOnly         bool                               `protobuf:"varint,4,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SignalWorkflowExecutionRequest) Reset() {
	*x = SignalWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWorkflowExecutionRequest) ProtoMessage() {}

func (x *SignalWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*SignalWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{32}
}

func (x *SignalWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SignalWorkflowExecutionRequest) GetSignalRequest() *v1.SignalWorkflowExecutionRequest {
	if x != nil {
		return x.SignalRequest
	}
	return nil
}

func (x *SignalWorkflowExecutionRequest) GetExternalWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ExternalWorkflowExecution
	}
	return nil
}

func (x *SignalWorkflowExecutionRequest) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

type SignalWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalWorkflowExecutionResponse) Reset() {
	*x = SignalWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWorkflowExecutionResponse) ProtoMessage() {}

func (x *SignalWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*SignalWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{33}
}

type SignalWithStartWorkflowExecutionRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "with" is needed here. --)
	SignalWithStartRequest *v1.SignalWithStartWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=signal_with_start_request,json=signalWithStartRequest,proto3" json:"signal_with_start_request,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SignalWithStartWorkflowExecutionRequest) Reset() {
	*x = SignalWithStartWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWithStartWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWithStartWorkflowExecutionRequest) ProtoMessage() {}

func (x *SignalWithStartWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWithStartWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*SignalWithStartWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{34}
}

func (x *SignalWithStartWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SignalWithStartWorkflowExecutionRequest) GetSignalWithStartRequest() *v1.SignalWithStartWorkflowExecutionRequest {
	if x != nil {
		return x.SignalWithStartRequest
	}
	return nil
}

type SignalWithStartWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Started       bool                   `protobuf:"varint,2,opt,name=started,proto3" json:"started,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalWithStartWorkflowExecutionResponse) Reset() {
	*x = SignalWithStartWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalWithStartWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalWithStartWorkflowExecutionResponse) ProtoMessage() {}

func (x *SignalWithStartWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalWithStartWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*SignalWithStartWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{35}
}

func (x *SignalWithStartWorkflowExecutionResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *SignalWithStartWorkflowExecutionResponse) GetStarted() bool {
	if x != nil {
		return x.Started
	}
	return false
}

type RemoveSignalMutableStateRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	RequestId         string                 `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RemoveSignalMutableStateRequest) Reset() {
	*x = RemoveSignalMutableStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSignalMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSignalMutableStateRequest) ProtoMessage() {}

func (x *RemoveSignalMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSignalMutableStateRequest.ProtoReflect.Descriptor instead.
func (*RemoveSignalMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{36}
}

func (x *RemoveSignalMutableStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RemoveSignalMutableStateRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *RemoveSignalMutableStateRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type RemoveSignalMutableStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSignalMutableStateResponse) Reset() {
	*x = RemoveSignalMutableStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSignalMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSignalMutableStateResponse) ProtoMessage() {}

func (x *RemoveSignalMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSignalMutableStateResponse.ProtoReflect.Descriptor instead.
func (*RemoveSignalMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{37}
}

type TerminateWorkflowExecutionRequest struct {
	state                     protoimpl.MessageState                `protogen:"open.v1"`
	NamespaceId               string                                `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TerminateRequest          *v1.TerminateWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=terminate_request,json=terminateRequest,proto3" json:"terminate_request,omitempty"`
	ExternalWorkflowExecution *v14.WorkflowExecution                `protobuf:"bytes,3,opt,name=external_workflow_execution,json=externalWorkflowExecution,proto3" json:"external_workflow_execution,omitempty"`
	ChildWorkflowOnly         bool                                  `protobuf:"varint,4,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TerminateWorkflowExecutionRequest) Reset() {
	*x = TerminateWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateWorkflowExecutionRequest) ProtoMessage() {}

func (x *TerminateWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*TerminateWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{38}
}

func (x *TerminateWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *TerminateWorkflowExecutionRequest) GetTerminateRequest() *v1.TerminateWorkflowExecutionRequest {
	if x != nil {
		return x.TerminateRequest
	}
	return nil
}

func (x *TerminateWorkflowExecutionRequest) GetExternalWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ExternalWorkflowExecution
	}
	return nil
}

func (x *TerminateWorkflowExecutionRequest) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

type TerminateWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminateWorkflowExecutionResponse) Reset() {
	*x = TerminateWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminateWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateWorkflowExecutionResponse) ProtoMessage() {}

func (x *TerminateWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*TerminateWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{39}
}

type DeleteWorkflowExecutionRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId        string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution  *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	ClosedWorkflowOnly bool                   `protobuf:"varint,4,opt,name=closed_workflow_only,json=closedWorkflowOnly,proto3" json:"closed_workflow_only,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *DeleteWorkflowExecutionRequest) Reset() {
	*x = DeleteWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowExecutionRequest) ProtoMessage() {}

func (x *DeleteWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteWorkflowExecutionRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *DeleteWorkflowExecutionRequest) GetClosedWorkflowOnly() bool {
	if x != nil {
		return x.ClosedWorkflowOnly
	}
	return false
}

type DeleteWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowExecutionResponse) Reset() {
	*x = DeleteWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowExecutionResponse) ProtoMessage() {}

func (x *DeleteWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{41}
}

type ResetWorkflowExecutionRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	NamespaceId   string                            `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ResetRequest  *v1.ResetWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=reset_request,json=resetRequest,proto3" json:"reset_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetWorkflowExecutionRequest) Reset() {
	*x = ResetWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetWorkflowExecutionRequest) ProtoMessage() {}

func (x *ResetWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*ResetWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{42}
}

func (x *ResetWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ResetWorkflowExecutionRequest) GetResetRequest() *v1.ResetWorkflowExecutionRequest {
	if x != nil {
		return x.ResetRequest
	}
	return nil
}

type ResetWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetWorkflowExecutionResponse) Reset() {
	*x = ResetWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetWorkflowExecutionResponse) ProtoMessage() {}

func (x *ResetWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*ResetWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{43}
}

func (x *ResetWorkflowExecutionResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type RequestCancelWorkflowExecutionRequest struct {
	state                     protoimpl.MessageState                    `protogen:"open.v1"`
	NamespaceId               string                                    `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	CancelRequest             *v1.RequestCancelWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=cancel_request,json=cancelRequest,proto3" json:"cancel_request,omitempty"`
	ExternalInitiatedEventId  int64                                     `protobuf:"varint,3,opt,name=external_initiated_event_id,json=externalInitiatedEventId,proto3" json:"external_initiated_event_id,omitempty"`
	ExternalWorkflowExecution *v14.WorkflowExecution                    `protobuf:"bytes,4,opt,name=external_workflow_execution,json=externalWorkflowExecution,proto3" json:"external_workflow_execution,omitempty"`
	ChildWorkflowOnly         bool                                      `protobuf:"varint,5,opt,name=child_workflow_only,json=childWorkflowOnly,proto3" json:"child_workflow_only,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RequestCancelWorkflowExecutionRequest) Reset() {
	*x = RequestCancelWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCancelWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCancelWorkflowExecutionRequest) ProtoMessage() {}

func (x *RequestCancelWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCancelWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*RequestCancelWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{44}
}

func (x *RequestCancelWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RequestCancelWorkflowExecutionRequest) GetCancelRequest() *v1.RequestCancelWorkflowExecutionRequest {
	if x != nil {
		return x.CancelRequest
	}
	return nil
}

func (x *RequestCancelWorkflowExecutionRequest) GetExternalInitiatedEventId() int64 {
	if x != nil {
		return x.ExternalInitiatedEventId
	}
	return 0
}

func (x *RequestCancelWorkflowExecutionRequest) GetExternalWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ExternalWorkflowExecution
	}
	return nil
}

func (x *RequestCancelWorkflowExecutionRequest) GetChildWorkflowOnly() bool {
	if x != nil {
		return x.ChildWorkflowOnly
	}
	return false
}

type RequestCancelWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestCancelWorkflowExecutionResponse) Reset() {
	*x = RequestCancelWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestCancelWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestCancelWorkflowExecutionResponse) ProtoMessage() {}

func (x *RequestCancelWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestCancelWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*RequestCancelWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{45}
}

type ScheduleWorkflowTaskRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId         string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution   *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	IsFirstWorkflowTask bool                   `protobuf:"varint,3,opt,name=is_first_workflow_task,json=isFirstWorkflowTask,proto3" json:"is_first_workflow_task,omitempty"`
	ChildClock          *v16.VectorClock       `protobuf:"bytes,4,opt,name=child_clock,json=childClock,proto3" json:"child_clock,omitempty"`
	ParentClock         *v16.VectorClock       `protobuf:"bytes,5,opt,name=parent_clock,json=parentClock,proto3" json:"parent_clock,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ScheduleWorkflowTaskRequest) Reset() {
	*x = ScheduleWorkflowTaskRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowTaskRequest) ProtoMessage() {}

func (x *ScheduleWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{46}
}

func (x *ScheduleWorkflowTaskRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ScheduleWorkflowTaskRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *ScheduleWorkflowTaskRequest) GetIsFirstWorkflowTask() bool {
	if x != nil {
		return x.IsFirstWorkflowTask
	}
	return false
}

func (x *ScheduleWorkflowTaskRequest) GetChildClock() *v16.VectorClock {
	if x != nil {
		return x.ChildClock
	}
	return nil
}

func (x *ScheduleWorkflowTaskRequest) GetParentClock() *v16.VectorClock {
	if x != nil {
		return x.ParentClock
	}
	return nil
}

type ScheduleWorkflowTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleWorkflowTaskResponse) Reset() {
	*x = ScheduleWorkflowTaskResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleWorkflowTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleWorkflowTaskResponse) ProtoMessage() {}

func (x *ScheduleWorkflowTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleWorkflowTaskResponse.ProtoReflect.Descriptor instead.
func (*ScheduleWorkflowTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{47}
}

type VerifyFirstWorkflowTaskScheduledRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	Clock             *v16.VectorClock       `protobuf:"bytes,3,opt,name=clock,proto3" json:"clock,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *VerifyFirstWorkflowTaskScheduledRequest) Reset() {
	*x = VerifyFirstWorkflowTaskScheduledRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyFirstWorkflowTaskScheduledRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFirstWorkflowTaskScheduledRequest) ProtoMessage() {}

func (x *VerifyFirstWorkflowTaskScheduledRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFirstWorkflowTaskScheduledRequest.ProtoReflect.Descriptor instead.
func (*VerifyFirstWorkflowTaskScheduledRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{48}
}

func (x *VerifyFirstWorkflowTaskScheduledRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *VerifyFirstWorkflowTaskScheduledRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *VerifyFirstWorkflowTaskScheduledRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

type VerifyFirstWorkflowTaskScheduledResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyFirstWorkflowTaskScheduledResponse) Reset() {
	*x = VerifyFirstWorkflowTaskScheduledResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyFirstWorkflowTaskScheduledResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyFirstWorkflowTaskScheduledResponse) ProtoMessage() {}

func (x *VerifyFirstWorkflowTaskScheduledResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyFirstWorkflowTaskScheduledResponse.ProtoReflect.Descriptor instead.
func (*VerifyFirstWorkflowTaskScheduledResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{49}
}

// *
// RecordChildExecutionCompletedRequest is used for reporting the completion of child execution to parent workflow
// execution which started it.  When a child execution is completed it creates this request and calls the
// RecordChildExecutionCompleted API with the workflowExecution of parent.  It also sets the completedExecution of the
// child as it could potentially be different than the ChildExecutionStartedEvent of parent in the situation when
// child creates multiple runs through ContinueAsNew before finally completing.
type RecordChildExecutionCompletedRequest struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId              string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ParentExecution          *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=parent_execution,json=parentExecution,proto3" json:"parent_execution,omitempty"`
	ParentInitiatedId        int64                  `protobuf:"varint,3,opt,name=parent_initiated_id,json=parentInitiatedId,proto3" json:"parent_initiated_id,omitempty"`
	ChildExecution           *v14.WorkflowExecution `protobuf:"bytes,4,opt,name=child_execution,json=childExecution,proto3" json:"child_execution,omitempty"`
	CompletionEvent          *v115.HistoryEvent     `protobuf:"bytes,5,opt,name=completion_event,json=completionEvent,proto3" json:"completion_event,omitempty"`
	Clock                    *v16.VectorClock       `protobuf:"bytes,6,opt,name=clock,proto3" json:"clock,omitempty"`
	ParentInitiatedVersion   int64                  `protobuf:"varint,7,opt,name=parent_initiated_version,json=parentInitiatedVersion,proto3" json:"parent_initiated_version,omitempty"`
	ChildFirstExecutionRunId string                 `protobuf:"bytes,8,opt,name=child_first_execution_run_id,json=childFirstExecutionRunId,proto3" json:"child_first_execution_run_id,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RecordChildExecutionCompletedRequest) Reset() {
	*x = RecordChildExecutionCompletedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordChildExecutionCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChildExecutionCompletedRequest) ProtoMessage() {}

func (x *RecordChildExecutionCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChildExecutionCompletedRequest.ProtoReflect.Descriptor instead.
func (*RecordChildExecutionCompletedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{50}
}

func (x *RecordChildExecutionCompletedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RecordChildExecutionCompletedRequest) GetParentExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ParentExecution
	}
	return nil
}

func (x *RecordChildExecutionCompletedRequest) GetParentInitiatedId() int64 {
	if x != nil {
		return x.ParentInitiatedId
	}
	return 0
}

func (x *RecordChildExecutionCompletedRequest) GetChildExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ChildExecution
	}
	return nil
}

func (x *RecordChildExecutionCompletedRequest) GetCompletionEvent() *v115.HistoryEvent {
	if x != nil {
		return x.CompletionEvent
	}
	return nil
}

func (x *RecordChildExecutionCompletedRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *RecordChildExecutionCompletedRequest) GetParentInitiatedVersion() int64 {
	if x != nil {
		return x.ParentInitiatedVersion
	}
	return 0
}

func (x *RecordChildExecutionCompletedRequest) GetChildFirstExecutionRunId() string {
	if x != nil {
		return x.ChildFirstExecutionRunId
	}
	return ""
}

type RecordChildExecutionCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordChildExecutionCompletedResponse) Reset() {
	*x = RecordChildExecutionCompletedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordChildExecutionCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordChildExecutionCompletedResponse) ProtoMessage() {}

func (x *RecordChildExecutionCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordChildExecutionCompletedResponse.ProtoReflect.Descriptor instead.
func (*RecordChildExecutionCompletedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{51}
}

type VerifyChildExecutionCompletionRecordedRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId            string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ParentExecution        *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=parent_execution,json=parentExecution,proto3" json:"parent_execution,omitempty"`
	ChildExecution         *v14.WorkflowExecution `protobuf:"bytes,3,opt,name=child_execution,json=childExecution,proto3" json:"child_execution,omitempty"`
	ParentInitiatedId      int64                  `protobuf:"varint,4,opt,name=parent_initiated_id,json=parentInitiatedId,proto3" json:"parent_initiated_id,omitempty"`
	ParentInitiatedVersion int64                  `protobuf:"varint,5,opt,name=parent_initiated_version,json=parentInitiatedVersion,proto3" json:"parent_initiated_version,omitempty"`
	Clock                  *v16.VectorClock       `protobuf:"bytes,6,opt,name=clock,proto3" json:"clock,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VerifyChildExecutionCompletionRecordedRequest) Reset() {
	*x = VerifyChildExecutionCompletionRecordedRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyChildExecutionCompletionRecordedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyChildExecutionCompletionRecordedRequest) ProtoMessage() {}

func (x *VerifyChildExecutionCompletionRecordedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyChildExecutionCompletionRecordedRequest.ProtoReflect.Descriptor instead.
func (*VerifyChildExecutionCompletionRecordedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{52}
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetParentExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ParentExecution
	}
	return nil
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetChildExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.ChildExecution
	}
	return nil
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetParentInitiatedId() int64 {
	if x != nil {
		return x.ParentInitiatedId
	}
	return 0
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetParentInitiatedVersion() int64 {
	if x != nil {
		return x.ParentInitiatedVersion
	}
	return 0
}

func (x *VerifyChildExecutionCompletionRecordedRequest) GetClock() *v16.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

type VerifyChildExecutionCompletionRecordedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyChildExecutionCompletionRecordedResponse) Reset() {
	*x = VerifyChildExecutionCompletionRecordedResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyChildExecutionCompletionRecordedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyChildExecutionCompletionRecordedResponse) ProtoMessage() {}

func (x *VerifyChildExecutionCompletionRecordedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyChildExecutionCompletionRecordedResponse.ProtoReflect.Descriptor instead.
func (*VerifyChildExecutionCompletionRecordedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{53}
}

type DescribeWorkflowExecutionRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	NamespaceId   string                               `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.DescribeWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeWorkflowExecutionRequest) Reset() {
	*x = DescribeWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkflowExecutionRequest) ProtoMessage() {}

func (x *DescribeWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*DescribeWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{54}
}

func (x *DescribeWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeWorkflowExecutionRequest) GetRequest() *v1.DescribeWorkflowExecutionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type DescribeWorkflowExecutionResponse struct {
	state                  protoimpl.MessageState             `protogen:"open.v1"`
	ExecutionConfig        *v15.WorkflowExecutionConfig       `protobuf:"bytes,1,opt,name=execution_config,json=executionConfig,proto3" json:"execution_config,omitempty"`
	WorkflowExecutionInfo  *v15.WorkflowExecutionInfo         `protobuf:"bytes,2,opt,name=workflow_execution_info,json=workflowExecutionInfo,proto3" json:"workflow_execution_info,omitempty"`
	PendingActivities      []*v15.PendingActivityInfo         `protobuf:"bytes,3,rep,name=pending_activities,json=pendingActivities,proto3" json:"pending_activities,omitempty"`
	PendingChildren        []*v15.PendingChildExecutionInfo   `protobuf:"bytes,4,rep,name=pending_children,json=pendingChildren,proto3" json:"pending_children,omitempty"`
	PendingWorkflowTask    *v15.PendingWorkflowTaskInfo       `protobuf:"bytes,5,opt,name=pending_workflow_task,json=pendingWorkflowTask,proto3" json:"pending_workflow_task,omitempty"`
	Callbacks              []*v15.CallbackInfo                `protobuf:"bytes,6,rep,name=callbacks,proto3" json:"callbacks,omitempty"`
	PendingNexusOperations []*v15.PendingNexusOperationInfo   `protobuf:"bytes,7,rep,name=pending_nexus_operations,json=pendingNexusOperations,proto3" json:"pending_nexus_operations,omitempty"`
	WorkflowExtendedInfo   *v15.WorkflowExecutionExtendedInfo `protobuf:"bytes,8,opt,name=workflow_extended_info,json=workflowExtendedInfo,proto3" json:"workflow_extended_info,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DescribeWorkflowExecutionResponse) Reset() {
	*x = DescribeWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeWorkflowExecutionResponse) ProtoMessage() {}

func (x *DescribeWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*DescribeWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{55}
}

func (x *DescribeWorkflowExecutionResponse) GetExecutionConfig() *v15.WorkflowExecutionConfig {
	if x != nil {
		return x.ExecutionConfig
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetWorkflowExecutionInfo() *v15.WorkflowExecutionInfo {
	if x != nil {
		return x.WorkflowExecutionInfo
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetPendingActivities() []*v15.PendingActivityInfo {
	if x != nil {
		return x.PendingActivities
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetPendingChildren() []*v15.PendingChildExecutionInfo {
	if x != nil {
		return x.PendingChildren
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetPendingWorkflowTask() *v15.PendingWorkflowTaskInfo {
	if x != nil {
		return x.PendingWorkflowTask
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetCallbacks() []*v15.CallbackInfo {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetPendingNexusOperations() []*v15.PendingNexusOperationInfo {
	if x != nil {
		return x.PendingNexusOperations
	}
	return nil
}

func (x *DescribeWorkflowExecutionResponse) GetWorkflowExtendedInfo() *v15.WorkflowExecutionExtendedInfo {
	if x != nil {
		return x.WorkflowExtendedInfo
	}
	return nil
}

type ReplicateEventsV2Request struct {
	state               protoimpl.MessageState    `protogen:"open.v1"`
	NamespaceId         string                    `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution   *v14.WorkflowExecution    `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	VersionHistoryItems []*v17.VersionHistoryItem `protobuf:"bytes,3,rep,name=version_history_items,json=versionHistoryItems,proto3" json:"version_history_items,omitempty"`
	Events              *v14.DataBlob             `protobuf:"bytes,4,opt,name=events,proto3" json:"events,omitempty"`
	// New run events does not need version history since there is no prior events.
	NewRunEvents      *v14.DataBlob          `protobuf:"bytes,5,opt,name=new_run_events,json=newRunEvents,proto3" json:"new_run_events,omitempty"`
	BaseExecutionInfo *v11.BaseExecutionInfo `protobuf:"bytes,6,opt,name=base_execution_info,json=baseExecutionInfo,proto3" json:"base_execution_info,omitempty"`
	NewRunId          string                 `protobuf:"bytes,7,opt,name=new_run_id,json=newRunId,proto3" json:"new_run_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReplicateEventsV2Request) Reset() {
	*x = ReplicateEventsV2Request{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateEventsV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateEventsV2Request) ProtoMessage() {}

func (x *ReplicateEventsV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateEventsV2Request.ProtoReflect.Descriptor instead.
func (*ReplicateEventsV2Request) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{56}
}

func (x *ReplicateEventsV2Request) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ReplicateEventsV2Request) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *ReplicateEventsV2Request) GetVersionHistoryItems() []*v17.VersionHistoryItem {
	if x != nil {
		return x.VersionHistoryItems
	}
	return nil
}

func (x *ReplicateEventsV2Request) GetEvents() *v14.DataBlob {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ReplicateEventsV2Request) GetNewRunEvents() *v14.DataBlob {
	if x != nil {
		return x.NewRunEvents
	}
	return nil
}

func (x *ReplicateEventsV2Request) GetBaseExecutionInfo() *v11.BaseExecutionInfo {
	if x != nil {
		return x.BaseExecutionInfo
	}
	return nil
}

func (x *ReplicateEventsV2Request) GetNewRunId() string {
	if x != nil {
		return x.NewRunId
	}
	return ""
}

type ReplicateEventsV2Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateEventsV2Response) Reset() {
	*x = ReplicateEventsV2Response{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateEventsV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateEventsV2Response) ProtoMessage() {}

func (x *ReplicateEventsV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateEventsV2Response.ProtoReflect.Descriptor instead.
func (*ReplicateEventsV2Response) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{57}
}

type ReplicateWorkflowStateRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	WorkflowState *v18.WorkflowMutableState `protobuf:"bytes,1,opt,name=workflow_state,json=workflowState,proto3" json:"workflow_state,omitempty"`
	RemoteCluster string                    `protobuf:"bytes,2,opt,name=remote_cluster,json=remoteCluster,proto3" json:"remote_cluster,omitempty"`
	NamespaceId   string                    `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateWorkflowStateRequest) Reset() {
	*x = ReplicateWorkflowStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateWorkflowStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateWorkflowStateRequest) ProtoMessage() {}

func (x *ReplicateWorkflowStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateWorkflowStateRequest.ProtoReflect.Descriptor instead.
func (*ReplicateWorkflowStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{58}
}

func (x *ReplicateWorkflowStateRequest) GetWorkflowState() *v18.WorkflowMutableState {
	if x != nil {
		return x.WorkflowState
	}
	return nil
}

func (x *ReplicateWorkflowStateRequest) GetRemoteCluster() string {
	if x != nil {
		return x.RemoteCluster
	}
	return ""
}

func (x *ReplicateWorkflowStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

type ReplicateWorkflowStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateWorkflowStateResponse) Reset() {
	*x = ReplicateWorkflowStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateWorkflowStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateWorkflowStateResponse) ProtoMessage() {}

func (x *ReplicateWorkflowStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateWorkflowStateResponse.ProtoReflect.Descriptor instead.
func (*ReplicateWorkflowStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{59}
}

type SyncShardStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceCluster string                 `protobuf:"bytes,1,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	ShardId       int32                  `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	StatusTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncShardStatusRequest) Reset() {
	*x = SyncShardStatusRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncShardStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncShardStatusRequest) ProtoMessage() {}

func (x *SyncShardStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncShardStatusRequest.ProtoReflect.Descriptor instead.
func (*SyncShardStatusRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{60}
}

func (x *SyncShardStatusRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *SyncShardStatusRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *SyncShardStatusRequest) GetStatusTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusTime
	}
	return nil
}

type SyncShardStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncShardStatusResponse) Reset() {
	*x = SyncShardStatusResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncShardStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncShardStatusResponse) ProtoMessage() {}

func (x *SyncShardStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncShardStatusResponse.ProtoReflect.Descriptor instead.
func (*SyncShardStatusResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{61}
}

type SyncActivityRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId        string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId         string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId              string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Version            int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	ScheduledEventId   int64                  `protobuf:"varint,5,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	ScheduledTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	StartedEventId     int64                  `protobuf:"varint,7,opt,name=started_event_id,json=startedEventId,proto3" json:"started_event_id,omitempty"`
	StartedTime        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	LastHeartbeatTime  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_heartbeat_time,json=lastHeartbeatTime,proto3" json:"last_heartbeat_time,omitempty"`
	Details            *v14.Payloads          `protobuf:"bytes,10,opt,name=details,proto3" json:"details,omitempty"`
	Attempt            int32                  `protobuf:"varint,11,opt,name=attempt,proto3" json:"attempt,omitempty"`
	LastFailure        *v13.Failure           `protobuf:"bytes,12,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	LastWorkerIdentity string                 `protobuf:"bytes,13,opt,name=last_worker_identity,json=lastWorkerIdentity,proto3" json:"last_worker_identity,omitempty"`
	VersionHistory     *v17.VersionHistory    `protobuf:"bytes,14,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	BaseExecutionInfo  *v11.BaseExecutionInfo `protobuf:"bytes,15,opt,name=base_execution_info,json=baseExecutionInfo,proto3" json:"base_execution_info,omitempty"`
	// build ID of the worker who received this activity last time
	LastStartedBuildId string `protobuf:"bytes,16,opt,name=last_started_build_id,json=lastStartedBuildId,proto3" json:"last_started_build_id,omitempty"`
	// workflows redirect_counter value when this activity started last time
	LastStartedRedirectCounter int64 `protobuf:"varint,17,opt,name=last_started_redirect_counter,json=lastStartedRedirectCounter,proto3" json:"last_started_redirect_counter,omitempty"`
	// The first time the activity was scheduled.
	FirstScheduledTime *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=first_scheduled_time,json=firstScheduledTime,proto3" json:"first_scheduled_time,omitempty"`
	// The last time an activity attempt completion was recorded by the server.
	LastAttemptCompleteTime *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=last_attempt_complete_time,json=lastAttemptCompleteTime,proto3" json:"last_attempt_complete_time,omitempty"`
	// Stamp represents the internal “version” of the activity options and can/will be changed with Activity API.
	Stamp int32 `protobuf:"varint,20,opt,name=stamp,proto3" json:"stamp,omitempty"`
	// Indicates if the activity is paused.
	Paused bool `protobuf:"varint,21,opt,name=paused,proto3" json:"paused,omitempty"`
	// Retry policy for the activity.
	RetryInitialInterval    *durationpb.Duration `protobuf:"bytes,22,opt,name=retry_initial_interval,json=retryInitialInterval,proto3" json:"retry_initial_interval,omitempty"`
	RetryMaximumInterval    *durationpb.Duration `protobuf:"bytes,23,opt,name=retry_maximum_interval,json=retryMaximumInterval,proto3" json:"retry_maximum_interval,omitempty"`
	RetryMaximumAttempts    int32                `protobuf:"varint,24,opt,name=retry_maximum_attempts,json=retryMaximumAttempts,proto3" json:"retry_maximum_attempts,omitempty"`
	RetryBackoffCoefficient float64              `protobuf:"fixed64,25,opt,name=retry_backoff_coefficient,json=retryBackoffCoefficient,proto3" json:"retry_backoff_coefficient,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SyncActivityRequest) Reset() {
	*x = SyncActivityRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncActivityRequest) ProtoMessage() {}

func (x *SyncActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncActivityRequest.ProtoReflect.Descriptor instead.
func (*SyncActivityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{62}
}

func (x *SyncActivityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncActivityRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SyncActivityRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *SyncActivityRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *SyncActivityRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *SyncActivityRequest) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *SyncActivityRequest) GetStartedEventId() int64 {
	if x != nil {
		return x.StartedEventId
	}
	return 0
}

func (x *SyncActivityRequest) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *SyncActivityRequest) GetLastHeartbeatTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeatTime
	}
	return nil
}

func (x *SyncActivityRequest) GetDetails() *v14.Payloads {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *SyncActivityRequest) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *SyncActivityRequest) GetLastFailure() *v13.Failure {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

func (x *SyncActivityRequest) GetLastWorkerIdentity() string {
	if x != nil {
		return x.LastWorkerIdentity
	}
	return ""
}

func (x *SyncActivityRequest) GetVersionHistory() *v17.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *SyncActivityRequest) GetBaseExecutionInfo() *v11.BaseExecutionInfo {
	if x != nil {
		return x.BaseExecutionInfo
	}
	return nil
}

func (x *SyncActivityRequest) GetLastStartedBuildId() string {
	if x != nil {
		return x.LastStartedBuildId
	}
	return ""
}

func (x *SyncActivityRequest) GetLastStartedRedirectCounter() int64 {
	if x != nil {
		return x.LastStartedRedirectCounter
	}
	return 0
}

func (x *SyncActivityRequest) GetFirstScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstScheduledTime
	}
	return nil
}

func (x *SyncActivityRequest) GetLastAttemptCompleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAttemptCompleteTime
	}
	return nil
}

func (x *SyncActivityRequest) GetStamp() int32 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *SyncActivityRequest) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *SyncActivityRequest) GetRetryInitialInterval() *durationpb.Duration {
	if x != nil {
		return x.RetryInitialInterval
	}
	return nil
}

func (x *SyncActivityRequest) GetRetryMaximumInterval() *durationpb.Duration {
	if x != nil {
		return x.RetryMaximumInterval
	}
	return nil
}

func (x *SyncActivityRequest) GetRetryMaximumAttempts() int32 {
	if x != nil {
		return x.RetryMaximumAttempts
	}
	return 0
}

func (x *SyncActivityRequest) GetRetryBackoffCoefficient() float64 {
	if x != nil {
		return x.RetryBackoffCoefficient
	}
	return 0
}

type SyncActivitiesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId    string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId     string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId          string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	ActivitiesInfo []*ActivitySyncInfo    `protobuf:"bytes,4,rep,name=activities_info,json=activitiesInfo,proto3" json:"activities_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SyncActivitiesRequest) Reset() {
	*x = SyncActivitiesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncActivitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncActivitiesRequest) ProtoMessage() {}

func (x *SyncActivitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncActivitiesRequest.ProtoReflect.Descriptor instead.
func (*SyncActivitiesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{63}
}

func (x *SyncActivitiesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncActivitiesRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SyncActivitiesRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *SyncActivitiesRequest) GetActivitiesInfo() []*ActivitySyncInfo {
	if x != nil {
		return x.ActivitiesInfo
	}
	return nil
}

type ActivitySyncInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Version            int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ScheduledEventId   int64                  `protobuf:"varint,2,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	ScheduledTime      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	StartedEventId     int64                  `protobuf:"varint,4,opt,name=started_event_id,json=startedEventId,proto3" json:"started_event_id,omitempty"`
	StartedTime        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	LastHeartbeatTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_heartbeat_time,json=lastHeartbeatTime,proto3" json:"last_heartbeat_time,omitempty"`
	Details            *v14.Payloads          `protobuf:"bytes,7,opt,name=details,proto3" json:"details,omitempty"`
	Attempt            int32                  `protobuf:"varint,8,opt,name=attempt,proto3" json:"attempt,omitempty"`
	LastFailure        *v13.Failure           `protobuf:"bytes,9,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	LastWorkerIdentity string                 `protobuf:"bytes,10,opt,name=last_worker_identity,json=lastWorkerIdentity,proto3" json:"last_worker_identity,omitempty"`
	VersionHistory     *v17.VersionHistory    `protobuf:"bytes,11,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	// build ID of the worker who received this activity last time
	LastStartedBuildId string `protobuf:"bytes,12,opt,name=last_started_build_id,json=lastStartedBuildId,proto3" json:"last_started_build_id,omitempty"`
	// workflows redirect_counter value when this activity started last time
	LastStartedRedirectCounter int64 `protobuf:"varint,13,opt,name=last_started_redirect_counter,json=lastStartedRedirectCounter,proto3" json:"last_started_redirect_counter,omitempty"`
	// The first time the activity was scheduled.
	FirstScheduledTime *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=first_scheduled_time,json=firstScheduledTime,proto3" json:"first_scheduled_time,omitempty"`
	// The last time an activity attempt completion was recorded by the server.
	LastAttemptCompleteTime *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=last_attempt_complete_time,json=lastAttemptCompleteTime,proto3" json:"last_attempt_complete_time,omitempty"`
	// Stamp represents the internal “version” of the activity options and can/will be changed with Activity API.
	Stamp int32 `protobuf:"varint,20,opt,name=stamp,proto3" json:"stamp,omitempty"`
	// Indicates if the activity is paused.
	Paused bool `protobuf:"varint,21,opt,name=paused,proto3" json:"paused,omitempty"`
	// Retry policy for the activity. It needs to be replicated now, since the activity properties can be updated.
	RetryInitialInterval    *durationpb.Duration `protobuf:"bytes,22,opt,name=retry_initial_interval,json=retryInitialInterval,proto3" json:"retry_initial_interval,omitempty"`
	RetryMaximumInterval    *durationpb.Duration `protobuf:"bytes,23,opt,name=retry_maximum_interval,json=retryMaximumInterval,proto3" json:"retry_maximum_interval,omitempty"`
	RetryMaximumAttempts    int32                `protobuf:"varint,24,opt,name=retry_maximum_attempts,json=retryMaximumAttempts,proto3" json:"retry_maximum_attempts,omitempty"`
	RetryBackoffCoefficient float64              `protobuf:"fixed64,25,opt,name=retry_backoff_coefficient,json=retryBackoffCoefficient,proto3" json:"retry_backoff_coefficient,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ActivitySyncInfo) Reset() {
	*x = ActivitySyncInfo{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivitySyncInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivitySyncInfo) ProtoMessage() {}

func (x *ActivitySyncInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivitySyncInfo.ProtoReflect.Descriptor instead.
func (*ActivitySyncInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{64}
}

func (x *ActivitySyncInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ActivitySyncInfo) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *ActivitySyncInfo) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *ActivitySyncInfo) GetStartedEventId() int64 {
	if x != nil {
		return x.StartedEventId
	}
	return 0
}

func (x *ActivitySyncInfo) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *ActivitySyncInfo) GetLastHeartbeatTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeatTime
	}
	return nil
}

func (x *ActivitySyncInfo) GetDetails() *v14.Payloads {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ActivitySyncInfo) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *ActivitySyncInfo) GetLastFailure() *v13.Failure {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

func (x *ActivitySyncInfo) GetLastWorkerIdentity() string {
	if x != nil {
		return x.LastWorkerIdentity
	}
	return ""
}

func (x *ActivitySyncInfo) GetVersionHistory() *v17.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *ActivitySyncInfo) GetLastStartedBuildId() string {
	if x != nil {
		return x.LastStartedBuildId
	}
	return ""
}

func (x *ActivitySyncInfo) GetLastStartedRedirectCounter() int64 {
	if x != nil {
		return x.LastStartedRedirectCounter
	}
	return 0
}

func (x *ActivitySyncInfo) GetFirstScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstScheduledTime
	}
	return nil
}

func (x *ActivitySyncInfo) GetLastAttemptCompleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAttemptCompleteTime
	}
	return nil
}

func (x *ActivitySyncInfo) GetStamp() int32 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *ActivitySyncInfo) GetPaused() bool {
	if x != nil {
		return x.Paused
	}
	return false
}

func (x *ActivitySyncInfo) GetRetryInitialInterval() *durationpb.Duration {
	if x != nil {
		return x.RetryInitialInterval
	}
	return nil
}

func (x *ActivitySyncInfo) GetRetryMaximumInterval() *durationpb.Duration {
	if x != nil {
		return x.RetryMaximumInterval
	}
	return nil
}

func (x *ActivitySyncInfo) GetRetryMaximumAttempts() int32 {
	if x != nil {
		return x.RetryMaximumAttempts
	}
	return 0
}

func (x *ActivitySyncInfo) GetRetryBackoffCoefficient() float64 {
	if x != nil {
		return x.RetryBackoffCoefficient
	}
	return 0
}

type SyncActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncActivityResponse) Reset() {
	*x = SyncActivityResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncActivityResponse) ProtoMessage() {}

func (x *SyncActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncActivityResponse.ProtoReflect.Descriptor instead.
func (*SyncActivityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{65}
}

type DescribeMutableStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution     *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeMutableStateRequest) Reset() {
	*x = DescribeMutableStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMutableStateRequest) ProtoMessage() {}

func (x *DescribeMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMutableStateRequest.ProtoReflect.Descriptor instead.
func (*DescribeMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{66}
}

func (x *DescribeMutableStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeMutableStateRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type DescribeMutableStateResponse struct {
	state                protoimpl.MessageState    `protogen:"open.v1"`
	CacheMutableState    *v18.WorkflowMutableState `protobuf:"bytes,1,opt,name=cache_mutable_state,json=cacheMutableState,proto3" json:"cache_mutable_state,omitempty"`
	DatabaseMutableState *v18.WorkflowMutableState `protobuf:"bytes,2,opt,name=database_mutable_state,json=databaseMutableState,proto3" json:"database_mutable_state,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeMutableStateResponse) Reset() {
	*x = DescribeMutableStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMutableStateResponse) ProtoMessage() {}

func (x *DescribeMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMutableStateResponse.ProtoReflect.Descriptor instead.
func (*DescribeMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{67}
}

func (x *DescribeMutableStateResponse) GetCacheMutableState() *v18.WorkflowMutableState {
	if x != nil {
		return x.CacheMutableState
	}
	return nil
}

func (x *DescribeMutableStateResponse) GetDatabaseMutableState() *v18.WorkflowMutableState {
	if x != nil {
		return x.DatabaseMutableState
	}
	return nil
}

// At least one of the parameters needs to be provided.
type DescribeHistoryHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	//ip:port
	HostAddress       string                 `protobuf:"bytes,1,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	ShardId           int32                  `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NamespaceId       string                 `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v14.WorkflowExecution `protobuf:"bytes,4,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DescribeHistoryHostRequest) Reset() {
	*x = DescribeHistoryHostRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeHistoryHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeHistoryHostRequest) ProtoMessage() {}

func (x *DescribeHistoryHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeHistoryHostRequest.ProtoReflect.Descriptor instead.
func (*DescribeHistoryHostRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{68}
}

func (x *DescribeHistoryHostRequest) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *DescribeHistoryHostRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *DescribeHistoryHostRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeHistoryHostRequest) GetWorkflowExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

type DescribeHistoryHostResponse struct {
	state          protoimpl.MessageState   `protogen:"open.v1"`
	ShardsNumber   int32                    `protobuf:"varint,1,opt,name=shards_number,json=shardsNumber,proto3" json:"shards_number,omitempty"`
	ShardIds       []int32                  `protobuf:"varint,2,rep,packed,name=shard_ids,json=shardIds,proto3" json:"shard_ids,omitempty"`
	NamespaceCache *v116.NamespaceCacheInfo `protobuf:"bytes,3,opt,name=namespace_cache,json=namespaceCache,proto3" json:"namespace_cache,omitempty"`
	Address        string                   `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DescribeHistoryHostResponse) Reset() {
	*x = DescribeHistoryHostResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeHistoryHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeHistoryHostResponse) ProtoMessage() {}

func (x *DescribeHistoryHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeHistoryHostResponse.ProtoReflect.Descriptor instead.
func (*DescribeHistoryHostResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{69}
}

func (x *DescribeHistoryHostResponse) GetShardsNumber() int32 {
	if x != nil {
		return x.ShardsNumber
	}
	return 0
}

func (x *DescribeHistoryHostResponse) GetShardIds() []int32 {
	if x != nil {
		return x.ShardIds
	}
	return nil
}

func (x *DescribeHistoryHostResponse) GetNamespaceCache() *v116.NamespaceCacheInfo {
	if x != nil {
		return x.NamespaceCache
	}
	return nil
}

func (x *DescribeHistoryHostResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CloseShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseShardRequest) Reset() {
	*x = CloseShardRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardRequest) ProtoMessage() {}

func (x *CloseShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardRequest.ProtoReflect.Descriptor instead.
func (*CloseShardRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{70}
}

func (x *CloseShardRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type CloseShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseShardResponse) Reset() {
	*x = CloseShardResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardResponse) ProtoMessage() {}

func (x *CloseShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardResponse.ProtoReflect.Descriptor instead.
func (*CloseShardResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{71}
}

type GetShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardRequest) Reset() {
	*x = GetShardRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardRequest) ProtoMessage() {}

func (x *GetShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardRequest.ProtoReflect.Descriptor instead.
func (*GetShardRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{72}
}

func (x *GetShardRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type GetShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardInfo     *v18.ShardInfo         `protobuf:"bytes,1,opt,name=shard_info,json=shardInfo,proto3" json:"shard_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardResponse) Reset() {
	*x = GetShardResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardResponse) ProtoMessage() {}

func (x *GetShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardResponse.ProtoReflect.Descriptor instead.
func (*GetShardResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{73}
}

func (x *GetShardResponse) GetShardInfo() *v18.ShardInfo {
	if x != nil {
		return x.ShardInfo
	}
	return nil
}

type RemoveTaskRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	ShardId int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// The task category. See tasks.TaskCategoryRegistry for more.
	Category       int32                  `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	TaskId         int64                  `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	VisibilityTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=visibility_time,json=visibilityTime,proto3" json:"visibility_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveTaskRequest) Reset() {
	*x = RemoveTaskRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskRequest) ProtoMessage() {}

func (x *RemoveTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskRequest.ProtoReflect.Descriptor instead.
func (*RemoveTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{74}
}

func (x *RemoveTaskRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *RemoveTaskRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *RemoveTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *RemoveTaskRequest) GetVisibilityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VisibilityTime
	}
	return nil
}

type RemoveTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveTaskResponse) Reset() {
	*x = RemoveTaskResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskResponse) ProtoMessage() {}

func (x *RemoveTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskResponse.ProtoReflect.Descriptor instead.
func (*RemoveTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{75}
}

type GetReplicationMessagesRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Tokens        []*v117.ReplicationToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	ClusterName   string                   `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationMessagesRequest) Reset() {
	*x = GetReplicationMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationMessagesRequest) ProtoMessage() {}

func (x *GetReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{76}
}

func (x *GetReplicationMessagesRequest) GetTokens() []*v117.ReplicationToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *GetReplicationMessagesRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetReplicationMessagesResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	ShardMessages map[int32]*v117.ReplicationMessages `protobuf:"bytes,1,rep,name=shard_messages,json=shardMessages,proto3" json:"shard_messages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationMessagesResponse) Reset() {
	*x = GetReplicationMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationMessagesResponse) ProtoMessage() {}

func (x *GetReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{77}
}

func (x *GetReplicationMessagesResponse) GetShardMessages() map[int32]*v117.ReplicationMessages {
	if x != nil {
		return x.ShardMessages
	}
	return nil
}

type GetDLQReplicationMessagesRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	TaskInfos     []*v117.ReplicationTaskInfo `protobuf:"bytes,1,rep,name=task_infos,json=taskInfos,proto3" json:"task_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQReplicationMessagesRequest) Reset() {
	*x = GetDLQReplicationMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQReplicationMessagesRequest) ProtoMessage() {}

func (x *GetDLQReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetDLQReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{78}
}

func (x *GetDLQReplicationMessagesRequest) GetTaskInfos() []*v117.ReplicationTaskInfo {
	if x != nil {
		return x.TaskInfos
	}
	return nil
}

type GetDLQReplicationMessagesResponse struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	ReplicationTasks []*v117.ReplicationTask `protobuf:"bytes,1,rep,name=replication_tasks,json=replicationTasks,proto3" json:"replication_tasks,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetDLQReplicationMessagesResponse) Reset() {
	*x = GetDLQReplicationMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQReplicationMessagesResponse) ProtoMessage() {}

func (x *GetDLQReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetDLQReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{79}
}

func (x *GetDLQReplicationMessagesResponse) GetReplicationTasks() []*v117.ReplicationTask {
	if x != nil {
		return x.ReplicationTasks
	}
	return nil
}

type QueryWorkflowRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	NamespaceId   string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.QueryWorkflowRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryWorkflowRequest) Reset() {
	*x = QueryWorkflowRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWorkflowRequest) ProtoMessage() {}

func (x *QueryWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWorkflowRequest.ProtoReflect.Descriptor instead.
func (*QueryWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{80}
}

func (x *QueryWorkflowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *QueryWorkflowRequest) GetRequest() *v1.QueryWorkflowRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type QueryWorkflowResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Response      *v1.QueryWorkflowResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryWorkflowResponse) Reset() {
	*x = QueryWorkflowResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWorkflowResponse) ProtoMessage() {}

func (x *QueryWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWorkflowResponse.ProtoReflect.Descriptor instead.
func (*QueryWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{81}
}

func (x *QueryWorkflowResponse) GetResponse() *v1.QueryWorkflowResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ReapplyEventsRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	NamespaceId   string                     `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v118.ReapplyEventsRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReapplyEventsRequest) Reset() {
	*x = ReapplyEventsRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReapplyEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReapplyEventsRequest) ProtoMessage() {}

func (x *ReapplyEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReapplyEventsRequest.ProtoReflect.Descriptor instead.
func (*ReapplyEventsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{82}
}

func (x *ReapplyEventsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ReapplyEventsRequest) GetRequest() *v118.ReapplyEventsRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ReapplyEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReapplyEventsResponse) Reset() {
	*x = ReapplyEventsResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReapplyEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReapplyEventsResponse) ProtoMessage() {}

func (x *ReapplyEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReapplyEventsResponse.ProtoReflect.Descriptor instead.
func (*ReapplyEventsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{83}
}

type GetDLQMessagesRequest struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	Type                  v110.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                    `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                   `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                    `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	MaximumPageSize       int32                    `protobuf:"varint,5,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken         []byte                   `protobuf:"bytes,6,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetDLQMessagesRequest) Reset() {
	*x = GetDLQMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQMessagesRequest) ProtoMessage() {}

func (x *GetDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{84}
}

func (x *GetDLQMessagesRequest) GetType() v110.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v110.DeadLetterQueueType(0)
}

func (x *GetDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *GetDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetDLQMessagesResponse struct {
	state                protoimpl.MessageState      `protogen:"open.v1"`
	Type                 v110.DeadLetterQueueType    `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ReplicationTasks     []*v117.ReplicationTask     `protobuf:"bytes,2,rep,name=replication_tasks,json=replicationTasks,proto3" json:"replication_tasks,omitempty"`
	NextPageToken        []byte                      `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	ReplicationTasksInfo []*v117.ReplicationTaskInfo `protobuf:"bytes,4,rep,name=replication_tasks_info,json=replicationTasksInfo,proto3" json:"replication_tasks_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetDLQMessagesResponse) Reset() {
	*x = GetDLQMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQMessagesResponse) ProtoMessage() {}

func (x *GetDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{85}
}

func (x *GetDLQMessagesResponse) GetType() v110.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v110.DeadLetterQueueType(0)
}

func (x *GetDLQMessagesResponse) GetReplicationTasks() []*v117.ReplicationTask {
	if x != nil {
		return x.ReplicationTasks
	}
	return nil
}

func (x *GetDLQMessagesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *GetDLQMessagesResponse) GetReplicationTasksInfo() []*v117.ReplicationTaskInfo {
	if x != nil {
		return x.ReplicationTasksInfo
	}
	return nil
}

type PurgeDLQMessagesRequest struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	Type                  v110.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                    `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                   `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                    `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PurgeDLQMessagesRequest) Reset() {
	*x = PurgeDLQMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQMessagesRequest) ProtoMessage() {}

func (x *PurgeDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*PurgeDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{86}
}

func (x *PurgeDLQMessagesRequest) GetType() v110.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v110.DeadLetterQueueType(0)
}

func (x *PurgeDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *PurgeDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *PurgeDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

type PurgeDLQMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeDLQMessagesResponse) Reset() {
	*x = PurgeDLQMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQMessagesResponse) ProtoMessage() {}

func (x *PurgeDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*PurgeDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{87}
}

type MergeDLQMessagesRequest struct {
	state                 protoimpl.MessageState   `protogen:"open.v1"`
	Type                  v110.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                    `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                   `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                    `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	MaximumPageSize       int32                    `protobuf:"varint,5,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken         []byte                   `protobuf:"bytes,6,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MergeDLQMessagesRequest) Reset() {
	*x = MergeDLQMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQMessagesRequest) ProtoMessage() {}

func (x *MergeDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*MergeDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{88}
}

func (x *MergeDLQMessagesRequest) GetType() v110.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v110.DeadLetterQueueType(0)
}

func (x *MergeDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *MergeDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type MergeDLQMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextPageToken []byte                 `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeDLQMessagesResponse) Reset() {
	*x = MergeDLQMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQMessagesResponse) ProtoMessage() {}

func (x *MergeDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*MergeDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{89}
}

func (x *MergeDLQMessagesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type RefreshWorkflowTasksRequest struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	NamespaceId   string                            `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v118.RefreshWorkflowTasksRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshWorkflowTasksRequest) Reset() {
	*x = RefreshWorkflowTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshWorkflowTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWorkflowTasksRequest) ProtoMessage() {}

func (x *RefreshWorkflowTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWorkflowTasksRequest.ProtoReflect.Descriptor instead.
func (*RefreshWorkflowTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{90}
}

func (x *RefreshWorkflowTasksRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RefreshWorkflowTasksRequest) GetRequest() *v118.RefreshWorkflowTasksRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type RefreshWorkflowTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshWorkflowTasksResponse) Reset() {
	*x = RefreshWorkflowTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshWorkflowTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWorkflowTasksResponse) ProtoMessage() {}

func (x *RefreshWorkflowTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWorkflowTasksResponse.ProtoReflect.Descriptor instead.
func (*RefreshWorkflowTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{91}
}

type GenerateLastHistoryReplicationTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution     *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateLastHistoryReplicationTasksRequest) Reset() {
	*x = GenerateLastHistoryReplicationTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLastHistoryReplicationTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLastHistoryReplicationTasksRequest) ProtoMessage() {}

func (x *GenerateLastHistoryReplicationTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLastHistoryReplicationTasksRequest.ProtoReflect.Descriptor instead.
func (*GenerateLastHistoryReplicationTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{92}
}

func (x *GenerateLastHistoryReplicationTasksRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GenerateLastHistoryReplicationTasksRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type GenerateLastHistoryReplicationTasksResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StateTransitionCount int64                  `protobuf:"varint,1,opt,name=state_transition_count,json=stateTransitionCount,proto3" json:"state_transition_count,omitempty"`
	HistoryLength        int64                  `protobuf:"varint,2,opt,name=history_length,json=historyLength,proto3" json:"history_length,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GenerateLastHistoryReplicationTasksResponse) Reset() {
	*x = GenerateLastHistoryReplicationTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLastHistoryReplicationTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLastHistoryReplicationTasksResponse) ProtoMessage() {}

func (x *GenerateLastHistoryReplicationTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLastHistoryReplicationTasksResponse.ProtoReflect.Descriptor instead.
func (*GenerateLastHistoryReplicationTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{93}
}

func (x *GenerateLastHistoryReplicationTasksResponse) GetStateTransitionCount() int64 {
	if x != nil {
		return x.StateTransitionCount
	}
	return 0
}

func (x *GenerateLastHistoryReplicationTasksResponse) GetHistoryLength() int64 {
	if x != nil {
		return x.HistoryLength
	}
	return 0
}

type GetReplicationStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Remote cluster names to query for. If omit, will return for all remote clusters.
	RemoteClusters []string `protobuf:"bytes,1,rep,name=remote_clusters,json=remoteClusters,proto3" json:"remote_clusters,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetReplicationStatusRequest) Reset() {
	*x = GetReplicationStatusRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationStatusRequest) ProtoMessage() {}

func (x *GetReplicationStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationStatusRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationStatusRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{94}
}

func (x *GetReplicationStatusRequest) GetRemoteClusters() []string {
	if x != nil {
		return x.RemoteClusters
	}
	return nil
}

type GetReplicationStatusResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Shards        []*ShardReplicationStatus `protobuf:"bytes,1,rep,name=shards,proto3" json:"shards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationStatusResponse) Reset() {
	*x = GetReplicationStatusResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationStatusResponse) ProtoMessage() {}

func (x *GetReplicationStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationStatusResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationStatusResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{95}
}

func (x *GetReplicationStatusResponse) GetShards() []*ShardReplicationStatus {
	if x != nil {
		return x.Shards
	}
	return nil
}

type ShardReplicationStatus struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	ShardId int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// Max replication task id of current cluster
	MaxReplicationTaskId int64 `protobuf:"varint,2,opt,name=max_replication_task_id,json=maxReplicationTaskId,proto3" json:"max_replication_task_id,omitempty"`
	// Local time on this shard
	ShardLocalTime                   *timestamppb.Timestamp                       `protobuf:"bytes,3,opt,name=shard_local_time,json=shardLocalTime,proto3" json:"shard_local_time,omitempty"`
	RemoteClusters                   map[string]*ShardReplicationStatusPerCluster `protobuf:"bytes,4,rep,name=remote_clusters,json=remoteClusters,proto3" json:"remote_clusters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HandoverNamespaces               map[string]*HandoverNamespaceInfo            `protobuf:"bytes,5,rep,name=handover_namespaces,json=handoverNamespaces,proto3" json:"handover_namespaces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MaxReplicationTaskVisibilityTime *timestamppb.Timestamp                       `protobuf:"bytes,6,opt,name=max_replication_task_visibility_time,json=maxReplicationTaskVisibilityTime,proto3" json:"max_replication_task_visibility_time,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ShardReplicationStatus) Reset() {
	*x = ShardReplicationStatus{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardReplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardReplicationStatus) ProtoMessage() {}

func (x *ShardReplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardReplicationStatus.ProtoReflect.Descriptor instead.
func (*ShardReplicationStatus) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{96}
}

func (x *ShardReplicationStatus) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ShardReplicationStatus) GetMaxReplicationTaskId() int64 {
	if x != nil {
		return x.MaxReplicationTaskId
	}
	return 0
}

func (x *ShardReplicationStatus) GetShardLocalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShardLocalTime
	}
	return nil
}

func (x *ShardReplicationStatus) GetRemoteClusters() map[string]*ShardReplicationStatusPerCluster {
	if x != nil {
		return x.RemoteClusters
	}
	return nil
}

func (x *ShardReplicationStatus) GetHandoverNamespaces() map[string]*HandoverNamespaceInfo {
	if x != nil {
		return x.HandoverNamespaces
	}
	return nil
}

func (x *ShardReplicationStatus) GetMaxReplicationTaskVisibilityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MaxReplicationTaskVisibilityTime
	}
	return nil
}

type HandoverNamespaceInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// max replication task id when namespace transition to Handover state
	HandoverReplicationTaskId int64 `protobuf:"varint,1,opt,name=handover_replication_task_id,json=handoverReplicationTaskId,proto3" json:"handover_replication_task_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *HandoverNamespaceInfo) Reset() {
	*x = HandoverNamespaceInfo{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandoverNamespaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandoverNamespaceInfo) ProtoMessage() {}

func (x *HandoverNamespaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandoverNamespaceInfo.ProtoReflect.Descriptor instead.
func (*HandoverNamespaceInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{97}
}

func (x *HandoverNamespaceInfo) GetHandoverReplicationTaskId() int64 {
	if x != nil {
		return x.HandoverReplicationTaskId
	}
	return 0
}

type ShardReplicationStatusPerCluster struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Acked replication task id
	AckedTaskId int64 `protobuf:"varint,1,opt,name=acked_task_id,json=ackedTaskId,proto3" json:"acked_task_id,omitempty"`
	// Acked replication task creation time
	AckedTaskVisibilityTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=acked_task_visibility_time,json=ackedTaskVisibilityTime,proto3" json:"acked_task_visibility_time,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ShardReplicationStatusPerCluster) Reset() {
	*x = ShardReplicationStatusPerCluster{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardReplicationStatusPerCluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardReplicationStatusPerCluster) ProtoMessage() {}

func (x *ShardReplicationStatusPerCluster) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardReplicationStatusPerCluster.ProtoReflect.Descriptor instead.
func (*ShardReplicationStatusPerCluster) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{98}
}

func (x *ShardReplicationStatusPerCluster) GetAckedTaskId() int64 {
	if x != nil {
		return x.AckedTaskId
	}
	return 0
}

func (x *ShardReplicationStatusPerCluster) GetAckedTaskVisibilityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.AckedTaskVisibilityTime
	}
	return nil
}

type RebuildMutableStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution     *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildMutableStateRequest) Reset() {
	*x = RebuildMutableStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildMutableStateRequest) ProtoMessage() {}

func (x *RebuildMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildMutableStateRequest.ProtoReflect.Descriptor instead.
func (*RebuildMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{99}
}

func (x *RebuildMutableStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RebuildMutableStateRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type RebuildMutableStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildMutableStateResponse) Reset() {
	*x = RebuildMutableStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildMutableStateResponse) ProtoMessage() {}

func (x *RebuildMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildMutableStateResponse.ProtoReflect.Descriptor instead.
func (*RebuildMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{100}
}

type ImportWorkflowExecutionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId    string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution      *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	HistoryBatches []*v14.DataBlob        `protobuf:"bytes,3,rep,name=history_batches,json=historyBatches,proto3" json:"history_batches,omitempty"`
	VersionHistory *v17.VersionHistory    `protobuf:"bytes,4,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	Token          []byte                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ImportWorkflowExecutionRequest) Reset() {
	*x = ImportWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWorkflowExecutionRequest) ProtoMessage() {}

func (x *ImportWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*ImportWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{101}
}

func (x *ImportWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ImportWorkflowExecutionRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetHistoryBatches() []*v14.DataBlob {
	if x != nil {
		return x.HistoryBatches
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetVersionHistory() *v17.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ImportWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         []byte                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	EventsApplied bool                   `protobuf:"varint,2,opt,name=events_applied,json=eventsApplied,proto3" json:"events_applied,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportWorkflowExecutionResponse) Reset() {
	*x = ImportWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWorkflowExecutionResponse) ProtoMessage() {}

func (x *ImportWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*ImportWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{102}
}

func (x *ImportWorkflowExecutionResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *ImportWorkflowExecutionResponse) GetEventsApplied() bool {
	if x != nil {
		return x.EventsApplied
	}
	return false
}

type DeleteWorkflowVisibilityRecordRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution         *v14.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	WorkflowStartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=workflow_start_time,json=workflowStartTime,proto3" json:"workflow_start_time,omitempty"`
	WorkflowCloseTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=workflow_close_time,json=workflowCloseTime,proto3" json:"workflow_close_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DeleteWorkflowVisibilityRecordRequest) Reset() {
	*x = DeleteWorkflowVisibilityRecordRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowVisibilityRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowVisibilityRecordRequest) ProtoMessage() {}

func (x *DeleteWorkflowVisibilityRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowVisibilityRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowVisibilityRecordRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{103}
}

func (x *DeleteWorkflowVisibilityRecordRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DeleteWorkflowVisibilityRecordRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *DeleteWorkflowVisibilityRecordRequest) GetWorkflowStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WorkflowStartTime
	}
	return nil
}

func (x *DeleteWorkflowVisibilityRecordRequest) GetWorkflowCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WorkflowCloseTime
	}
	return nil
}

type DeleteWorkflowVisibilityRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowVisibilityRecordResponse) Reset() {
	*x = DeleteWorkflowVisibilityRecordResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowVisibilityRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowVisibilityRecordResponse) ProtoMessage() {}

func (x *DeleteWorkflowVisibilityRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowVisibilityRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowVisibilityRecordResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{104}
}

// (-- api-linter: core::0134=disabled
//
//	aip.dev/not-precedent: This service does not follow the update method AIP --)
type UpdateWorkflowExecutionRequest struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	NamespaceId   string                             `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.UpdateWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowExecutionRequest) Reset() {
	*x = UpdateWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowExecutionRequest) ProtoMessage() {}

func (x *UpdateWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{105}
}

func (x *UpdateWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateWorkflowExecutionRequest) GetRequest() *v1.UpdateWorkflowExecutionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateWorkflowExecutionResponse struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Response      *v1.UpdateWorkflowExecutionResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowExecutionResponse) Reset() {
	*x = UpdateWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowExecutionResponse) ProtoMessage() {}

func (x *UpdateWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{106}
}

func (x *UpdateWorkflowExecutionResponse) GetResponse() *v1.UpdateWorkflowExecutionResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type StreamWorkflowReplicationMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attributes:
	//
	//	*StreamWorkflowReplicationMessagesRequest_SyncReplicationState
	Attributes    isStreamWorkflowReplicationMessagesRequest_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWorkflowReplicationMessagesRequest) Reset() {
	*x = StreamWorkflowReplicationMessagesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWorkflowReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkflowReplicationMessagesRequest) ProtoMessage() {}

func (x *StreamWorkflowReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkflowReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*StreamWorkflowReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{107}
}

func (x *StreamWorkflowReplicationMessagesRequest) GetAttributes() isStreamWorkflowReplicationMessagesRequest_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StreamWorkflowReplicationMessagesRequest) GetSyncReplicationState() *v117.SyncReplicationState {
	if x != nil {
		if x, ok := x.Attributes.(*StreamWorkflowReplicationMessagesRequest_SyncReplicationState); ok {
			return x.SyncReplicationState
		}
	}
	return nil
}

type isStreamWorkflowReplicationMessagesRequest_Attributes interface {
	isStreamWorkflowReplicationMessagesRequest_Attributes()
}

type StreamWorkflowReplicationMessagesRequest_SyncReplicationState struct {
	SyncReplicationState *v117.SyncReplicationState `protobuf:"bytes,1,opt,name=sync_replication_state,json=syncReplicationState,proto3,oneof"`
}

func (*StreamWorkflowReplicationMessagesRequest_SyncReplicationState) isStreamWorkflowReplicationMessagesRequest_Attributes() {
}

type StreamWorkflowReplicationMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attributes:
	//
	//	*StreamWorkflowReplicationMessagesResponse_Messages
	Attributes    isStreamWorkflowReplicationMessagesResponse_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWorkflowReplicationMessagesResponse) Reset() {
	*x = StreamWorkflowReplicationMessagesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWorkflowReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkflowReplicationMessagesResponse) ProtoMessage() {}

func (x *StreamWorkflowReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkflowReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*StreamWorkflowReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{108}
}

func (x *StreamWorkflowReplicationMessagesResponse) GetAttributes() isStreamWorkflowReplicationMessagesResponse_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StreamWorkflowReplicationMessagesResponse) GetMessages() *v117.WorkflowReplicationMessages {
	if x != nil {
		if x, ok := x.Attributes.(*StreamWorkflowReplicationMessagesResponse_Messages); ok {
			return x.Messages
		}
	}
	return nil
}

type isStreamWorkflowReplicationMessagesResponse_Attributes interface {
	isStreamWorkflowReplicationMessagesResponse_Attributes()
}

type StreamWorkflowReplicationMessagesResponse_Messages struct {
	Messages *v117.WorkflowReplicationMessages `protobuf:"bytes,1,opt,name=messages,proto3,oneof"`
}

func (*StreamWorkflowReplicationMessagesResponse_Messages) isStreamWorkflowReplicationMessagesResponse_Attributes() {
}

type PollWorkflowExecutionUpdateRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	NamespaceId   string                                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.PollWorkflowExecutionUpdateRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollWorkflowExecutionUpdateRequest) Reset() {
	*x = PollWorkflowExecutionUpdateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollWorkflowExecutionUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollWorkflowExecutionUpdateRequest) ProtoMessage() {}

func (x *PollWorkflowExecutionUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollWorkflowExecutionUpdateRequest.ProtoReflect.Descriptor instead.
func (*PollWorkflowExecutionUpdateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{109}
}

func (x *PollWorkflowExecutionUpdateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PollWorkflowExecutionUpdateRequest) GetRequest() *v1.PollWorkflowExecutionUpdateRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type PollWorkflowExecutionUpdateResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Response      *v1.PollWorkflowExecutionUpdateResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollWorkflowExecutionUpdateResponse) Reset() {
	*x = PollWorkflowExecutionUpdateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollWorkflowExecutionUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollWorkflowExecutionUpdateResponse) ProtoMessage() {}

func (x *PollWorkflowExecutionUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollWorkflowExecutionUpdateResponse.ProtoReflect.Descriptor instead.
func (*PollWorkflowExecutionUpdateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{110}
}

func (x *PollWorkflowExecutionUpdateResponse) GetResponse() *v1.PollWorkflowExecutionUpdateResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWorkflowExecutionHistoryRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	NamespaceId   string                                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.GetWorkflowExecutionHistoryRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionHistoryRequest) Reset() {
	*x = GetWorkflowExecutionHistoryRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionHistoryRequest) ProtoMessage() {}

func (x *GetWorkflowExecutionHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionHistoryRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{111}
}

func (x *GetWorkflowExecutionHistoryRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionHistoryRequest) GetRequest() *v1.GetWorkflowExecutionHistoryRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkflowExecutionHistoryResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Response      *v1.GetWorkflowExecutionHistoryResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	History       *v115.History                           `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionHistoryResponse) Reset() {
	*x = GetWorkflowExecutionHistoryResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionHistoryResponse) ProtoMessage() {}

func (x *GetWorkflowExecutionHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionHistoryResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{112}
}

func (x *GetWorkflowExecutionHistoryResponse) GetResponse() *v1.GetWorkflowExecutionHistoryResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetWorkflowExecutionHistoryResponse) GetHistory() *v115.History {
	if x != nil {
		return x.History
	}
	return nil
}

// This message must be wire compatible with GetWorkflowExecutionHistoryResponse.
type GetWorkflowExecutionHistoryResponseWithRaw struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Response      *v1.GetWorkflowExecutionHistoryResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	History       [][]byte                                `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionHistoryResponseWithRaw) Reset() {
	*x = GetWorkflowExecutionHistoryResponseWithRaw{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionHistoryResponseWithRaw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionHistoryResponseWithRaw) ProtoMessage() {}

func (x *GetWorkflowExecutionHistoryResponseWithRaw) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionHistoryResponseWithRaw.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionHistoryResponseWithRaw) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{113}
}

func (x *GetWorkflowExecutionHistoryResponseWithRaw) GetResponse() *v1.GetWorkflowExecutionHistoryResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetWorkflowExecutionHistoryResponseWithRaw) GetHistory() [][]byte {
	if x != nil {
		return x.History
	}
	return nil
}

type GetWorkflowExecutionHistoryReverseRequest struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	NamespaceId   string                                        `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.GetWorkflowExecutionHistoryReverseRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionHistoryReverseRequest) Reset() {
	*x = GetWorkflowExecutionHistoryReverseRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionHistoryReverseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionHistoryReverseRequest) ProtoMessage() {}

func (x *GetWorkflowExecutionHistoryReverseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionHistoryReverseRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionHistoryReverseRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{114}
}

func (x *GetWorkflowExecutionHistoryReverseRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionHistoryReverseRequest) GetRequest() *v1.GetWorkflowExecutionHistoryReverseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkflowExecutionHistoryReverseResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Response      *v1.GetWorkflowExecutionHistoryReverseResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionHistoryReverseResponse) Reset() {
	*x = GetWorkflowExecutionHistoryReverseResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionHistoryReverseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionHistoryReverseResponse) ProtoMessage() {}

func (x *GetWorkflowExecutionHistoryReverseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionHistoryReverseResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionHistoryReverseResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{115}
}

func (x *GetWorkflowExecutionHistoryReverseResponse) GetResponse() *v1.GetWorkflowExecutionHistoryReverseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// *
// StartEventId defines the beginning of the event to fetch. The first event is exclusive.
// EndEventId and EndEventVersion defines the end of the event to fetch. The end event is exclusive.
type GetWorkflowExecutionRawHistoryV2Request struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	NamespaceId   string                                        `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v118.GetWorkflowExecutionRawHistoryV2Request `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryV2Request) Reset() {
	*x = GetWorkflowExecutionRawHistoryV2Request{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryV2Request) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryV2Request.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryV2Request) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{116}
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetRequest() *v118.GetWorkflowExecutionRawHistoryV2Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkflowExecutionRawHistoryV2Response struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Response      *v118.GetWorkflowExecutionRawHistoryV2Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryV2Response) Reset() {
	*x = GetWorkflowExecutionRawHistoryV2Response{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryV2Response) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryV2Response.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryV2Response) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{117}
}

func (x *GetWorkflowExecutionRawHistoryV2Response) GetResponse() *v118.GetWorkflowExecutionRawHistoryV2Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWorkflowExecutionRawHistoryRequest struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	NamespaceId   string                                      `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v118.GetWorkflowExecutionRawHistoryRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryRequest) Reset() {
	*x = GetWorkflowExecutionRawHistoryRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryRequest) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{118}
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetRequest() *v118.GetWorkflowExecutionRawHistoryRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkflowExecutionRawHistoryResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Response      *v118.GetWorkflowExecutionRawHistoryResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryResponse) Reset() {
	*x = GetWorkflowExecutionRawHistoryResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryResponse) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{119}
}

func (x *GetWorkflowExecutionRawHistoryResponse) GetResponse() *v118.GetWorkflowExecutionRawHistoryResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type ForceDeleteWorkflowExecutionRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	NamespaceId   string                               `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v118.DeleteWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceDeleteWorkflowExecutionRequest) Reset() {
	*x = ForceDeleteWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceDeleteWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceDeleteWorkflowExecutionRequest) ProtoMessage() {}

func (x *ForceDeleteWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceDeleteWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*ForceDeleteWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{120}
}

func (x *ForceDeleteWorkflowExecutionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ForceDeleteWorkflowExecutionRequest) GetRequest() *v118.DeleteWorkflowExecutionRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ForceDeleteWorkflowExecutionResponse struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Response      *v118.DeleteWorkflowExecutionResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceDeleteWorkflowExecutionResponse) Reset() {
	*x = ForceDeleteWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceDeleteWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceDeleteWorkflowExecutionResponse) ProtoMessage() {}

func (x *ForceDeleteWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceDeleteWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*ForceDeleteWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{121}
}

func (x *ForceDeleteWorkflowExecutionResponse) GetResponse() *v118.DeleteWorkflowExecutionResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetDLQTasksRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	DlqKey *v119.HistoryDLQKey    `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	// page_size must be positive. Up to this many tasks will be returned.
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQTasksRequest) Reset() {
	*x = GetDLQTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQTasksRequest) ProtoMessage() {}

func (x *GetDLQTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQTasksRequest.ProtoReflect.Descriptor instead.
func (*GetDLQTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{122}
}

func (x *GetDLQTasksRequest) GetDlqKey() *v119.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *GetDLQTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDLQTasksRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetDLQTasksResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	DlqTasks []*v119.HistoryDLQTask `protobuf:"bytes,1,rep,name=dlq_tasks,json=dlqTasks,proto3" json:"dlq_tasks,omitempty"`
	// next_page_token is empty if there are no more results. However, the converse is not true. If there are no more
	// results, this field may still be non-empty. This is to avoid having to do a count query to determine whether
	// there are more results.
	NextPageToken []byte `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQTasksResponse) Reset() {
	*x = GetDLQTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQTasksResponse) ProtoMessage() {}

func (x *GetDLQTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQTasksResponse.ProtoReflect.Descriptor instead.
func (*GetDLQTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{123}
}

func (x *GetDLQTasksResponse) GetDlqTasks() []*v119.HistoryDLQTask {
	if x != nil {
		return x.DlqTasks
	}
	return nil
}

func (x *GetDLQTasksResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type DeleteDLQTasksRequest struct {
	state                    protoimpl.MessageState       `protogen:"open.v1"`
	DlqKey                   *v119.HistoryDLQKey          `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	InclusiveMaxTaskMetadata *v119.HistoryDLQTaskMetadata `protobuf:"bytes,2,opt,name=inclusive_max_task_metadata,json=inclusiveMaxTaskMetadata,proto3" json:"inclusive_max_task_metadata,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DeleteDLQTasksRequest) Reset() {
	*x = DeleteDLQTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDLQTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDLQTasksRequest) ProtoMessage() {}

func (x *DeleteDLQTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDLQTasksRequest.ProtoReflect.Descriptor instead.
func (*DeleteDLQTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{124}
}

func (x *DeleteDLQTasksRequest) GetDlqKey() *v119.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *DeleteDLQTasksRequest) GetInclusiveMaxTaskMetadata() *v119.HistoryDLQTaskMetadata {
	if x != nil {
		return x.InclusiveMaxTaskMetadata
	}
	return nil
}

type DeleteDLQTasksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// messages_deleted is the total number of messages deleted in DeleteDLQTasks operation.
	MessagesDeleted int64 `protobuf:"varint,1,opt,name=messages_deleted,json=messagesDeleted,proto3" json:"messages_deleted,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteDLQTasksResponse) Reset() {
	*x = DeleteDLQTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDLQTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDLQTasksResponse) ProtoMessage() {}

func (x *DeleteDLQTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDLQTasksResponse.ProtoReflect.Descriptor instead.
func (*DeleteDLQTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{125}
}

func (x *DeleteDLQTasksResponse) GetMessagesDeleted() int64 {
	if x != nil {
		return x.MessagesDeleted
	}
	return 0
}

type ListQueuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueType     int32                  `protobuf:"varint,1,opt,name=queue_type,json=queueType,proto3" json:"queue_type,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesRequest) Reset() {
	*x = ListQueuesRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesRequest) ProtoMessage() {}

func (x *ListQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesRequest.ProtoReflect.Descriptor instead.
func (*ListQueuesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{126}
}

func (x *ListQueuesRequest) GetQueueType() int32 {
	if x != nil {
		return x.QueueType
	}
	return 0
}

func (x *ListQueuesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQueuesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListQueuesResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Queues        []*ListQueuesResponse_QueueInfo `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	NextPageToken []byte                          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesResponse) Reset() {
	*x = ListQueuesResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse) ProtoMessage() {}

func (x *ListQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{127}
}

func (x *ListQueuesResponse) GetQueues() []*ListQueuesResponse_QueueInfo {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *ListQueuesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type AddTasksRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Even though we can obtain the shard ID from the tasks, we still need the shard_id in the request for routing. If
	// not, it would be possible to include tasks for shards that belong to different hosts, and we'd need to fan-out the
	// request, which would be more complicated.
	ShardId int32 `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// A list of tasks to enqueue or re-enqueue.
	Tasks         []*AddTasksRequest_Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksRequest) Reset() {
	*x = AddTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksRequest) ProtoMessage() {}

func (x *AddTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksRequest.ProtoReflect.Descriptor instead.
func (*AddTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{128}
}

func (x *AddTasksRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *AddTasksRequest) GetTasks() []*AddTasksRequest_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type AddTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksResponse) Reset() {
	*x = AddTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksResponse) ProtoMessage() {}

func (x *AddTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksResponse.ProtoReflect.Descriptor instead.
func (*AddTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{129}
}

type ListTasksRequest struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Request       *v118.ListHistoryTasksRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksRequest) Reset() {
	*x = ListTasksRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksRequest) ProtoMessage() {}

func (x *ListTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksRequest.ProtoReflect.Descriptor instead.
func (*ListTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{130}
}

func (x *ListTasksRequest) GetRequest() *v118.ListHistoryTasksRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type ListTasksResponse struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Response      *v118.ListHistoryTasksResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTasksResponse) Reset() {
	*x = ListTasksResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTasksResponse) ProtoMessage() {}

func (x *ListTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTasksResponse.ProtoReflect.Descriptor instead.
func (*ListTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{131}
}

func (x *ListTasksResponse) GetResponse() *v118.ListHistoryTasksResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CompleteNexusOperationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Completion token - holds information for locating a run and the corresponding operation state machine.
	Completion *v120.NexusOperationCompletion `protobuf:"bytes,1,opt,name=completion,proto3" json:"completion,omitempty"`
	// Operation state - may only be successful / failed / canceled.
	State string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	// Types that are valid to be assigned to Outcome:
	//
	//	*CompleteNexusOperationRequest_Success
	//	*CompleteNexusOperationRequest_Failure
	Outcome isCompleteNexusOperationRequest_Outcome `protobuf_oneof:"outcome"`
	// Operation token - used when the completion is received before the started response.
	OperationToken string `protobuf:"bytes,5,opt,name=operation_token,json=operationToken,proto3" json:"operation_token,omitempty"`
	// Time the operation was started. Used when completion is received before the started response.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Links to be attached to a fabricated start event if completion is received before started response.
	Links         []*v14.Link `protobuf:"bytes,7,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteNexusOperationRequest) Reset() {
	*x = CompleteNexusOperationRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteNexusOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteNexusOperationRequest) ProtoMessage() {}

func (x *CompleteNexusOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteNexusOperationRequest.ProtoReflect.Descriptor instead.
func (*CompleteNexusOperationRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{132}
}

func (x *CompleteNexusOperationRequest) GetCompletion() *v120.NexusOperationCompletion {
	if x != nil {
		return x.Completion
	}
	return nil
}

func (x *CompleteNexusOperationRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *CompleteNexusOperationRequest) GetOutcome() isCompleteNexusOperationRequest_Outcome {
	if x != nil {
		return x.Outcome
	}
	return nil
}

func (x *CompleteNexusOperationRequest) GetSuccess() *v14.Payload {
	if x != nil {
		if x, ok := x.Outcome.(*CompleteNexusOperationRequest_Success); ok {
			return x.Success
		}
	}
	return nil
}

func (x *CompleteNexusOperationRequest) GetFailure() *v121.Failure {
	if x != nil {
		if x, ok := x.Outcome.(*CompleteNexusOperationRequest_Failure); ok {
			return x.Failure
		}
	}
	return nil
}

func (x *CompleteNexusOperationRequest) GetOperationToken() string {
	if x != nil {
		return x.OperationToken
	}
	return ""
}

func (x *CompleteNexusOperationRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CompleteNexusOperationRequest) GetLinks() []*v14.Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type isCompleteNexusOperationRequest_Outcome interface {
	isCompleteNexusOperationRequest_Outcome()
}

type CompleteNexusOperationRequest_Success struct {
	// Result of a successful operation, only set if state == successful.
	Success *v14.Payload `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

type CompleteNexusOperationRequest_Failure struct {
	// Operation failure, only set if state != successful.
	Failure *v121.Failure `protobuf:"bytes,4,opt,name=failure,proto3,oneof"`
}

func (*CompleteNexusOperationRequest_Success) isCompleteNexusOperationRequest_Outcome() {}

func (*CompleteNexusOperationRequest_Failure) isCompleteNexusOperationRequest_Outcome() {}

type CompleteNexusOperationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteNexusOperationResponse) Reset() {
	*x = CompleteNexusOperationResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteNexusOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteNexusOperationResponse) ProtoMessage() {}

func (x *CompleteNexusOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteNexusOperationResponse.ProtoReflect.Descriptor instead.
func (*CompleteNexusOperationResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{133}
}

type InvokeStateMachineMethodRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TODO(Tianyu): This is the same as NexusOperationsCompletion but obviously is not about Nexus. This is because
	// State machine signaling is a generalization of the Nexus mechanisms. Perhaps eventually they should be merged.
	// Namespace UUID.
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Workflow ID.
	WorkflowId string `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	// Run ID at the time this token was generated.
	RunId string `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	// Reference including the path to the backing Operation state machine and a version + transition count for
	// staleness checks.
	Ref *v18.StateMachineRef `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
	// The method name to invoke. Methods must be explicitly registered for the target state machine in the state
	// machine registry, and accept an argument type of HistoryEvent that is the completion event of the completed
	// workflow.
	MethodName string `protobuf:"bytes,5,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	// Input, in serialized bytes, to the method. Users specify a deserializer during method registration for each state machine.
	Input         []byte `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeStateMachineMethodRequest) Reset() {
	*x = InvokeStateMachineMethodRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeStateMachineMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeStateMachineMethodRequest) ProtoMessage() {}

func (x *InvokeStateMachineMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeStateMachineMethodRequest.ProtoReflect.Descriptor instead.
func (*InvokeStateMachineMethodRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{134}
}

func (x *InvokeStateMachineMethodRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *InvokeStateMachineMethodRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *InvokeStateMachineMethodRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *InvokeStateMachineMethodRequest) GetRef() *v18.StateMachineRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *InvokeStateMachineMethodRequest) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *InvokeStateMachineMethodRequest) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

type InvokeStateMachineMethodResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output, in serialized bytes, of the method. Users specify a serializer during method registration for each state machine.
	Output        []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvokeStateMachineMethodResponse) Reset() {
	*x = InvokeStateMachineMethodResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvokeStateMachineMethodResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeStateMachineMethodResponse) ProtoMessage() {}

func (x *InvokeStateMachineMethodResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeStateMachineMethodResponse.ProtoReflect.Descriptor instead.
func (*InvokeStateMachineMethodResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{135}
}

func (x *InvokeStateMachineMethodResponse) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

type DeepHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostAddress   string                 `protobuf:"bytes,1,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeepHealthCheckRequest) Reset() {
	*x = DeepHealthCheckRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckRequest) ProtoMessage() {}

func (x *DeepHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{136}
}

func (x *DeepHealthCheckRequest) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

type DeepHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         v110.HealthState       `protobuf:"varint,1,opt,name=state,proto3,enum=temporal.server.api.enums.v1.HealthState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeepHealthCheckResponse) Reset() {
	*x = DeepHealthCheckResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckResponse) ProtoMessage() {}

func (x *DeepHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{137}
}

func (x *DeepHealthCheckResponse) GetState() v110.HealthState {
	if x != nil {
		return x.State
	}
	return v110.HealthState(0)
}

type SyncWorkflowStateRequest struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	NamespaceId         string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution           *v14.WorkflowExecution   `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	VersionedTransition *v18.VersionedTransition `protobuf:"bytes,3,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
	VersionHistories    *v17.VersionHistories    `protobuf:"bytes,4,opt,name=version_histories,json=versionHistories,proto3" json:"version_histories,omitempty"`
	TargetClusterId     int32                    `protobuf:"varint,5,opt,name=target_cluster_id,json=targetClusterId,proto3" json:"target_cluster_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SyncWorkflowStateRequest) Reset() {
	*x = SyncWorkflowStateRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncWorkflowStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWorkflowStateRequest) ProtoMessage() {}

func (x *SyncWorkflowStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWorkflowStateRequest.ProtoReflect.Descriptor instead.
func (*SyncWorkflowStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{138}
}

func (x *SyncWorkflowStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncWorkflowStateRequest) GetExecution() *v14.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetVersionedTransition() *v18.VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetVersionHistories() *v17.VersionHistories {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetTargetClusterId() int32 {
	if x != nil {
		return x.TargetClusterId
	}
	return 0
}

type SyncWorkflowStateResponse struct {
	state                       protoimpl.MessageState            `protogen:"open.v1"`
	VersionedTransitionArtifact *v117.VersionedTransitionArtifact `protobuf:"bytes,5,opt,name=versioned_transition_artifact,json=versionedTransitionArtifact,proto3" json:"versioned_transition_artifact,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SyncWorkflowStateResponse) Reset() {
	*x = SyncWorkflowStateResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncWorkflowStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWorkflowStateResponse) ProtoMessage() {}

func (x *SyncWorkflowStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWorkflowStateResponse.ProtoReflect.Descriptor instead.
func (*SyncWorkflowStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{139}
}

func (x *SyncWorkflowStateResponse) GetVersionedTransitionArtifact() *v117.VersionedTransitionArtifact {
	if x != nil {
		return x.VersionedTransitionArtifact
	}
	return nil
}

// (-- api-linter: core::0134::request-mask-required=disabled
// (-- api-linter: core::0134::request-resource-required=disabled
type UpdateActivityOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace ID of the workflow which scheduled this activity
	NamespaceId   string                           `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	UpdateRequest *v1.UpdateActivityOptionsRequest `protobuf:"bytes,2,opt,name=update_request,json=updateRequest,proto3" json:"update_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateActivityOptionsRequest) Reset() {
	*x = UpdateActivityOptionsRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateActivityOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityOptionsRequest) ProtoMessage() {}

func (x *UpdateActivityOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityOptionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateActivityOptionsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{140}
}

func (x *UpdateActivityOptionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateActivityOptionsRequest) GetUpdateRequest() *v1.UpdateActivityOptionsRequest {
	if x != nil {
		return x.UpdateRequest
	}
	return nil
}

type UpdateActivityOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Activity options after an update
	ActivityOptions *v122.ActivityOptions `protobuf:"bytes,1,opt,name=activity_options,json=activityOptions,proto3" json:"activity_options,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateActivityOptionsResponse) Reset() {
	*x = UpdateActivityOptionsResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateActivityOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateActivityOptionsResponse) ProtoMessage() {}

func (x *UpdateActivityOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateActivityOptionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateActivityOptionsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{141}
}

func (x *UpdateActivityOptionsResponse) GetActivityOptions() *v122.ActivityOptions {
	if x != nil {
		return x.ActivityOptions
	}
	return nil
}

type PauseActivityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace ID of the workflow which scheduled this activity
	NamespaceId     string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	FrontendRequest *v1.PauseActivityRequest `protobuf:"bytes,2,opt,name=frontend_request,json=frontendRequest,proto3" json:"frontend_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PauseActivityRequest) Reset() {
	*x = PauseActivityRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseActivityRequest) ProtoMessage() {}

func (x *PauseActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseActivityRequest.ProtoReflect.Descriptor instead.
func (*PauseActivityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{142}
}

func (x *PauseActivityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PauseActivityRequest) GetFrontendRequest() *v1.PauseActivityRequest {
	if x != nil {
		return x.FrontendRequest
	}
	return nil
}

type PauseActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseActivityResponse) Reset() {
	*x = PauseActivityResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseActivityResponse) ProtoMessage() {}

func (x *PauseActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseActivityResponse.ProtoReflect.Descriptor instead.
func (*PauseActivityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{143}
}

type UnpauseActivityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace ID of the workflow which scheduled this activity
	NamespaceId     string                     `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	FrontendRequest *v1.UnpauseActivityRequest `protobuf:"bytes,2,opt,name=frontend_request,json=frontendRequest,proto3" json:"frontend_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UnpauseActivityRequest) Reset() {
	*x = UnpauseActivityRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseActivityRequest) ProtoMessage() {}

func (x *UnpauseActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseActivityRequest.ProtoReflect.Descriptor instead.
func (*UnpauseActivityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{144}
}

func (x *UnpauseActivityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UnpauseActivityRequest) GetFrontendRequest() *v1.UnpauseActivityRequest {
	if x != nil {
		return x.FrontendRequest
	}
	return nil
}

type UnpauseActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnpauseActivityResponse) Reset() {
	*x = UnpauseActivityResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnpauseActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpauseActivityResponse) ProtoMessage() {}

func (x *UnpauseActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpauseActivityResponse.ProtoReflect.Descriptor instead.
func (*UnpauseActivityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{145}
}

type ResetActivityRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Namespace ID of the workflow which scheduled this activity
	NamespaceId     string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	FrontendRequest *v1.ResetActivityRequest `protobuf:"bytes,2,opt,name=frontend_request,json=frontendRequest,proto3" json:"frontend_request,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ResetActivityRequest) Reset() {
	*x = ResetActivityRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetActivityRequest) ProtoMessage() {}

func (x *ResetActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetActivityRequest.ProtoReflect.Descriptor instead.
func (*ResetActivityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{146}
}

func (x *ResetActivityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ResetActivityRequest) GetFrontendRequest() *v1.ResetActivityRequest {
	if x != nil {
		return x.FrontendRequest
	}
	return nil
}

type ResetActivityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetActivityResponse) Reset() {
	*x = ResetActivityResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetActivityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetActivityResponse) ProtoMessage() {}

func (x *ResetActivityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetActivityResponse.ProtoReflect.Descriptor instead.
func (*ResetActivityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{147}
}

// (-- api-linter: core::0134::request-mask-required=disabled
// (-- api-linter: core::0134::request-resource-required=disabled
type UpdateWorkflowExecutionOptionsRequest struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	NamespaceId   string                                    `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	UpdateRequest *v1.UpdateWorkflowExecutionOptionsRequest `protobuf:"bytes,2,opt,name=update_request,json=updateRequest,proto3" json:"update_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkflowExecutionOptionsRequest) Reset() {
	*x = UpdateWorkflowExecutionOptionsRequest{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowExecutionOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowExecutionOptionsRequest) ProtoMessage() {}

func (x *UpdateWorkflowExecutionOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowExecutionOptionsRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowExecutionOptionsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{148}
}

func (x *UpdateWorkflowExecutionOptionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateWorkflowExecutionOptionsRequest) GetUpdateRequest() *v1.UpdateWorkflowExecutionOptionsRequest {
	if x != nil {
		return x.UpdateRequest
	}
	return nil
}

type UpdateWorkflowExecutionOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Workflow Execution options after update.
	WorkflowExecutionOptions *v15.WorkflowExecutionOptions `protobuf:"bytes,1,opt,name=workflow_execution_options,json=workflowExecutionOptions,proto3" json:"workflow_execution_options,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpdateWorkflowExecutionOptionsResponse) Reset() {
	*x = UpdateWorkflowExecutionOptionsResponse{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkflowExecutionOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkflowExecutionOptionsResponse) ProtoMessage() {}

func (x *UpdateWorkflowExecutionOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkflowExecutionOptionsResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkflowExecutionOptionsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{149}
}

func (x *UpdateWorkflowExecutionOptionsResponse) GetWorkflowExecutionOptions() *v15.WorkflowExecutionOptions {
	if x != nil {
		return x.WorkflowExecutionOptions
	}
	return nil
}

type ExecuteMultiOperationRequest_Operation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Operation:
	//
	//	*ExecuteMultiOperationRequest_Operation_StartWorkflow
	//	*ExecuteMultiOperationRequest_Operation_UpdateWorkflow
	Operation     isExecuteMultiOperationRequest_Operation_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteMultiOperationRequest_Operation) Reset() {
	*x = ExecuteMultiOperationRequest_Operation{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteMultiOperationRequest_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteMultiOperationRequest_Operation) ProtoMessage() {}

func (x *ExecuteMultiOperationRequest_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteMultiOperationRequest_Operation.ProtoReflect.Descriptor instead.
func (*ExecuteMultiOperationRequest_Operation) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ExecuteMultiOperationRequest_Operation) GetOperation() isExecuteMultiOperationRequest_Operation_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *ExecuteMultiOperationRequest_Operation) GetStartWorkflow() *StartWorkflowExecutionRequest {
	if x != nil {
		if x, ok := x.Operation.(*ExecuteMultiOperationRequest_Operation_StartWorkflow); ok {
			return x.StartWorkflow
		}
	}
	return nil
}

func (x *ExecuteMultiOperationRequest_Operation) GetUpdateWorkflow() *UpdateWorkflowExecutionRequest {
	if x != nil {
		if x, ok := x.Operation.(*ExecuteMultiOperationRequest_Operation_UpdateWorkflow); ok {
			return x.UpdateWorkflow
		}
	}
	return nil
}

type isExecuteMultiOperationRequest_Operation_Operation interface {
	isExecuteMultiOperationRequest_Operation_Operation()
}

type ExecuteMultiOperationRequest_Operation_StartWorkflow struct {
	StartWorkflow *StartWorkflowExecutionRequest `protobuf:"bytes,1,opt,name=start_workflow,json=startWorkflow,proto3,oneof"`
}

type ExecuteMultiOperationRequest_Operation_UpdateWorkflow struct {
	UpdateWorkflow *UpdateWorkflowExecutionRequest `protobuf:"bytes,2,opt,name=update_workflow,json=updateWorkflow,proto3,oneof"`
}

func (*ExecuteMultiOperationRequest_Operation_StartWorkflow) isExecuteMultiOperationRequest_Operation_Operation() {
}

func (*ExecuteMultiOperationRequest_Operation_UpdateWorkflow) isExecuteMultiOperationRequest_Operation_Operation() {
}

type ExecuteMultiOperationResponse_Response struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*ExecuteMultiOperationResponse_Response_StartWorkflow
	//	*ExecuteMultiOperationResponse_Response_UpdateWorkflow
	Response      isExecuteMultiOperationResponse_Response_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteMultiOperationResponse_Response) Reset() {
	*x = ExecuteMultiOperationResponse_Response{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteMultiOperationResponse_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteMultiOperationResponse_Response) ProtoMessage() {}

func (x *ExecuteMultiOperationResponse_Response) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteMultiOperationResponse_Response.ProtoReflect.Descriptor instead.
func (*ExecuteMultiOperationResponse_Response) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ExecuteMultiOperationResponse_Response) GetResponse() isExecuteMultiOperationResponse_Response_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ExecuteMultiOperationResponse_Response) GetStartWorkflow() *StartWorkflowExecutionResponse {
	if x != nil {
		if x, ok := x.Response.(*ExecuteMultiOperationResponse_Response_StartWorkflow); ok {
			return x.StartWorkflow
		}
	}
	return nil
}

func (x *ExecuteMultiOperationResponse_Response) GetUpdateWorkflow() *UpdateWorkflowExecutionResponse {
	if x != nil {
		if x, ok := x.Response.(*ExecuteMultiOperationResponse_Response_UpdateWorkflow); ok {
			return x.UpdateWorkflow
		}
	}
	return nil
}

type isExecuteMultiOperationResponse_Response_Response interface {
	isExecuteMultiOperationResponse_Response_Response()
}

type ExecuteMultiOperationResponse_Response_StartWorkflow struct {
	StartWorkflow *StartWorkflowExecutionResponse `protobuf:"bytes,1,opt,name=start_workflow,json=startWorkflow,proto3,oneof"`
}

type ExecuteMultiOperationResponse_Response_UpdateWorkflow struct {
	UpdateWorkflow *UpdateWorkflowExecutionResponse `protobuf:"bytes,2,opt,name=update_workflow,json=updateWorkflow,proto3,oneof"`
}

func (*ExecuteMultiOperationResponse_Response_StartWorkflow) isExecuteMultiOperationResponse_Response_Response() {
}

func (*ExecuteMultiOperationResponse_Response_UpdateWorkflow) isExecuteMultiOperationResponse_Response_Response() {
}

type ListQueuesResponse_QueueInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	MessageCount  int64                  `protobuf:"varint,2,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesResponse_QueueInfo) Reset() {
	*x = ListQueuesResponse_QueueInfo{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesResponse_QueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse_QueueInfo) ProtoMessage() {}

func (x *ListQueuesResponse_QueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse_QueueInfo.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse_QueueInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{127, 0}
}

func (x *ListQueuesResponse_QueueInfo) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ListQueuesResponse_QueueInfo) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

type AddTasksRequest_Task struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// category_id is needed to deserialize the tasks. See TaskCategory for a list of options here. However, keep in mind
	// that the list of valid options is registered dynamically with the server in the history/tasks package, so that
	// enum is not comprehensive.
	CategoryId int32 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	// blob is the serialized task.
	Blob          *v14.DataBlob `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksRequest_Task) Reset() {
	*x = AddTasksRequest_Task{}
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksRequest_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksRequest_Task) ProtoMessage() {}

func (x *AddTasksRequest_Task) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksRequest_Task.ProtoReflect.Descriptor instead.
func (*AddTasksRequest_Task) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP(), []int{128, 0}
}

func (x *AddTasksRequest_Task) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AddTasksRequest_Task) GetBlob() *v14.DataBlob {
	if x != nil {
		return x.Blob
	}
	return nil
}

var file_temporal_server_api_historyservice_v1_request_response_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*RoutingOptions)(nil),
		Field:         7234,
		Name:          "temporal.server.api.historyservice.v1.routing",
		Tag:           "bytes,7234,opt,name=routing",
		Filename:      "temporal/server/api/historyservice/v1/request_response.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional temporal.server.api.historyservice.v1.RoutingOptions routing = 7234;
	E_Routing = &file_temporal_server_api_historyservice_v1_request_response_proto_extTypes[0]
)

var File_temporal_server_api_historyservice_v1_request_response_proto protoreflect.FileDescriptor

const file_temporal_server_api_historyservice_v1_request_response_proto_rawDesc = "" +
	"\n" +
	"<temporal/server/api/historyservice/v1/request_response.proto\x12%temporal.server.api.historyservice.v1\x1a google/protobuf/descriptor.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a&temporal/api/activity/v1/message.proto\x1a(temporal/api/deployment/v1/message.proto\x1a$temporal/api/common/v1/message.proto\x1a%temporal/api/history/v1/message.proto\x1a'temporal/api/taskqueue/v1/message.proto\x1a$temporal/api/enums/v1/workflow.proto\x1a&temporal/api/workflow/v1/message.proto\x1a#temporal/api/query/v1/message.proto\x1a&temporal/api/protocol/v1/message.proto\x1a%temporal/api/failure/v1/message.proto\x1a#temporal/api/nexus/v1/message.proto\x1a*temporal/server/api/clock/v1/message.proto\x1a,temporal/server/api/history/v1/message.proto\x1a*temporal/server/api/enums/v1/cluster.proto\x1a)temporal/server/api/enums/v1/common.proto\x1a+temporal/server/api/enums/v1/workflow.proto\x1a-temporal/server/api/workflow/v1/message.proto\x1a.temporal/server/api/namespace/v1/message.proto\x1a0temporal/server/api/replication/v1/message.proto\x1a3temporal/server/api/persistence/v1/executions.proto\x1a,temporal/server/api/persistence/v1/hsm.proto\x1a?temporal/server/api/persistence/v1/workflow_mutable_state.proto\x1a.temporal/server/api/taskqueue/v1/message.proto\x1a*temporal/server/api/token/v1/message.proto\x1a6temporal/api/workflowservice/v1/request_response.proto\x1a:temporal/server/api/adminservice/v1/request_response.proto\x1a'temporal/server/api/common/v1/dlq.proto\"\xe0\x01\n" +
	"\x0eRoutingOptions\x12\x16\n" +
	"\x06custom\x18\x01 \x01(\bR\x06custom\x12\x19\n" +
	"\bany_host\x18\x02 \x01(\bR\aanyHost\x12\x19\n" +
	"\bshard_id\x18\x03 \x01(\tR\ashardId\x12!\n" +
	"\fnamespace_id\x18\x04 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x05 \x01(\tR\n" +
	"workflowId\x12\x1d\n" +
	"\n" +
	"task_token\x18\x06 \x01(\tR\ttaskToken\x12\x1d\n" +
	"\n" +
	"task_infos\x18\a \x01(\tR\ttaskInfos\"\x9f\t\n" +
	"\x1dStartWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12c\n" +
	"\rstart_request\x18\x02 \x01(\v2>.temporal.api.workflowservice.v1.StartWorkflowExecutionRequestR\fstartRequest\x12h\n" +
	"\x15parent_execution_info\x18\x03 \x01(\v24.temporal.server.api.workflow.v1.ParentExecutionInfoR\x13parentExecutionInfo\x12\x18\n" +
	"\aattempt\x18\x04 \x01(\x05R\aattempt\x12g\n" +
	"\"workflow_execution_expiration_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x1fworkflowExecutionExpirationTime\x12h\n" +
	"\x19continue_as_new_initiator\x18\x06 \x01(\x0e2-.temporal.api.enums.v1.ContinueAsNewInitiatorR\x16continueAsNewInitiator\x12M\n" +
	"\x11continued_failure\x18\a \x01(\v2 .temporal.api.failure.v1.FailureR\x10continuedFailure\x12V\n" +
	"\x16last_completion_result\x18\b \x01(\v2 .temporal.api.common.v1.PayloadsR\x14lastCompletionResult\x12X\n" +
	"\x1bfirst_workflow_task_backoff\x18\t \x01(\v2\x19.google.protobuf.DurationR\x18firstWorkflowTaskBackoff\x12\\\n" +
	"\x14source_version_stamp\x18\n" +
	" \x01(\v2*.temporal.api.common.v1.WorkerVersionStampR\x12sourceVersionStamp\x12b\n" +
	"\x13root_execution_info\x18\v \x01(\v22.temporal.server.api.workflow.v1.RootExecutionInfoR\x11rootExecutionInfo\x12,\n" +
	"\x12inherited_build_id\x18\f \x01(\tR\x10inheritedBuildId\x12]\n" +
	"\x13versioning_override\x18\r \x01(\v2,.temporal.api.workflow.v1.VersioningOverrideR\x12versioningOverride\x12.\n" +
	"\x13child_workflow_only\x18\x0e \x01(\bR\x11childWorkflowOnly:\x1f\x92\xc4\x03\x1b*\x19start_request.workflow_id\"\x82\x02\n" +
	"\x1eStartWorkflowExecutionResponse\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12?\n" +
	"\x05clock\x18\x02 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12n\n" +
	"\x13eager_workflow_task\x18\x03 \x01(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\x11eagerWorkflowTask\x12\x18\n" +
	"\astarted\x18\x04 \x01(\bR\astarted\"\xda\x03\n" +
	"\x16GetMutableStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x123\n" +
	"\x16expected_next_event_id\x18\x03 \x01(\x03R\x13expectedNextEventId\x120\n" +
	"\x14current_branch_token\x18\x04 \x01(\fR\x12currentBranchToken\x12d\n" +
	"\x14version_history_item\x18\x05 \x01(\v22.temporal.server.api.history.v1.VersionHistoryItemR\x12versionHistoryItem\x12j\n" +
	"\x14versioned_transition\x18\x06 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x13versionedTransition:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\xf3\v\n" +
	"\x17GetMutableStateResponse\x12G\n" +
	"\texecution\x18\x01 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12I\n" +
	"\rworkflow_type\x18\x02 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12\"\n" +
	"\rnext_event_id\x18\x03 \x01(\x03R\vnextEventId\x129\n" +
	"\x19previous_started_event_id\x18\x04 \x01(\x03R\x16previousStartedEventId\x12-\n" +
	"\x13last_first_event_id\x18\x05 \x01(\x03R\x10lastFirstEventId\x12C\n" +
	"\n" +
	"task_queue\x18\x06 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12P\n" +
	"\x11sticky_task_queue\x18\a \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\x0fstickyTaskQueue\x12u\n" +
	"+sticky_task_queue_schedule_to_start_timeout\x18\v \x01(\v2\x19.google.protobuf.DurationR%stickyTaskQueueScheduleToStartTimeout\x120\n" +
	"\x14current_branch_token\x18\r \x01(\fR\x12currentBranchToken\x12[\n" +
	"\x0eworkflow_state\x18\x0f \x01(\x0e24.temporal.server.api.enums.v1.WorkflowExecutionStateR\rworkflowState\x12W\n" +
	"\x0fworkflow_status\x18\x10 \x01(\x0e2..temporal.api.enums.v1.WorkflowExecutionStatusR\x0eworkflowStatus\x12]\n" +
	"\x11version_histories\x18\x11 \x01(\v20.temporal.server.api.history.v1.VersionHistoriesR\x10versionHistories\x12>\n" +
	"\x1cis_sticky_task_queue_enabled\x18\x12 \x01(\bR\x18isStickyTaskQueueEnabled\x124\n" +
	"\x17last_first_event_txn_id\x18\x13 \x01(\x03R\x13lastFirstEventTxnId\x123\n" +
	"\x16first_execution_run_id\x18\x14 \x01(\tR\x13firstExecutionRunId\x12r\n" +
	" most_recent_worker_version_stamp\x18\x15 \x01(\v2*.temporal.api.common.v1.WorkerVersionStampR\x1cmostRecentWorkerVersionStamp\x12*\n" +
	"\x11assigned_build_id\x18\x16 \x01(\tR\x0fassignedBuildId\x12,\n" +
	"\x12inherited_build_id\x18\x17 \x01(\tR\x10inheritedBuildId\x12f\n" +
	"\x12transition_history\x18\x18 \x03(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x11transitionHistory\x12b\n" +
	"\x0fversioning_info\x18\x19 \x01(\v29.temporal.api.workflow.v1.WorkflowExecutionVersioningInfoR\x0eversioningInfoJ\x04\b\b\x10\tJ\x04\b\t\x10\n" +
	"J\x04\b\n" +
	"\x10\vJ\x04\b\f\x10\rJ\x04\b\x0e\x10\x0f\"\xef\x02\n" +
	"\x17PollMutableStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x123\n" +
	"\x16expected_next_event_id\x18\x03 \x01(\x03R\x13expectedNextEventId\x120\n" +
	"\x14current_branch_token\x18\x04 \x01(\fR\x12currentBranchToken\x12d\n" +
	"\x14version_history_item\x18\x05 \x01(\v22.temporal.server.api.history.v1.VersionHistoryItemR\x12versionHistoryItem:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\x94\b\n" +
	"\x18PollMutableStateResponse\x12G\n" +
	"\texecution\x18\x01 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12I\n" +
	"\rworkflow_type\x18\x02 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12\"\n" +
	"\rnext_event_id\x18\x03 \x01(\x03R\vnextEventId\x129\n" +
	"\x19previous_started_event_id\x18\x04 \x01(\x03R\x16previousStartedEventId\x12-\n" +
	"\x13last_first_event_id\x18\x05 \x01(\x03R\x10lastFirstEventId\x12C\n" +
	"\n" +
	"task_queue\x18\x06 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12P\n" +
	"\x11sticky_task_queue\x18\a \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\x0fstickyTaskQueue\x12u\n" +
	"+sticky_task_queue_schedule_to_start_timeout\x18\v \x01(\v2\x19.google.protobuf.DurationR%stickyTaskQueueScheduleToStartTimeout\x120\n" +
	"\x14current_branch_token\x18\f \x01(\fR\x12currentBranchToken\x12]\n" +
	"\x11version_histories\x18\x0e \x01(\v20.temporal.server.api.history.v1.VersionHistoriesR\x10versionHistories\x12[\n" +
	"\x0eworkflow_state\x18\x0f \x01(\x0e24.temporal.server.api.enums.v1.WorkflowExecutionStateR\rworkflowState\x12W\n" +
	"\x0fworkflow_status\x18\x10 \x01(\x0e2..temporal.api.enums.v1.WorkflowExecutionStatusR\x0eworkflowStatus\x124\n" +
	"\x17last_first_event_txn_id\x18\x11 \x01(\x03R\x13lastFirstEventTxnId\x123\n" +
	"\x16first_execution_run_id\x18\x12 \x01(\tR\x13firstExecutionRunIdJ\x04\b\b\x10\tJ\x04\b\t\x10\n" +
	"J\x04\b\n" +
	"\x10\vJ\x04\b\r\x10\x0e\"\xa6\x01\n" +
	"\x1bResetStickyTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\x1e\n" +
	"\x1cResetStickyTaskQueueResponse\"\xe0\x03\n" +
	"\x1cExecuteMultiOperationRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12m\n" +
	"\n" +
	"operations\x18\x03 \x03(\v2M.temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.OperationR\n" +
	"operations\x1a\xf9\x01\n" +
	"\tOperation\x12m\n" +
	"\x0estart_workflow\x18\x01 \x01(\v2D.temporal.server.api.historyservice.v1.StartWorkflowExecutionRequestH\x00R\rstartWorkflow\x12p\n" +
	"\x0fupdate_workflow\x18\x02 \x01(\v2E.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequestH\x00R\x0eupdateWorkflowB\v\n" +
	"\toperation:\x11\x92\xc4\x03\r*\vworkflow_id\"\x88\x03\n" +
	"\x1dExecuteMultiOperationResponse\x12k\n" +
	"\tresponses\x18\x01 \x03(\v2M.temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.ResponseR\tresponses\x1a\xf9\x01\n" +
	"\bResponse\x12n\n" +
	"\x0estart_workflow\x18\x01 \x01(\v2E.temporal.server.api.historyservice.v1.StartWorkflowExecutionResponseH\x00R\rstartWorkflow\x12q\n" +
	"\x0fupdate_workflow\x18\x02 \x01(\v2F.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponseH\x00R\x0eupdateWorkflowB\n" +
	"\n" +
	"\bresponse\"\xe7\x05\n" +
	" RecordWorkflowTaskStartedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12,\n" +
	"\x12scheduled_event_id\x18\x03 \x01(\x03R\x10scheduledEventId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tR\trequestId\x12`\n" +
	"\fpoll_request\x18\x06 \x01(\v2=.temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequestR\vpollRequest\x12?\n" +
	"\x05clock\x18\a \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12j\n" +
	"\x16build_id_redirect_info\x18\b \x01(\v25.temporal.server.api.taskqueue.v1.BuildIdRedirectInfoR\x13buildIdRedirectInfo\x12Y\n" +
	"\x14scheduled_deployment\x18\t \x01(\v2&.temporal.api.deployment.v1.DeploymentR\x13scheduledDeployment\x12c\n" +
	"\x11version_directive\x18\n" +
	" \x01(\v26.temporal.server.api.taskqueue.v1.TaskVersionDirectiveR\x10versionDirective:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_idJ\x04\b\x04\x10\x05\"\x94\n" +
	"\n" +
	"!RecordWorkflowTaskStartedResponse\x12I\n" +
	"\rworkflow_type\x18\x01 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x129\n" +
	"\x19previous_started_event_id\x18\x02 \x01(\x03R\x16previousStartedEventId\x12,\n" +
	"\x12scheduled_event_id\x18\x03 \x01(\x03R\x10scheduledEventId\x12(\n" +
	"\x10started_event_id\x18\x04 \x01(\x03R\x0estartedEventId\x12\"\n" +
	"\rnext_event_id\x18\x05 \x01(\x03R\vnextEventId\x12\x18\n" +
	"\aattempt\x18\x06 \x01(\x05R\aattempt\x128\n" +
	"\x18sticky_execution_enabled\x18\a \x01(\bR\x16stickyExecutionEnabled\x12q\n" +
	"\x17transient_workflow_task\x18\b \x01(\v29.temporal.server.api.history.v1.TransientWorkflowTaskInfoR\x15transientWorkflowTask\x12g\n" +
	"\x1dworkflow_execution_task_queue\x18\t \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\x1aworkflowExecutionTaskQueue\x12!\n" +
	"\fbranch_token\x18\v \x01(\fR\vbranchToken\x12A\n" +
	"\x0escheduled_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12=\n" +
	"\fstarted_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12o\n" +
	"\aqueries\x18\x0e \x03(\v2U.temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.QueriesEntryR\aqueries\x12?\n" +
	"\x05clock\x18\x0f \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12=\n" +
	"\bmessages\x18\x10 \x03(\v2!.temporal.api.protocol.v1.MessageR\bmessages\x12\x18\n" +
	"\aversion\x18\x11 \x01(\x03R\aversion\x12:\n" +
	"\ahistory\x18\x12 \x01(\v2 .temporal.api.history.v1.HistoryR\ahistory\x12&\n" +
	"\x0fnext_page_token\x18\x13 \x01(\fR\rnextPageToken\x12A\n" +
	"\vraw_history\x18\x14 \x01(\v2 .temporal.api.history.v1.HistoryR\n" +
	"rawHistory\x1a`\n" +
	"\fQueriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.temporal.api.query.v1.WorkflowQueryR\x05value:\x028\x01J\x04\b\n" +
	"\x10\v\"\x8e\n" +
	"\n" +
	"/RecordWorkflowTaskStartedResponseWithRawHistory\x12I\n" +
	"\rworkflow_type\x18\x01 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x129\n" +
	"\x19previous_started_event_id\x18\x02 \x01(\x03R\x16previousStartedEventId\x12,\n" +
	"\x12scheduled_event_id\x18\x03 \x01(\x03R\x10scheduledEventId\x12(\n" +
	"\x10started_event_id\x18\x04 \x01(\x03R\x0estartedEventId\x12\"\n" +
	"\rnext_event_id\x18\x05 \x01(\x03R\vnextEventId\x12\x18\n" +
	"\aattempt\x18\x06 \x01(\x05R\aattempt\x128\n" +
	"\x18sticky_execution_enabled\x18\a \x01(\bR\x16stickyExecutionEnabled\x12q\n" +
	"\x17transient_workflow_task\x18\b \x01(\v29.temporal.server.api.history.v1.TransientWorkflowTaskInfoR\x15transientWorkflowTask\x12g\n" +
	"\x1dworkflow_execution_task_queue\x18\t \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\x1aworkflowExecutionTaskQueue\x12!\n" +
	"\fbranch_token\x18\v \x01(\fR\vbranchToken\x12A\n" +
	"\x0escheduled_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12=\n" +
	"\fstarted_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12}\n" +
	"\aqueries\x18\x0e \x03(\v2c.temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.QueriesEntryR\aqueries\x12?\n" +
	"\x05clock\x18\x0f \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12=\n" +
	"\bmessages\x18\x10 \x03(\v2!.temporal.api.protocol.v1.MessageR\bmessages\x12\x18\n" +
	"\aversion\x18\x11 \x01(\x03R\aversion\x12:\n" +
	"\ahistory\x18\x12 \x01(\v2 .temporal.api.history.v1.HistoryR\ahistory\x12&\n" +
	"\x0fnext_page_token\x18\x13 \x01(\fR\rnextPageToken\x12\x1f\n" +
	"\vraw_history\x18\x14 \x03(\fR\n" +
	"rawHistory\x1a`\n" +
	"\fQueriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.temporal.api.query.v1.WorkflowQueryR\x05value:\x028\x01J\x04\b\n" +
	"\x10\v\"\x83\x06\n" +
	" RecordActivityTaskStartedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12,\n" +
	"\x12scheduled_event_id\x18\x03 \x01(\x03R\x10scheduledEventId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\tR\trequestId\x12`\n" +
	"\fpoll_request\x18\x06 \x01(\v2=.temporal.api.workflowservice.v1.PollActivityTaskQueueRequestR\vpollRequest\x12?\n" +
	"\x05clock\x18\a \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12j\n" +
	"\x16build_id_redirect_info\x18\b \x01(\v25.temporal.server.api.taskqueue.v1.BuildIdRedirectInfoR\x13buildIdRedirectInfo\x12\x14\n" +
	"\x05stamp\x18\t \x01(\x05R\x05stamp\x12Y\n" +
	"\x14scheduled_deployment\x18\n" +
	" \x01(\v2&.temporal.api.deployment.v1.DeploymentR\x13scheduledDeployment\x12c\n" +
	"\x11version_directive\x18\f \x01(\v26.temporal.server.api.taskqueue.v1.TaskVersionDirectiveR\x10versionDirective:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_idJ\x04\b\x04\x10\x05J\x04\b\v\x10\f\"\x8f\x05\n" +
	"!RecordActivityTaskStartedResponse\x12N\n" +
	"\x0fscheduled_event\x18\x01 \x01(\v2%.temporal.api.history.v1.HistoryEventR\x0escheduledEvent\x12=\n" +
	"\fstarted_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12\x18\n" +
	"\aattempt\x18\x03 \x01(\x05R\aattempt\x12_\n" +
	"\x1ecurrent_attempt_scheduled_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x1bcurrentAttemptScheduledTime\x12M\n" +
	"\x11heartbeat_details\x18\x05 \x01(\v2 .temporal.api.common.v1.PayloadsR\x10heartbeatDetails\x12I\n" +
	"\rworkflow_type\x18\x06 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12-\n" +
	"\x12workflow_namespace\x18\a \x01(\tR\x11workflowNamespace\x12?\n" +
	"\x05clock\x18\b \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12\x18\n" +
	"\aversion\x18\t \x01(\x03R\aversion\x12<\n" +
	"\bpriority\x18\n" +
	" \x01(\v2 .temporal.api.common.v1.PriorityR\bpriority\"\xdc\x01\n" +
	"#RespondWorkflowTaskCompletedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12o\n" +
	"\x10complete_request\x18\x02 \x01(\v2D.temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequestR\x0fcompleteRequest:!\x92\xc4\x03\x1d2\x1bcomplete_request.task_token\"\xa7\x03\n" +
	"$RespondWorkflowTaskCompletedResponse\x12w\n" +
	"\x10started_response\x18\x01 \x01(\v2H.temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseB\x02\x18\x01R\x0fstartedResponse\x12e\n" +
	"\x0eactivity_tasks\x18\x02 \x03(\v2>.temporal.api.workflowservice.v1.PollActivityTaskQueueResponseR\ractivityTasks\x123\n" +
	"\x16reset_history_event_id\x18\x03 \x01(\x03R\x13resetHistoryEventId\x12j\n" +
	"\x11new_workflow_task\x18\x04 \x01(\v2>.temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponseR\x0fnewWorkflowTask\"\xd0\x01\n" +
	" RespondWorkflowTaskFailedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12h\n" +
	"\x0efailed_request\x18\x02 \x01(\v2A.temporal.api.workflowservice.v1.RespondWorkflowTaskFailedRequestR\rfailedRequest:\x1f\x92\xc4\x03\x1b2\x19failed_request.task_token\"#\n" +
	"!RespondWorkflowTaskFailedResponse\"\x94\x02\n" +
	"\x1aIsWorkflowTaskValidRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12?\n" +
	"\x05clock\x18\x03 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12,\n" +
	"\x12scheduled_event_id\x18\x04 \x01(\x03R\x10scheduledEventId:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"8\n" +
	"\x1bIsWorkflowTaskValidResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\"\xdd\x01\n" +
	"\"RecordActivityTaskHeartbeatRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12p\n" +
	"\x11heartbeat_request\x18\x02 \x01(\v2C.temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatRequestR\x10heartbeatRequest:\"\x92\xc4\x03\x1e2\x1cheartbeat_request.task_token\"y\n" +
	"#RecordActivityTaskHeartbeatResponse\x12)\n" +
	"\x10cancel_requested\x18\x01 \x01(\bR\x0fcancelRequested\x12'\n" +
	"\x0factivity_paused\x18\x02 \x01(\bR\x0eactivityPaused\"\xdc\x01\n" +
	"#RespondActivityTaskCompletedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12o\n" +
	"\x10complete_request\x18\x02 \x01(\v2D.temporal.api.workflowservice.v1.RespondActivityTaskCompletedRequestR\x0fcompleteRequest:!\x92\xc4\x03\x1d2\x1bcomplete_request.task_token\"&\n" +
	"$RespondActivityTaskCompletedResponse\"\xd0\x01\n" +
	" RespondActivityTaskFailedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12h\n" +
	"\x0efailed_request\x18\x02 \x01(\v2A.temporal.api.workflowservice.v1.RespondActivityTaskFailedRequestR\rfailedRequest:\x1f\x92\xc4\x03\x1b2\x19failed_request.task_token\"#\n" +
	"!RespondActivityTaskFailedResponse\"\xd4\x01\n" +
	"\"RespondActivityTaskCanceledRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12j\n" +
	"\x0ecancel_request\x18\x02 \x01(\v2C.temporal.api.workflowservice.v1.RespondActivityTaskCanceledRequestR\rcancelRequest:\x1f\x92\xc4\x03\x1b2\x19cancel_request.task_token\"%\n" +
	"#RespondActivityTaskCanceledResponse\"\x94\x02\n" +
	"\x1aIsActivityTaskValidRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12?\n" +
	"\x05clock\x18\x03 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12,\n" +
	"\x12scheduled_event_id\x18\x04 \x01(\x03R\x10scheduledEventId:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"8\n" +
	"\x1bIsActivityTaskValidResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\"\xfb\x02\n" +
	"\x1eSignalWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12f\n" +
	"\x0esignal_request\x18\x02 \x01(\v2?.temporal.api.workflowservice.v1.SignalWorkflowExecutionRequestR\rsignalRequest\x12i\n" +
	"\x1bexternal_workflow_execution\x18\x03 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x19externalWorkflowExecution\x12.\n" +
	"\x13child_workflow_only\x18\x04 \x01(\bR\x11childWorkflowOnly:3\x92\xc4\x03/*-signal_request.workflow_execution.workflow_id\"!\n" +
	"\x1fSignalWorkflowExecutionResponse\"\xff\x01\n" +
	"'SignalWithStartWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x83\x01\n" +
	"\x19signal_with_start_request\x18\x02 \x01(\v2H.temporal.api.workflowservice.v1.SignalWithStartWorkflowExecutionRequestR\x16signalWithStartRequest:+\x92\xc4\x03'*%signal_with_start_request.workflow_id\"[\n" +
	"(SignalWithStartWorkflowExecutionResponse\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\x12\x18\n" +
	"\astarted\x18\x02 \x01(\bR\astarted\"\xe3\x01\n" +
	"\x1fRemoveSignalMutableStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12\x1d\n" +
	"\n" +
	"request_id\x18\x03 \x01(\tR\trequestId:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_id\"\"\n" +
	" RemoveSignalMutableStateResponse\"\x8a\x03\n" +
	"!TerminateWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12o\n" +
	"\x11terminate_request\x18\x02 \x01(\v2B.temporal.api.workflowservice.v1.TerminateWorkflowExecutionRequestR\x10terminateRequest\x12i\n" +
	"\x1bexternal_workflow_execution\x18\x03 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x19externalWorkflowExecution\x12.\n" +
	"\x13child_workflow_only\x18\x04 \x01(\bR\x11childWorkflowOnly:6\x92\xc4\x032*0terminate_request.workflow_execution.workflow_id\"$\n" +
	"\"TerminateWorkflowExecutionResponse\"\xfb\x01\n" +
	"\x1eDeleteWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x120\n" +
	"\x14closed_workflow_only\x18\x04 \x01(\bR\x12closedWorkflowOnly:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_idJ\x04\b\x03\x10\x04\"!\n" +
	"\x1fDeleteWorkflowExecutionResponse\"\xdb\x01\n" +
	"\x1dResetWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12c\n" +
	"\rreset_request\x18\x02 \x01(\v2>.temporal.api.workflowservice.v1.ResetWorkflowExecutionRequestR\fresetRequest:2\x92\xc4\x03.*,reset_request.workflow_execution.workflow_id\"7\n" +
	"\x1eResetWorkflowExecutionResponse\x12\x15\n" +
	"\x06run_id\x18\x01 \x01(\tR\x05runId\"\xc8\x03\n" +
	"%RequestCancelWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12m\n" +
	"\x0ecancel_request\x18\x02 \x01(\v2F.temporal.api.workflowservice.v1.RequestCancelWorkflowExecutionRequestR\rcancelRequest\x12=\n" +
	"\x1bexternal_initiated_event_id\x18\x03 \x01(\x03R\x18externalInitiatedEventId\x12i\n" +
	"\x1bexternal_workflow_execution\x18\x04 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x19externalWorkflowExecution\x12.\n" +
	"\x13child_workflow_only\x18\x05 \x01(\bR\x11childWorkflowOnly:3\x92\xc4\x03/*-cancel_request.workflow_execution.workflow_id\"(\n" +
	"&RequestCancelWorkflowExecutionResponse\"\x8f\x03\n" +
	"\x1bScheduleWorkflowTaskRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x123\n" +
	"\x16is_first_workflow_task\x18\x03 \x01(\bR\x13isFirstWorkflowTask\x12J\n" +
	"\vchild_clock\x18\x04 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\n" +
	"childClock\x12L\n" +
	"\fparent_clock\x18\x05 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\vparentClock:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_id\"\x1e\n" +
	"\x1cScheduleWorkflowTaskResponse\"\x8d\x02\n" +
	"'VerifyFirstWorkflowTaskScheduledRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12?\n" +
	"\x05clock\x18\x03 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_id\"*\n" +
	"(VerifyFirstWorkflowTaskScheduledResponse\"\xd4\x04\n" +
	"$RecordChildExecutionCompletedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12T\n" +
	"\x10parent_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x0fparentExecution\x12.\n" +
	"\x13parent_initiated_id\x18\x03 \x01(\x03R\x11parentInitiatedId\x12R\n" +
	"\x0fchild_execution\x18\x04 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x0echildExecution\x12P\n" +
	"\x10completion_event\x18\x05 \x01(\v2%.temporal.api.history.v1.HistoryEventR\x0fcompletionEvent\x12?\n" +
	"\x05clock\x18\x06 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x128\n" +
	"\x18parent_initiated_version\x18\a \x01(\x03R\x16parentInitiatedVersion\x12>\n" +
	"\x1cchild_first_execution_run_id\x18\b \x01(\tR\x18childFirstExecutionRunId:\"\x92\xc4\x03\x1e*\x1cparent_execution.workflow_id\"'\n" +
	"%RecordChildExecutionCompletedResponse\"\xcb\x03\n" +
	"-VerifyChildExecutionCompletionRecordedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12T\n" +
	"\x10parent_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x0fparentExecution\x12R\n" +
	"\x0fchild_execution\x18\x03 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x0echildExecution\x12.\n" +
	"\x13parent_initiated_id\x18\x04 \x01(\x03R\x11parentInitiatedId\x128\n" +
	"\x18parent_initiated_version\x18\x05 \x01(\x03R\x16parentInitiatedVersion\x12?\n" +
	"\x05clock\x18\x06 \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock:\"\x92\xc4\x03\x1e*\x1cparent_execution.workflow_id\"0\n" +
	".VerifyChildExecutionCompletionRecordedResponse\"\xc7\x01\n" +
	" DescribeWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12[\n" +
	"\arequest\x18\x02 \x01(\v2A.temporal.api.workflowservice.v1.DescribeWorkflowExecutionRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\xb3\x06\n" +
	"!DescribeWorkflowExecutionResponse\x12\\\n" +
	"\x10execution_config\x18\x01 \x01(\v21.temporal.api.workflow.v1.WorkflowExecutionConfigR\x0fexecutionConfig\x12g\n" +
	"\x17workflow_execution_info\x18\x02 \x01(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\x15workflowExecutionInfo\x12\\\n" +
	"\x12pending_activities\x18\x03 \x03(\v2-.temporal.api.workflow.v1.PendingActivityInfoR\x11pendingActivities\x12^\n" +
	"\x10pending_children\x18\x04 \x03(\v23.temporal.api.workflow.v1.PendingChildExecutionInfoR\x0fpendingChildren\x12e\n" +
	"\x15pending_workflow_task\x18\x05 \x01(\v21.temporal.api.workflow.v1.PendingWorkflowTaskInfoR\x13pendingWorkflowTask\x12D\n" +
	"\tcallbacks\x18\x06 \x03(\v2&.temporal.api.workflow.v1.CallbackInfoR\tcallbacks\x12m\n" +
	"\x18pending_nexus_operations\x18\a \x03(\v23.temporal.api.workflow.v1.PendingNexusOperationInfoR\x16pendingNexusOperations\x12m\n" +
	"\x16workflow_extended_info\x18\b \x01(\v27.temporal.api.workflow.v1.WorkflowExecutionExtendedInfoR\x14workflowExtendedInfo\"\xa9\x04\n" +
	"\x18ReplicateEventsV2Request\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12f\n" +
	"\x15version_history_items\x18\x03 \x03(\v22.temporal.server.api.history.v1.VersionHistoryItemR\x13versionHistoryItems\x128\n" +
	"\x06events\x18\x04 \x01(\v2 .temporal.api.common.v1.DataBlobR\x06events\x12F\n" +
	"\x0enew_run_events\x18\x05 \x01(\v2 .temporal.api.common.v1.DataBlobR\fnewRunEvents\x12b\n" +
	"\x13base_execution_info\x18\x06 \x01(\v22.temporal.server.api.workflow.v1.BaseExecutionInfoR\x11baseExecutionInfo\x12\x1c\n" +
	"\n" +
	"new_run_id\x18\a \x01(\tR\bnewRunId:$\x92\xc4\x03 *\x1eworkflow_execution.workflow_id\"\x1b\n" +
	"\x19ReplicateEventsV2Response\"\xfb\x01\n" +
	"\x1dReplicateWorkflowStateRequest\x12_\n" +
	"\x0eworkflow_state\x18\x01 \x01(\v28.temporal.server.api.persistence.v1.WorkflowMutableStateR\rworkflowState\x12%\n" +
	"\x0eremote_cluster\x18\x02 \x01(\tR\rremoteCluster\x12!\n" +
	"\fnamespace_id\x18\x03 \x01(\tR\vnamespaceId:/\x92\xc4\x03+*)workflow_state.execution_info.workflow_id\" \n" +
	"\x1eReplicateWorkflowStateResponse\"\xa7\x01\n" +
	"\x16SyncShardStatusRequest\x12%\n" +
	"\x0esource_cluster\x18\x01 \x01(\tR\rsourceCluster\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12;\n" +
	"\vstatus_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"statusTime:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\x19\n" +
	"\x17SyncShardStatusResponse\"\xac\v\n" +
	"\x13SyncActivityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\x12,\n" +
	"\x12scheduled_event_id\x18\x05 \x01(\x03R\x10scheduledEventId\x12A\n" +
	"\x0escheduled_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12(\n" +
	"\x10started_event_id\x18\a \x01(\x03R\x0estartedEventId\x12=\n" +
	"\fstarted_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12J\n" +
	"\x13last_heartbeat_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\x11lastHeartbeatTime\x12:\n" +
	"\adetails\x18\n" +
	" \x01(\v2 .temporal.api.common.v1.PayloadsR\adetails\x12\x18\n" +
	"\aattempt\x18\v \x01(\x05R\aattempt\x12C\n" +
	"\flast_failure\x18\f \x01(\v2 .temporal.api.failure.v1.FailureR\vlastFailure\x120\n" +
	"\x14last_worker_identity\x18\r \x01(\tR\x12lastWorkerIdentity\x12W\n" +
	"\x0fversion_history\x18\x0e \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x12b\n" +
	"\x13base_execution_info\x18\x0f \x01(\v22.temporal.server.api.workflow.v1.BaseExecutionInfoR\x11baseExecutionInfo\x121\n" +
	"\x15last_started_build_id\x18\x10 \x01(\tR\x12lastStartedBuildId\x12A\n" +
	"\x1dlast_started_redirect_counter\x18\x11 \x01(\x03R\x1alastStartedRedirectCounter\x12L\n" +
	"\x14first_scheduled_time\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\x12firstScheduledTime\x12W\n" +
	"\x1alast_attempt_complete_time\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\x17lastAttemptCompleteTime\x12\x14\n" +
	"\x05stamp\x18\x14 \x01(\x05R\x05stamp\x12\x16\n" +
	"\x06paused\x18\x15 \x01(\bR\x06paused\x12O\n" +
	"\x16retry_initial_interval\x18\x16 \x01(\v2\x19.google.protobuf.DurationR\x14retryInitialInterval\x12O\n" +
	"\x16retry_maximum_interval\x18\x17 \x01(\v2\x19.google.protobuf.DurationR\x14retryMaximumInterval\x124\n" +
	"\x16retry_maximum_attempts\x18\x18 \x01(\x05R\x14retryMaximumAttempts\x12:\n" +
	"\x19retry_backoff_coefficient\x18\x19 \x01(\x01R\x17retryBackoffCoefficient:\x11\x92\xc4\x03\r*\vworkflow_id\"\xe7\x01\n" +
	"\x15SyncActivitiesRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12`\n" +
	"\x0factivities_info\x18\x04 \x03(\v27.temporal.server.api.historyservice.v1.ActivitySyncInfoR\x0eactivitiesInfo:\x11\x92\xc4\x03\r*\vworkflow_id\"\xd7\t\n" +
	"\x10ActivitySyncInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12,\n" +
	"\x12scheduled_event_id\x18\x02 \x01(\x03R\x10scheduledEventId\x12A\n" +
	"\x0escheduled_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12(\n" +
	"\x10started_event_id\x18\x04 \x01(\x03R\x0estartedEventId\x12=\n" +
	"\fstarted_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12J\n" +
	"\x13last_heartbeat_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x11lastHeartbeatTime\x12:\n" +
	"\adetails\x18\a \x01(\v2 .temporal.api.common.v1.PayloadsR\adetails\x12\x18\n" +
	"\aattempt\x18\b \x01(\x05R\aattempt\x12C\n" +
	"\flast_failure\x18\t \x01(\v2 .temporal.api.failure.v1.FailureR\vlastFailure\x120\n" +
	"\x14last_worker_identity\x18\n" +
	" \x01(\tR\x12lastWorkerIdentity\x12W\n" +
	"\x0fversion_history\x18\v \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x121\n" +
	"\x15last_started_build_id\x18\f \x01(\tR\x12lastStartedBuildId\x12A\n" +
	"\x1dlast_started_redirect_counter\x18\r \x01(\x03R\x1alastStartedRedirectCounter\x12L\n" +
	"\x14first_scheduled_time\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\x12firstScheduledTime\x12W\n" +
	"\x1alast_attempt_complete_time\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\x17lastAttemptCompleteTime\x12\x14\n" +
	"\x05stamp\x18\x14 \x01(\x05R\x05stamp\x12\x16\n" +
	"\x06paused\x18\x15 \x01(\bR\x06paused\x12O\n" +
	"\x16retry_initial_interval\x18\x16 \x01(\v2\x19.google.protobuf.DurationR\x14retryInitialInterval\x12O\n" +
	"\x16retry_maximum_interval\x18\x17 \x01(\v2\x19.google.protobuf.DurationR\x14retryMaximumInterval\x124\n" +
	"\x16retry_maximum_attempts\x18\x18 \x01(\x05R\x14retryMaximumAttempts\x12:\n" +
	"\x19retry_backoff_coefficient\x18\x19 \x01(\x01R\x17retryBackoffCoefficient\"\x16\n" +
	"\x14SyncActivityResponse\"\xa6\x01\n" +
	"\x1bDescribeMutableStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\xf8\x01\n" +
	"\x1cDescribeMutableStateResponse\x12h\n" +
	"\x13cache_mutable_state\x18\x01 \x01(\v28.temporal.server.api.persistence.v1.WorkflowMutableStateR\x11cacheMutableState\x12n\n" +
	"\x16database_mutable_state\x18\x02 \x01(\v28.temporal.server.api.persistence.v1.WorkflowMutableStateR\x14databaseMutableState\"\xdf\x01\n" +
	"\x1aDescribeHistoryHostRequest\x12!\n" +
	"\fhost_address\x18\x01 \x01(\tR\vhostAddress\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12!\n" +
	"\fnamespace_id\x18\x03 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x04 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution:\x06\x92\xc4\x03\x02\b\x01\"\xde\x01\n" +
	"\x1bDescribeHistoryHostResponse\x12#\n" +
	"\rshards_number\x18\x01 \x01(\x05R\fshardsNumber\x12\x1b\n" +
	"\tshard_ids\x18\x02 \x03(\x05R\bshardIds\x12]\n" +
	"\x0fnamespace_cache\x18\x03 \x01(\v24.temporal.server.api.namespace.v1.NamespaceCacheInfoR\x0enamespaceCache\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddressJ\x04\b\x04\x10\x05\">\n" +
	"\x11CloseShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\x14\n" +
	"\x12CloseShardResponse\"<\n" +
	"\x0fGetShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"`\n" +
	"\x10GetShardResponse\x12L\n" +
	"\n" +
	"shard_info\x18\x01 \x01(\v2-.temporal.server.api.persistence.v1.ShardInfoR\tshardInfo\"\xb8\x01\n" +
	"\x11RemoveTaskRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\x05R\bcategory\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\x03R\x06taskId\x12C\n" +
	"\x0fvisibility_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0evisibilityTime:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\x14\n" +
	"\x12RemoveTaskResponse\"\x98\x01\n" +
	"\x1dGetReplicationMessagesRequest\x12L\n" +
	"\x06tokens\x18\x01 \x03(\v24.temporal.server.api.replication.v1.ReplicationTokenR\x06tokens\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName:\x06\x92\xc4\x03\x02\b\x01\"\x9c\x02\n" +
	"\x1eGetReplicationMessagesResponse\x12\x7f\n" +
	"\x0eshard_messages\x18\x01 \x03(\v2X.temporal.server.api.historyservice.v1.GetReplicationMessagesResponse.ShardMessagesEntryR\rshardMessages\x1ay\n" +
	"\x12ShardMessagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12M\n" +
	"\x05value\x18\x02 \x01(\v27.temporal.server.api.replication.v1.ReplicationMessagesR\x05value:\x028\x01\"\x8c\x01\n" +
	" GetDLQReplicationMessagesRequest\x12V\n" +
	"\n" +
	"task_infos\x18\x01 \x03(\v27.temporal.server.api.replication.v1.ReplicationTaskInfoR\ttaskInfos:\x10\x92\xc4\x03\f:\n" +
	"task_infos\"\x85\x01\n" +
	"!GetDLQReplicationMessagesResponse\x12`\n" +
	"\x11replication_tasks\x18\x01 \x03(\v23.temporal.server.api.replication.v1.ReplicationTaskR\x10replicationTasks\"\xaf\x01\n" +
	"\x14QueryWorkflowRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12O\n" +
	"\arequest\x18\x02 \x01(\v25.temporal.api.workflowservice.v1.QueryWorkflowRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"k\n" +
	"\x15QueryWorkflowResponse\x12R\n" +
	"\bresponse\x18\x01 \x01(\v26.temporal.api.workflowservice.v1.QueryWorkflowResponseR\bresponse\"\xbc\x01\n" +
	"\x14ReapplyEventsRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12S\n" +
	"\arequest\x18\x02 \x01(\v29.temporal.server.api.adminservice.v1.ReapplyEventsRequestR\arequest:,\x92\xc4\x03(*&request.workflow_execution.workflow_id\"\x17\n" +
	"\x15ReapplyEventsResponse\"\xbd\x02\n" +
	"\x15GetDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId\x12*\n" +
	"\x11maximum_page_size\x18\x05 \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\x06 \x01(\fR\rnextPageToken:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\xd8\x02\n" +
	"\x16GetDLQMessagesResponse\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12`\n" +
	"\x11replication_tasks\x18\x02 \x03(\v23.temporal.server.api.replication.v1.ReplicationTaskR\x10replicationTasks\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken\x12m\n" +
	"\x16replication_tasks_info\x18\x04 \x03(\v27.temporal.server.api.replication.v1.ReplicationTaskInfoR\x14replicationTasksInfo\"\xeb\x01\n" +
	"\x17PurgeDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\x1a\n" +
	"\x18PurgeDLQMessagesResponse\"\xbf\x02\n" +
	"\x17MergeDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId\x12*\n" +
	"\x11maximum_page_size\x18\x05 \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\x06 \x01(\fR\rnextPageToken:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"B\n" +
	"\x18MergeDLQMessagesResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\"\xc1\x01\n" +
	"\x1bRefreshWorkflowTasksRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12Z\n" +
	"\arequest\x18\x02 \x01(\v2@.temporal.server.api.adminservice.v1.RefreshWorkflowTasksRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\x1e\n" +
	"\x1cRefreshWorkflowTasksResponse\"\xb5\x01\n" +
	"*GenerateLastHistoryReplicationTasksRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\x8a\x01\n" +
	"+GenerateLastHistoryReplicationTasksResponse\x124\n" +
	"\x16state_transition_count\x18\x01 \x01(\x03R\x14stateTransitionCount\x12%\n" +
	"\x0ehistory_length\x18\x02 \x01(\x03R\rhistoryLength\"N\n" +
	"\x1bGetReplicationStatusRequest\x12'\n" +
	"\x0fremote_clusters\x18\x01 \x03(\tR\x0eremoteClusters:\x06\x92\xc4\x03\x02\b\x01\"u\n" +
	"\x1cGetReplicationStatusResponse\x12U\n" +
	"\x06shards\x18\x01 \x03(\v2=.temporal.server.api.historyservice.v1.ShardReplicationStatusR\x06shards\"\xb4\x06\n" +
	"\x16ShardReplicationStatus\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x125\n" +
	"\x17max_replication_task_id\x18\x02 \x01(\x03R\x14maxReplicationTaskId\x12D\n" +
	"\x10shard_local_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0eshardLocalTime\x12z\n" +
	"\x0fremote_clusters\x18\x04 \x03(\v2Q.temporal.server.api.historyservice.v1.ShardReplicationStatus.RemoteClustersEntryR\x0eremoteClusters\x12\x86\x01\n" +
	"\x13handover_namespaces\x18\x05 \x03(\v2U.temporal.server.api.historyservice.v1.ShardReplicationStatus.HandoverNamespacesEntryR\x12handoverNamespaces\x12j\n" +
	"$max_replication_task_visibility_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR maxReplicationTaskVisibilityTime\x1a\x8a\x01\n" +
	"\x13RemoteClustersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12]\n" +
	"\x05value\x18\x02 \x01(\v2G.temporal.server.api.historyservice.v1.ShardReplicationStatusPerClusterR\x05value:\x028\x01\x1a\x83\x01\n" +
	"\x17HandoverNamespacesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12R\n" +
	"\x05value\x18\x02 \x01(\v2<.temporal.server.api.historyservice.v1.HandoverNamespaceInfoR\x05value:\x028\x01\"X\n" +
	"\x15HandoverNamespaceInfo\x12?\n" +
	"\x1chandover_replication_task_id\x18\x01 \x01(\x03R\x19handoverReplicationTaskId\"\x9f\x01\n" +
	" ShardReplicationStatusPerCluster\x12\"\n" +
	"\racked_task_id\x18\x01 \x01(\x03R\vackedTaskId\x12W\n" +
	"\x1aacked_task_visibility_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x17ackedTaskVisibilityTime\"\xa5\x01\n" +
	"\x1aRebuildMutableStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\x1d\n" +
	"\x1bRebuildMutableStateResponse\"\xe3\x02\n" +
	"\x1eImportWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12I\n" +
	"\x0fhistory_batches\x18\x03 \x03(\v2 .temporal.api.common.v1.DataBlobR\x0ehistoryBatches\x12W\n" +
	"\x0fversion_history\x18\x04 \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x12\x14\n" +
	"\x05token\x18\x05 \x01(\fR\x05token:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"^\n" +
	"\x1fImportWorkflowExecutionResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\fR\x05token\x12%\n" +
	"\x0eevents_applied\x18\x02 \x01(\bR\reventsApplied\"\xc8\x02\n" +
	"%DeleteWorkflowVisibilityRecordRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12J\n" +
	"\x13workflow_start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x11workflowStartTime\x12J\n" +
	"\x13workflow_close_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x11workflowCloseTime:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"(\n" +
	"&DeleteWorkflowVisibilityRecordResponse\"\xcc\x01\n" +
	"\x1eUpdateWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12Y\n" +
	"\arequest\x18\x02 \x01(\v2?.temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequestR\arequest:,\x92\xc4\x03(*&request.workflow_execution.workflow_id\"\x7f\n" +
	"\x1fUpdateWorkflowExecutionResponse\x12\\\n" +
	"\bresponse\x18\x01 \x01(\v2@.temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponseR\bresponse\"\xb2\x01\n" +
	"(StreamWorkflowReplicationMessagesRequest\x12p\n" +
	"\x16sync_replication_state\x18\x01 \x01(\v28.temporal.server.api.replication.v1.SyncReplicationStateH\x00R\x14syncReplicationState:\x06\x92\xc4\x03\x02\b\x01B\f\n" +
	"\n" +
	"attributes\"\x98\x01\n" +
	")StreamWorkflowReplicationMessagesResponse\x12]\n" +
	"\bmessages\x18\x01 \x01(\v2?.temporal.server.api.replication.v1.WorkflowReplicationMessagesH\x00R\bmessagesB\f\n" +
	"\n" +
	"attributes\"\xdf\x01\n" +
	"\"PollWorkflowExecutionUpdateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12]\n" +
	"\arequest\x18\x02 \x01(\v2C.temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateRequestR\arequest:7\x92\xc4\x033*1request.update_ref.workflow_execution.workflow_id\"\x87\x01\n" +
	"#PollWorkflowExecutionUpdateResponse\x12`\n" +
	"\bresponse\x18\x01 \x01(\v2D.temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateResponseR\bresponse\"\xcb\x01\n" +
	"\"GetWorkflowExecutionHistoryRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12]\n" +
	"\arequest\x18\x02 \x01(\v2C.temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\xc3\x01\n" +
	"#GetWorkflowExecutionHistoryResponse\x12`\n" +
	"\bresponse\x18\x01 \x01(\v2D.temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponseR\bresponse\x12:\n" +
	"\ahistory\x18\x02 \x01(\v2 .temporal.api.history.v1.HistoryR\ahistory\"\xa8\x01\n" +
	"*GetWorkflowExecutionHistoryResponseWithRaw\x12`\n" +
	"\bresponse\x18\x01 \x01(\v2D.temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponseR\bresponse\x12\x18\n" +
	"\ahistory\x18\x02 \x03(\fR\ahistory\"\xd9\x01\n" +
	")GetWorkflowExecutionHistoryReverseRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12d\n" +
	"\arequest\x18\x02 \x01(\v2J.temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\x95\x01\n" +
	"*GetWorkflowExecutionHistoryReverseResponse\x12g\n" +
	"\bresponse\x18\x01 \x01(\v2K.temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseResponseR\bresponse\"\xd9\x01\n" +
	"'GetWorkflowExecutionRawHistoryV2Request\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12f\n" +
	"\arequest\x18\x02 \x01(\v2L.temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2RequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\x95\x01\n" +
	"(GetWorkflowExecutionRawHistoryV2Response\x12i\n" +
	"\bresponse\x18\x01 \x01(\v2M.temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2ResponseR\bresponse\"\xd5\x01\n" +
	"%GetWorkflowExecutionRawHistoryRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12d\n" +
	"\arequest\x18\x02 \x01(\v2J.temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\x91\x01\n" +
	"&GetWorkflowExecutionRawHistoryResponse\x12g\n" +
	"\bresponse\x18\x01 \x01(\v2K.temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponseR\bresponse\"\xcc\x01\n" +
	"#ForceDeleteWorkflowExecutionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12]\n" +
	"\arequest\x18\x02 \x01(\v2C.temporal.server.api.adminservice.v1.DeleteWorkflowExecutionRequestR\arequest:#\x92\xc4\x03\x1f*\x1drequest.execution.workflow_id\"\x88\x01\n" +
	"$ForceDeleteWorkflowExecutionResponse\x12`\n" +
	"\bresponse\x18\x01 \x01(\v2D.temporal.server.api.adminservice.v1.DeleteWorkflowExecutionResponseR\bresponse\"\xa8\x01\n" +
	"\x12GetDLQTasksRequest\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken:\x06\x92\xc4\x03\x02\x10\x01\"\x89\x01\n" +
	"\x13GetDLQTasksResponse\x12J\n" +
	"\tdlq_tasks\x18\x01 \x03(\v2-.temporal.server.api.common.v1.HistoryDLQTaskR\bdlqTasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\xdc\x01\n" +
	"\x15DeleteDLQTasksRequest\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12t\n" +
	"\x1binclusive_max_task_metadata\x18\x02 \x01(\v25.temporal.server.api.common.v1.HistoryDLQTaskMetadataR\x18inclusiveMaxTaskMetadata:\x06\x92\xc4\x03\x02\x10\x01\"C\n" +
	"\x16DeleteDLQTasksResponse\x12)\n" +
	"\x10messages_deleted\x18\x01 \x01(\x03R\x0fmessagesDeleted\"\x7f\n" +
	"\x11ListQueuesRequest\x12\x1d\n" +
	"\n" +
	"queue_type\x18\x01 \x01(\x05R\tqueueType\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken:\x06\x92\xc4\x03\x02\x10\x01\"\xea\x01\n" +
	"\x12ListQueuesResponse\x12[\n" +
	"\x06queues\x18\x01 \x03(\v2C.temporal.server.api.historyservice.v1.ListQueuesResponse.QueueInfoR\x06queues\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\x1aO\n" +
	"\tQueueInfo\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12#\n" +
	"\rmessage_count\x18\x02 \x01(\x03R\fmessageCount\"\xee\x01\n" +
	"\x0fAddTasksRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x12Q\n" +
	"\x05tasks\x18\x02 \x03(\v2;.temporal.server.api.historyservice.v1.AddTasksRequest.TaskR\x05tasks\x1a]\n" +
	"\x04Task\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x05R\n" +
	"categoryId\x124\n" +
	"\x04blob\x18\x02 \x01(\v2 .temporal.api.common.v1.DataBlobR\x04blob:\x0e\x92\xc4\x03\n" +
	"\x1a\bshard_id\"\x12\n" +
	"\x10AddTasksResponse\"\x82\x01\n" +
	"\x10ListTasksRequest\x12V\n" +
	"\arequest\x18\x01 \x01(\v2<.temporal.server.api.adminservice.v1.ListHistoryTasksRequestR\arequest:\x16\x92\xc4\x03\x12\x1a\x10request.shard_id\"n\n" +
	"\x11ListTasksResponse\x12Y\n" +
	"\bresponse\x18\x01 \x01(\v2=.temporal.server.api.adminservice.v1.ListHistoryTasksResponseR\bresponse\"\xe0\x03\n" +
	"\x1dCompleteNexusOperationRequest\x12V\n" +
	"\n" +
	"completion\x18\x01 \x01(\v26.temporal.server.api.token.v1.NexusOperationCompletionR\n" +
	"completion\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12;\n" +
	"\asuccess\x18\x03 \x01(\v2\x1f.temporal.api.common.v1.PayloadH\x00R\asuccess\x12:\n" +
	"\afailure\x18\x04 \x01(\v2\x1e.temporal.api.nexus.v1.FailureH\x00R\afailure\x12'\n" +
	"\x0foperation_token\x18\x05 \x01(\tR\x0eoperationToken\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x122\n" +
	"\x05links\x18\a \x03(\v2\x1c.temporal.api.common.v1.LinkR\x05links:5\x92\xc4\x031\"\x17completion.namespace_id*\x16completion.workflow_idB\t\n" +
	"\aoutcome\" \n" +
	"\x1eCompleteNexusOperationResponse\"\x8d\x02\n" +
	"\x1fInvokeStateMachineMethodRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12E\n" +
	"\x03ref\x18\x04 \x01(\v23.temporal.server.api.persistence.v1.StateMachineRefR\x03ref\x12\x1f\n" +
	"\vmethod_name\x18\x05 \x01(\tR\n" +
	"methodName\x12\x14\n" +
	"\x05input\x18\x06 \x01(\fR\x05input:\x11\x92\xc4\x03\r*\vworkflow_id\":\n" +
	" InvokeStateMachineMethodResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\fR\x06output\"C\n" +
	"\x16DeepHealthCheckRequest\x12!\n" +
	"\fhost_address\x18\x01 \x01(\tR\vhostAddress:\x06\x92\xc4\x03\x02\b\x01\"Z\n" +
	"\x17DeepHealthCheckResponse\x12?\n" +
	"\x05state\x18\x01 \x01(\x0e2).temporal.server.api.enums.v1.HealthStateR\x05state\"\x9a\x03\n" +
	"\x18SyncWorkflowStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12j\n" +
	"\x14versioned_transition\x18\x03 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x13versionedTransition\x12]\n" +
	"\x11version_histories\x18\x04 \x01(\v20.temporal.server.api.history.v1.VersionHistoriesR\x10versionHistories\x12*\n" +
	"\x11target_cluster_id\x18\x05 \x01(\x05R\x0ftargetClusterId:\x1b\x92\xc4\x03\x17*\x15execution.workflow_id\"\xb9\x01\n" +
	"\x19SyncWorkflowStateResponse\x12\x83\x01\n" +
	"\x1dversioned_transition_artifact\x18\x05 \x01(\v2?.temporal.server.api.replication.v1.VersionedTransitionArtifactR\x1bversionedTransitionArtifactJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05\"\xd3\x01\n" +
	"\x1cUpdateActivityOptionsRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12d\n" +
	"\x0eupdate_request\x18\x02 \x01(\v2=.temporal.api.workflowservice.v1.UpdateActivityOptionsRequestR\rupdateRequest:*\x92\xc4\x03&*$update_request.execution.workflow_id\"u\n" +
	"\x1dUpdateActivityOptionsResponse\x12T\n" +
	"\x10activity_options\x18\x01 \x01(\v2).temporal.api.activity.v1.ActivityOptionsR\x0factivityOptions\"\xc9\x01\n" +
	"\x14PauseActivityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12`\n" +
	"\x10frontend_request\x18\x02 \x01(\v25.temporal.api.workflowservice.v1.PauseActivityRequestR\x0ffrontendRequest:,\x92\xc4\x03(*&frontend_request.execution.workflow_id\"\x17\n" +
	"\x15PauseActivityResponse\"\xcd\x01\n" +
	"\x16UnpauseActivityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12b\n" +
	"\x10frontend_request\x18\x02 \x01(\v27.temporal.api.workflowservice.v1.UnpauseActivityRequestR\x0ffrontendRequest:,\x92\xc4\x03(*&frontend_request.execution.workflow_id\"\x19\n" +
	"\x17UnpauseActivityResponse\"\xc9\x01\n" +
	"\x14ResetActivityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12`\n" +
	"\x10frontend_request\x18\x02 \x01(\v25.temporal.api.workflowservice.v1.ResetActivityRequestR\x0ffrontendRequest:,\x92\xc4\x03(*&frontend_request.execution.workflow_id\"\x17\n" +
	"\x15ResetActivityResponse\"\xee\x01\n" +
	"%UpdateWorkflowExecutionOptionsRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12m\n" +
	"\x0eupdate_request\x18\x02 \x01(\v2F.temporal.api.workflowservice.v1.UpdateWorkflowExecutionOptionsRequestR\rupdateRequest:3\x92\xc4\x03/*-update_request.workflow_execution.workflow_id\"\x9a\x01\n" +
	"&UpdateWorkflowExecutionOptionsResponse\x12p\n" +
	"\x1aworkflow_execution_options\x18\x01 \x01(\v22.temporal.api.workflow.v1.WorkflowExecutionOptionsR\x18workflowExecutionOptions:t\n" +
	"\arouting\x12\x1f.google.protobuf.MessageOptions\x18\xc28 \x01(\v25.temporal.server.api.historyservice.v1.RoutingOptionsR\arouting\x88\x01\x01B<Z:go.temporal.io/server/api/historyservice/v1;historyserviceb\x06proto3"

var (
	file_temporal_server_api_historyservice_v1_request_response_proto_rawDescOnce sync.Once
	file_temporal_server_api_historyservice_v1_request_response_proto_rawDescData []byte
)

func file_temporal_server_api_historyservice_v1_request_response_proto_rawDescGZIP() []byte {
	file_temporal_server_api_historyservice_v1_request_response_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_historyservice_v1_request_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_historyservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_historyservice_v1_request_response_proto_rawDesc)))
	})
	return file_temporal_server_api_historyservice_v1_request_response_proto_rawDescData
}

var file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes = make([]protoimpl.MessageInfo, 159)
var file_temporal_server_api_historyservice_v1_request_response_proto_goTypes = []any{
	(*RoutingOptions)(nil),                                  // 0: temporal.server.api.historyservice.v1.RoutingOptions
	(*StartWorkflowExecutionRequest)(nil),                   // 1: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest
	(*StartWorkflowExecutionResponse)(nil),                  // 2: temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse
	(*GetMutableStateRequest)(nil),                          // 3: temporal.server.api.historyservice.v1.GetMutableStateRequest
	(*GetMutableStateResponse)(nil),                         // 4: temporal.server.api.historyservice.v1.GetMutableStateResponse
	(*PollMutableStateRequest)(nil),                         // 5: temporal.server.api.historyservice.v1.PollMutableStateRequest
	(*PollMutableStateResponse)(nil),                        // 6: temporal.server.api.historyservice.v1.PollMutableStateResponse
	(*ResetStickyTaskQueueRequest)(nil),                     // 7: temporal.server.api.historyservice.v1.ResetStickyTaskQueueRequest
	(*ResetStickyTaskQueueResponse)(nil),                    // 8: temporal.server.api.historyservice.v1.ResetStickyTaskQueueResponse
	(*ExecuteMultiOperationRequest)(nil),                    // 9: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest
	(*ExecuteMultiOperationResponse)(nil),                   // 10: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse
	(*RecordWorkflowTaskStartedRequest)(nil),                // 11: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest
	(*RecordWorkflowTaskStartedResponse)(nil),               // 12: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse
	(*RecordWorkflowTaskStartedResponseWithRawHistory)(nil), // 13: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory
	(*RecordActivityTaskStartedRequest)(nil),                // 14: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest
	(*RecordActivityTaskStartedResponse)(nil),               // 15: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse
	(*RespondWorkflowTaskCompletedRequest)(nil),             // 16: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedRequest
	(*RespondWorkflowTaskCompletedResponse)(nil),            // 17: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse
	(*RespondWorkflowTaskFailedRequest)(nil),                // 18: temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedRequest
	(*RespondWorkflowTaskFailedResponse)(nil),               // 19: temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedResponse
	(*IsWorkflowTaskValidRequest)(nil),                      // 20: temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest
	(*IsWorkflowTaskValidResponse)(nil),                     // 21: temporal.server.api.historyservice.v1.IsWorkflowTaskValidResponse
	(*RecordActivityTaskHeartbeatRequest)(nil),              // 22: temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatRequest
	(*RecordActivityTaskHeartbeatResponse)(nil),             // 23: temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatResponse
	(*RespondActivityTaskCompletedRequest)(nil),             // 24: temporal.server.api.historyservice.v1.RespondActivityTaskCompletedRequest
	(*RespondActivityTaskCompletedResponse)(nil),            // 25: temporal.server.api.historyservice.v1.RespondActivityTaskCompletedResponse
	(*RespondActivityTaskFailedRequest)(nil),                // 26: temporal.server.api.historyservice.v1.RespondActivityTaskFailedRequest
	(*RespondActivityTaskFailedResponse)(nil),               // 27: temporal.server.api.historyservice.v1.RespondActivityTaskFailedResponse
	(*RespondActivityTaskCanceledRequest)(nil),              // 28: temporal.server.api.historyservice.v1.RespondActivityTaskCanceledRequest
	(*RespondActivityTaskCanceledResponse)(nil),             // 29: temporal.server.api.historyservice.v1.RespondActivityTaskCanceledResponse
	(*IsActivityTaskValidRequest)(nil),                      // 30: temporal.server.api.historyservice.v1.IsActivityTaskValidRequest
	(*IsActivityTaskValidResponse)(nil),                     // 31: temporal.server.api.historyservice.v1.IsActivityTaskValidResponse
	(*SignalWorkflowExecutionRequest)(nil),                  // 32: temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest
	(*SignalWorkflowExecutionResponse)(nil),                 // 33: temporal.server.api.historyservice.v1.SignalWorkflowExecutionResponse
	(*SignalWithStartWorkflowExecutionRequest)(nil),         // 34: temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionRequest
	(*SignalWithStartWorkflowExecutionResponse)(nil),        // 35: temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionResponse
	(*RemoveSignalMutableStateRequest)(nil),                 // 36: temporal.server.api.historyservice.v1.RemoveSignalMutableStateRequest
	(*RemoveSignalMutableStateResponse)(nil),                // 37: temporal.server.api.historyservice.v1.RemoveSignalMutableStateResponse
	(*TerminateWorkflowExecutionRequest)(nil),               // 38: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest
	(*TerminateWorkflowExecutionResponse)(nil),              // 39: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionResponse
	(*DeleteWorkflowExecutionRequest)(nil),                  // 40: temporal.server.api.historyservice.v1.DeleteWorkflowExecutionRequest
	(*DeleteWorkflowExecutionResponse)(nil),                 // 41: temporal.server.api.historyservice.v1.DeleteWorkflowExecutionResponse
	(*ResetWorkflowExecutionRequest)(nil),                   // 42: temporal.server.api.historyservice.v1.ResetWorkflowExecutionRequest
	(*ResetWorkflowExecutionResponse)(nil),                  // 43: temporal.server.api.historyservice.v1.ResetWorkflowExecutionResponse
	(*RequestCancelWorkflowExecutionRequest)(nil),           // 44: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest
	(*RequestCancelWorkflowExecutionResponse)(nil),          // 45: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionResponse
	(*ScheduleWorkflowTaskRequest)(nil),                     // 46: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest
	(*ScheduleWorkflowTaskResponse)(nil),                    // 47: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskResponse
	(*VerifyFirstWorkflowTaskScheduledRequest)(nil),         // 48: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest
	(*VerifyFirstWorkflowTaskScheduledResponse)(nil),        // 49: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledResponse
	(*RecordChildExecutionCompletedRequest)(nil),            // 50: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest
	(*RecordChildExecutionCompletedResponse)(nil),           // 51: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedResponse
	(*VerifyChildExecutionCompletionRecordedRequest)(nil),   // 52: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest
	(*VerifyChildExecutionCompletionRecordedResponse)(nil),  // 53: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedResponse
	(*DescribeWorkflowExecutionRequest)(nil),                // 54: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionRequest
	(*DescribeWorkflowExecutionResponse)(nil),               // 55: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse
	(*ReplicateEventsV2Request)(nil),                        // 56: temporal.server.api.historyservice.v1.ReplicateEventsV2Request
	(*ReplicateEventsV2Response)(nil),                       // 57: temporal.server.api.historyservice.v1.ReplicateEventsV2Response
	(*ReplicateWorkflowStateRequest)(nil),                   // 58: temporal.server.api.historyservice.v1.ReplicateWorkflowStateRequest
	(*ReplicateWorkflowStateResponse)(nil),                  // 59: temporal.server.api.historyservice.v1.ReplicateWorkflowStateResponse
	(*SyncShardStatusRequest)(nil),                          // 60: temporal.server.api.historyservice.v1.SyncShardStatusRequest
	(*SyncShardStatusResponse)(nil),                         // 61: temporal.server.api.historyservice.v1.SyncShardStatusResponse
	(*SyncActivityRequest)(nil),                             // 62: temporal.server.api.historyservice.v1.SyncActivityRequest
	(*SyncActivitiesRequest)(nil),                           // 63: temporal.server.api.historyservice.v1.SyncActivitiesRequest
	(*ActivitySyncInfo)(nil),                                // 64: temporal.server.api.historyservice.v1.ActivitySyncInfo
	(*SyncActivityResponse)(nil),                            // 65: temporal.server.api.historyservice.v1.SyncActivityResponse
	(*DescribeMutableStateRequest)(nil),                     // 66: temporal.server.api.historyservice.v1.DescribeMutableStateRequest
	(*DescribeMutableStateResponse)(nil),                    // 67: temporal.server.api.historyservice.v1.DescribeMutableStateResponse
	(*DescribeHistoryHostRequest)(nil),                      // 68: temporal.server.api.historyservice.v1.DescribeHistoryHostRequest
	(*DescribeHistoryHostResponse)(nil),                     // 69: temporal.server.api.historyservice.v1.DescribeHistoryHostResponse
	(*CloseShardRequest)(nil),                               // 70: temporal.server.api.historyservice.v1.CloseShardRequest
	(*CloseShardResponse)(nil),                              // 71: temporal.server.api.historyservice.v1.CloseShardResponse
	(*GetShardRequest)(nil),                                 // 72: temporal.server.api.historyservice.v1.GetShardRequest
	(*GetShardResponse)(nil),                                // 73: temporal.server.api.historyservice.v1.GetShardResponse
	(*RemoveTaskRequest)(nil),                               // 74: temporal.server.api.historyservice.v1.RemoveTaskRequest
	(*RemoveTaskResponse)(nil),                              // 75: temporal.server.api.historyservice.v1.RemoveTaskResponse
	(*GetReplicationMessagesRequest)(nil),                   // 76: temporal.server.api.historyservice.v1.GetReplicationMessagesRequest
	(*GetReplicationMessagesResponse)(nil),                  // 77: temporal.server.api.historyservice.v1.GetReplicationMessagesResponse
	(*GetDLQReplicationMessagesRequest)(nil),                // 78: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesRequest
	(*GetDLQReplicationMessagesResponse)(nil),               // 79: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesResponse
	(*QueryWorkflowRequest)(nil),                            // 80: temporal.server.api.historyservice.v1.QueryWorkflowRequest
	(*QueryWorkflowResponse)(nil),                           // 81: temporal.server.api.historyservice.v1.QueryWorkflowResponse
	(*ReapplyEventsRequest)(nil),                            // 82: temporal.server.api.historyservice.v1.ReapplyEventsRequest
	(*ReapplyEventsResponse)(nil),                           // 83: temporal.server.api.historyservice.v1.ReapplyEventsResponse
	(*GetDLQMessagesRequest)(nil),                           // 84: temporal.server.api.historyservice.v1.GetDLQMessagesRequest
	(*GetDLQMessagesResponse)(nil),                          // 85: temporal.server.api.historyservice.v1.GetDLQMessagesResponse
	(*PurgeDLQMessagesRequest)(nil),                         // 86: temporal.server.api.historyservice.v1.PurgeDLQMessagesRequest
	(*PurgeDLQMessagesResponse)(nil),                        // 87: temporal.server.api.historyservice.v1.PurgeDLQMessagesResponse
	(*MergeDLQMessagesRequest)(nil),                         // 88: temporal.server.api.historyservice.v1.MergeDLQMessagesRequest
	(*MergeDLQMessagesResponse)(nil),                        // 89: temporal.server.api.historyservice.v1.MergeDLQMessagesResponse
	(*RefreshWorkflowTasksRequest)(nil),                     // 90: temporal.server.api.historyservice.v1.RefreshWorkflowTasksRequest
	(*RefreshWorkflowTasksResponse)(nil),                    // 91: temporal.server.api.historyservice.v1.RefreshWorkflowTasksResponse
	(*GenerateLastHistoryReplicationTasksRequest)(nil),      // 92: temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksRequest
	(*GenerateLastHistoryReplicationTasksResponse)(nil),     // 93: temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksResponse
	(*GetReplicationStatusRequest)(nil),                     // 94: temporal.server.api.historyservice.v1.GetReplicationStatusRequest
	(*GetReplicationStatusResponse)(nil),                    // 95: temporal.server.api.historyservice.v1.GetReplicationStatusResponse
	(*ShardReplicationStatus)(nil),                          // 96: temporal.server.api.historyservice.v1.ShardReplicationStatus
	(*HandoverNamespaceInfo)(nil),                           // 97: temporal.server.api.historyservice.v1.HandoverNamespaceInfo
	(*ShardReplicationStatusPerCluster)(nil),                // 98: temporal.server.api.historyservice.v1.ShardReplicationStatusPerCluster
	(*RebuildMutableStateRequest)(nil),                      // 99: temporal.server.api.historyservice.v1.RebuildMutableStateRequest
	(*RebuildMutableStateResponse)(nil),                     // 100: temporal.server.api.historyservice.v1.RebuildMutableStateResponse
	(*ImportWorkflowExecutionRequest)(nil),                  // 101: temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest
	(*ImportWorkflowExecutionResponse)(nil),                 // 102: temporal.server.api.historyservice.v1.ImportWorkflowExecutionResponse
	(*DeleteWorkflowVisibilityRecordRequest)(nil),           // 103: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest
	(*DeleteWorkflowVisibilityRecordResponse)(nil),          // 104: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordResponse
	(*UpdateWorkflowExecutionRequest)(nil),                  // 105: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest
	(*UpdateWorkflowExecutionResponse)(nil),                 // 106: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse
	(*StreamWorkflowReplicationMessagesRequest)(nil),        // 107: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesRequest
	(*StreamWorkflowReplicationMessagesResponse)(nil),       // 108: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesResponse
	(*PollWorkflowExecutionUpdateRequest)(nil),              // 109: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateRequest
	(*PollWorkflowExecutionUpdateResponse)(nil),             // 110: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateResponse
	(*GetWorkflowExecutionHistoryRequest)(nil),              // 111: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryRequest
	(*GetWorkflowExecutionHistoryResponse)(nil),             // 112: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse
	(*GetWorkflowExecutionHistoryResponseWithRaw)(nil),      // 113: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponseWithRaw
	(*GetWorkflowExecutionHistoryReverseRequest)(nil),       // 114: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseRequest
	(*GetWorkflowExecutionHistoryReverseResponse)(nil),      // 115: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseResponse
	(*GetWorkflowExecutionRawHistoryV2Request)(nil),         // 116: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Request
	(*GetWorkflowExecutionRawHistoryV2Response)(nil),        // 117: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Response
	(*GetWorkflowExecutionRawHistoryRequest)(nil),           // 118: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryRequest
	(*GetWorkflowExecutionRawHistoryResponse)(nil),          // 119: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryResponse
	(*ForceDeleteWorkflowExecutionRequest)(nil),             // 120: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionRequest
	(*ForceDeleteWorkflowExecutionResponse)(nil),            // 121: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionResponse
	(*GetDLQTasksRequest)(nil),                              // 122: temporal.server.api.historyservice.v1.GetDLQTasksRequest
	(*GetDLQTasksResponse)(nil),                             // 123: temporal.server.api.historyservice.v1.GetDLQTasksResponse
	(*DeleteDLQTasksRequest)(nil),                           // 124: temporal.server.api.historyservice.v1.DeleteDLQTasksRequest
	(*DeleteDLQTasksResponse)(nil),                          // 125: temporal.server.api.historyservice.v1.DeleteDLQTasksResponse
	(*ListQueuesRequest)(nil),                               // 126: temporal.server.api.historyservice.v1.ListQueuesRequest
	(*ListQueuesResponse)(nil),                              // 127: temporal.server.api.historyservice.v1.ListQueuesResponse
	(*AddTasksRequest)(nil),                                 // 128: temporal.server.api.historyservice.v1.AddTasksRequest
	(*AddTasksResponse)(nil),                                // 129: temporal.server.api.historyservice.v1.AddTasksResponse
	(*ListTasksRequest)(nil),                                // 130: temporal.server.api.historyservice.v1.ListTasksRequest
	(*ListTasksResponse)(nil),                               // 131: temporal.server.api.historyservice.v1.ListTasksResponse
	(*CompleteNexusOperationRequest)(nil),                   // 132: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest
	(*CompleteNexusOperationResponse)(nil),                  // 133: temporal.server.api.historyservice.v1.CompleteNexusOperationResponse
	(*InvokeStateMachineMethodRequest)(nil),                 // 134: temporal.server.api.historyservice.v1.InvokeStateMachineMethodRequest
	(*InvokeStateMachineMethodResponse)(nil),                // 135: temporal.server.api.historyservice.v1.InvokeStateMachineMethodResponse
	(*DeepHealthCheckRequest)(nil),                          // 136: temporal.server.api.historyservice.v1.DeepHealthCheckRequest
	(*DeepHealthCheckResponse)(nil),                         // 137: temporal.server.api.historyservice.v1.DeepHealthCheckResponse
	(*SyncWorkflowStateRequest)(nil),                        // 138: temporal.server.api.historyservice.v1.SyncWorkflowStateRequest
	(*SyncWorkflowStateResponse)(nil),                       // 139: temporal.server.api.historyservice.v1.SyncWorkflowStateResponse
	(*UpdateActivityOptionsRequest)(nil),                    // 140: temporal.server.api.historyservice.v1.UpdateActivityOptionsRequest
	(*UpdateActivityOptionsResponse)(nil),                   // 141: temporal.server.api.historyservice.v1.UpdateActivityOptionsResponse
	(*PauseActivityRequest)(nil),                            // 142: temporal.server.api.historyservice.v1.PauseActivityRequest
	(*PauseActivityResponse)(nil),                           // 143: temporal.server.api.historyservice.v1.PauseActivityResponse
	(*UnpauseActivityRequest)(nil),                          // 144: temporal.server.api.historyservice.v1.UnpauseActivityRequest
	(*UnpauseActivityResponse)(nil),                         // 145: temporal.server.api.historyservice.v1.UnpauseActivityResponse
	(*ResetActivityRequest)(nil),                            // 146: temporal.server.api.historyservice.v1.ResetActivityRequest
	(*ResetActivityResponse)(nil),                           // 147: temporal.server.api.historyservice.v1.ResetActivityResponse
	(*UpdateWorkflowExecutionOptionsRequest)(nil),           // 148: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsRequest
	(*UpdateWorkflowExecutionOptionsResponse)(nil),          // 149: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsResponse
	(*ExecuteMultiOperationRequest_Operation)(nil),          // 150: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.Operation
	(*ExecuteMultiOperationResponse_Response)(nil),          // 151: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.Response
	nil,                                                   // 152: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.QueriesEntry
	nil,                                                   // 153: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.QueriesEntry
	nil,                                                   // 154: temporal.server.api.historyservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry
	nil,                                                   // 155: temporal.server.api.historyservice.v1.ShardReplicationStatus.RemoteClustersEntry
	nil,                                                   // 156: temporal.server.api.historyservice.v1.ShardReplicationStatus.HandoverNamespacesEntry
	(*ListQueuesResponse_QueueInfo)(nil),                  // 157: temporal.server.api.historyservice.v1.ListQueuesResponse.QueueInfo
	(*AddTasksRequest_Task)(nil),                          // 158: temporal.server.api.historyservice.v1.AddTasksRequest.Task
	(*v1.StartWorkflowExecutionRequest)(nil),              // 159: temporal.api.workflowservice.v1.StartWorkflowExecutionRequest
	(*v11.ParentExecutionInfo)(nil),                       // 160: temporal.server.api.workflow.v1.ParentExecutionInfo
	(*timestamppb.Timestamp)(nil),                         // 161: google.protobuf.Timestamp
	(v12.ContinueAsNewInitiator)(0),                       // 162: temporal.api.enums.v1.ContinueAsNewInitiator
	(*v13.Failure)(nil),                                   // 163: temporal.api.failure.v1.Failure
	(*v14.Payloads)(nil),                                  // 164: temporal.api.common.v1.Payloads
	(*durationpb.Duration)(nil),                           // 165: google.protobuf.Duration
	(*v14.WorkerVersionStamp)(nil),                        // 166: temporal.api.common.v1.WorkerVersionStamp
	(*v11.RootExecutionInfo)(nil),                         // 167: temporal.server.api.workflow.v1.RootExecutionInfo
	(*v15.VersioningOverride)(nil),                        // 168: temporal.api.workflow.v1.VersioningOverride
	(*v16.VectorClock)(nil),                               // 169: temporal.server.api.clock.v1.VectorClock
	(*v1.PollWorkflowTaskQueueResponse)(nil),              // 170: temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse
	(*v14.WorkflowExecution)(nil),                         // 171: temporal.api.common.v1.WorkflowExecution
	(*v17.VersionHistoryItem)(nil),                        // 172: temporal.server.api.history.v1.VersionHistoryItem
	(*v18.VersionedTransition)(nil),                       // 173: temporal.server.api.persistence.v1.VersionedTransition
	(*v14.WorkflowType)(nil),                              // 174: temporal.api.common.v1.WorkflowType
	(*v19.TaskQueue)(nil),                                 // 175: temporal.api.taskqueue.v1.TaskQueue
	(v110.WorkflowExecutionState)(0),                      // 176: temporal.server.api.enums.v1.WorkflowExecutionState
	(v12.WorkflowExecutionStatus)(0),                      // 177: temporal.api.enums.v1.WorkflowExecutionStatus
	(*v17.VersionHistories)(nil),                          // 178: temporal.server.api.history.v1.VersionHistories
	(*v15.WorkflowExecutionVersioningInfo)(nil),           // 179: temporal.api.workflow.v1.WorkflowExecutionVersioningInfo
	(*v1.PollWorkflowTaskQueueRequest)(nil),               // 180: temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest
	(*v111.BuildIdRedirectInfo)(nil),                      // 181: temporal.server.api.taskqueue.v1.BuildIdRedirectInfo
	(*v112.Deployment)(nil),                               // 182: temporal.api.deployment.v1.Deployment
	(*v111.TaskVersionDirective)(nil),                     // 183: temporal.server.api.taskqueue.v1.TaskVersionDirective
	(*v17.TransientWorkflowTaskInfo)(nil),                 // 184: temporal.server.api.history.v1.TransientWorkflowTaskInfo
	(*v114.Message)(nil),                                  // 185: temporal.api.protocol.v1.Message
	(*v115.History)(nil),                                  // 186: temporal.api.history.v1.History
	(*v1.PollActivityTaskQueueRequest)(nil),               // 187: temporal.api.workflowservice.v1.PollActivityTaskQueueRequest
	(*v115.HistoryEvent)(nil),                             // 188: temporal.api.history.v1.HistoryEvent
	(*v14.Priority)(nil),                                  // 189: temporal.api.common.v1.Priority
	(*v1.RespondWorkflowTaskCompletedRequest)(nil),        // 190: temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest
	(*v1.PollActivityTaskQueueResponse)(nil),              // 191: temporal.api.workflowservice.v1.PollActivityTaskQueueResponse
	(*v1.RespondWorkflowTaskFailedRequest)(nil),           // 192: temporal.api.workflowservice.v1.RespondWorkflowTaskFailedRequest
	(*v1.RecordActivityTaskHeartbeatRequest)(nil),         // 193: temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatRequest
	(*v1.RespondActivityTaskCompletedRequest)(nil),        // 194: temporal.api.workflowservice.v1.RespondActivityTaskCompletedRequest
	(*v1.RespondActivityTaskFailedRequest)(nil),           // 195: temporal.api.workflowservice.v1.RespondActivityTaskFailedRequest
	(*v1.RespondActivityTaskCanceledRequest)(nil),         // 196: temporal.api.workflowservice.v1.RespondActivityTaskCanceledRequest
	(*v1.SignalWorkflowExecutionRequest)(nil),             // 197: temporal.api.workflowservice.v1.SignalWorkflowExecutionRequest
	(*v1.SignalWithStartWorkflowExecutionRequest)(nil),    // 198: temporal.api.workflowservice.v1.SignalWithStartWorkflowExecutionRequest
	(*v1.TerminateWorkflowExecutionRequest)(nil),          // 199: temporal.api.workflowservice.v1.TerminateWorkflowExecutionRequest
	(*v1.ResetWorkflowExecutionRequest)(nil),              // 200: temporal.api.workflowservice.v1.ResetWorkflowExecutionRequest
	(*v1.RequestCancelWorkflowExecutionRequest)(nil),      // 201: temporal.api.workflowservice.v1.RequestCancelWorkflowExecutionRequest
	(*v1.DescribeWorkflowExecutionRequest)(nil),           // 202: temporal.api.workflowservice.v1.DescribeWorkflowExecutionRequest
	(*v15.WorkflowExecutionConfig)(nil),                   // 203: temporal.api.workflow.v1.WorkflowExecutionConfig
	(*v15.WorkflowExecutionInfo)(nil),                     // 204: temporal.api.workflow.v1.WorkflowExecutionInfo
	(*v15.PendingActivityInfo)(nil),                       // 205: temporal.api.workflow.v1.PendingActivityInfo
	(*v15.PendingChildExecutionInfo)(nil),                 // 206: temporal.api.workflow.v1.PendingChildExecutionInfo
	(*v15.PendingWorkflowTaskInfo)(nil),                   // 207: temporal.api.workflow.v1.PendingWorkflowTaskInfo
	(*v15.CallbackInfo)(nil),                              // 208: temporal.api.workflow.v1.CallbackInfo
	(*v15.PendingNexusOperationInfo)(nil),                 // 209: temporal.api.workflow.v1.PendingNexusOperationInfo
	(*v15.WorkflowExecutionExtendedInfo)(nil),             // 210: temporal.api.workflow.v1.WorkflowExecutionExtendedInfo
	(*v14.DataBlob)(nil),                                  // 211: temporal.api.common.v1.DataBlob
	(*v11.BaseExecutionInfo)(nil),                         // 212: temporal.server.api.workflow.v1.BaseExecutionInfo
	(*v18.WorkflowMutableState)(nil),                      // 213: temporal.server.api.persistence.v1.WorkflowMutableState
	(*v17.VersionHistory)(nil),                            // 214: temporal.server.api.history.v1.VersionHistory
	(*v116.NamespaceCacheInfo)(nil),                       // 215: temporal.server.api.namespace.v1.NamespaceCacheInfo
	(*v18.ShardInfo)(nil),                                 // 216: temporal.server.api.persistence.v1.ShardInfo
	(*v117.ReplicationToken)(nil),                         // 217: temporal.server.api.replication.v1.ReplicationToken
	(*v117.ReplicationTaskInfo)(nil),                      // 218: temporal.server.api.replication.v1.ReplicationTaskInfo
	(*v117.ReplicationTask)(nil),                          // 219: temporal.server.api.replication.v1.ReplicationTask
	(*v1.QueryWorkflowRequest)(nil),                       // 220: temporal.api.workflowservice.v1.QueryWorkflowRequest
	(*v1.QueryWorkflowResponse)(nil),                      // 221: temporal.api.workflowservice.v1.QueryWorkflowResponse
	(*v118.ReapplyEventsRequest)(nil),                     // 222: temporal.server.api.adminservice.v1.ReapplyEventsRequest
	(v110.DeadLetterQueueType)(0),                         // 223: temporal.server.api.enums.v1.DeadLetterQueueType
	(*v118.RefreshWorkflowTasksRequest)(nil),              // 224: temporal.server.api.adminservice.v1.RefreshWorkflowTasksRequest
	(*v1.UpdateWorkflowExecutionRequest)(nil),             // 225: temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequest
	(*v1.UpdateWorkflowExecutionResponse)(nil),            // 226: temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponse
	(*v117.SyncReplicationState)(nil),                     // 227: temporal.server.api.replication.v1.SyncReplicationState
	(*v117.WorkflowReplicationMessages)(nil),              // 228: temporal.server.api.replication.v1.WorkflowReplicationMessages
	(*v1.PollWorkflowExecutionUpdateRequest)(nil),         // 229: temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateRequest
	(*v1.PollWorkflowExecutionUpdateResponse)(nil),        // 230: temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateResponse
	(*v1.GetWorkflowExecutionHistoryRequest)(nil),         // 231: temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryRequest
	(*v1.GetWorkflowExecutionHistoryResponse)(nil),        // 232: temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponse
	(*v1.GetWorkflowExecutionHistoryReverseRequest)(nil),  // 233: temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseRequest
	(*v1.GetWorkflowExecutionHistoryReverseResponse)(nil), // 234: temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseResponse
	(*v118.GetWorkflowExecutionRawHistoryV2Request)(nil),  // 235: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Request
	(*v118.GetWorkflowExecutionRawHistoryV2Response)(nil), // 236: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Response
	(*v118.GetWorkflowExecutionRawHistoryRequest)(nil),    // 237: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryRequest
	(*v118.GetWorkflowExecutionRawHistoryResponse)(nil),   // 238: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponse
	(*v118.DeleteWorkflowExecutionRequest)(nil),           // 239: temporal.server.api.adminservice.v1.DeleteWorkflowExecutionRequest
	(*v118.DeleteWorkflowExecutionResponse)(nil),          // 240: temporal.server.api.adminservice.v1.DeleteWorkflowExecutionResponse
	(*v119.HistoryDLQKey)(nil),                            // 241: temporal.server.api.common.v1.HistoryDLQKey
	(*v119.HistoryDLQTask)(nil),                           // 242: temporal.server.api.common.v1.HistoryDLQTask
	(*v119.HistoryDLQTaskMetadata)(nil),                   // 243: temporal.server.api.common.v1.HistoryDLQTaskMetadata
	(*v118.ListHistoryTasksRequest)(nil),                  // 244: temporal.server.api.adminservice.v1.ListHistoryTasksRequest
	(*v118.ListHistoryTasksResponse)(nil),                 // 245: temporal.server.api.adminservice.v1.ListHistoryTasksResponse
	(*v120.NexusOperationCompletion)(nil),                 // 246: temporal.server.api.token.v1.NexusOperationCompletion
	(*v14.Payload)(nil),                                   // 247: temporal.api.common.v1.Payload
	(*v121.Failure)(nil),                                  // 248: temporal.api.nexus.v1.Failure
	(*v14.Link)(nil),                                      // 249: temporal.api.common.v1.Link
	(*v18.StateMachineRef)(nil),                           // 250: temporal.server.api.persistence.v1.StateMachineRef
	(v110.HealthState)(0),                                 // 251: temporal.server.api.enums.v1.HealthState
	(*v117.VersionedTransitionArtifact)(nil),              // 252: temporal.server.api.replication.v1.VersionedTransitionArtifact
	(*v1.UpdateActivityOptionsRequest)(nil),               // 253: temporal.api.workflowservice.v1.UpdateActivityOptionsRequest
	(*v122.ActivityOptions)(nil),                          // 254: temporal.api.activity.v1.ActivityOptions
	(*v1.PauseActivityRequest)(nil),                       // 255: temporal.api.workflowservice.v1.PauseActivityRequest
	(*v1.UnpauseActivityRequest)(nil),                     // 256: temporal.api.workflowservice.v1.UnpauseActivityRequest
	(*v1.ResetActivityRequest)(nil),                       // 257: temporal.api.workflowservice.v1.ResetActivityRequest
	(*v1.UpdateWorkflowExecutionOptionsRequest)(nil),      // 258: temporal.api.workflowservice.v1.UpdateWorkflowExecutionOptionsRequest
	(*v15.WorkflowExecutionOptions)(nil),                  // 259: temporal.api.workflow.v1.WorkflowExecutionOptions
	(*v113.WorkflowQuery)(nil),                            // 260: temporal.api.query.v1.WorkflowQuery
	(*v117.ReplicationMessages)(nil),                      // 261: temporal.server.api.replication.v1.ReplicationMessages
	(*descriptorpb.MessageOptions)(nil),                   // 262: google.protobuf.MessageOptions
}
var file_temporal_server_api_historyservice_v1_request_response_proto_depIdxs = []int32{
	159, // 0: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.start_request:type_name -> temporal.api.workflowservice.v1.StartWorkflowExecutionRequest
	160, // 1: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.parent_execution_info:type_name -> temporal.server.api.workflow.v1.ParentExecutionInfo
	161, // 2: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.workflow_execution_expiration_time:type_name -> google.protobuf.Timestamp
	162, // 3: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.continue_as_new_initiator:type_name -> temporal.api.enums.v1.ContinueAsNewInitiator
	163, // 4: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.continued_failure:type_name -> temporal.api.failure.v1.Failure
	164, // 5: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.last_completion_result:type_name -> temporal.api.common.v1.Payloads
	165, // 6: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.first_workflow_task_backoff:type_name -> google.protobuf.Duration
	166, // 7: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.source_version_stamp:type_name -> temporal.api.common.v1.WorkerVersionStamp
	167, // 8: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.root_execution_info:type_name -> temporal.server.api.workflow.v1.RootExecutionInfo
	168, // 9: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest.versioning_override:type_name -> temporal.api.workflow.v1.VersioningOverride
	169, // 10: temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	170, // 11: temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse.eager_workflow_task:type_name -> temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse
	171, // 12: temporal.server.api.historyservice.v1.GetMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	172, // 13: temporal.server.api.historyservice.v1.GetMutableStateRequest.version_history_item:type_name -> temporal.server.api.history.v1.VersionHistoryItem
	173, // 14: temporal.server.api.historyservice.v1.GetMutableStateRequest.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	171, // 15: temporal.server.api.historyservice.v1.GetMutableStateResponse.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	174, // 16: temporal.server.api.historyservice.v1.GetMutableStateResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	175, // 17: temporal.server.api.historyservice.v1.GetMutableStateResponse.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	175, // 18: temporal.server.api.historyservice.v1.GetMutableStateResponse.sticky_task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	165, // 19: temporal.server.api.historyservice.v1.GetMutableStateResponse.sticky_task_queue_schedule_to_start_timeout:type_name -> google.protobuf.Duration
	176, // 20: temporal.server.api.historyservice.v1.GetMutableStateResponse.workflow_state:type_name -> temporal.server.api.enums.v1.WorkflowExecutionState
	177, // 21: temporal.server.api.historyservice.v1.GetMutableStateResponse.workflow_status:type_name -> temporal.api.enums.v1.WorkflowExecutionStatus
	178, // 22: temporal.server.api.historyservice.v1.GetMutableStateResponse.version_histories:type_name -> temporal.server.api.history.v1.VersionHistories
	166, // 23: temporal.server.api.historyservice.v1.GetMutableStateResponse.most_recent_worker_version_stamp:type_name -> temporal.api.common.v1.WorkerVersionStamp
	173, // 24: temporal.server.api.historyservice.v1.GetMutableStateResponse.transition_history:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	179, // 25: temporal.server.api.historyservice.v1.GetMutableStateResponse.versioning_info:type_name -> temporal.api.workflow.v1.WorkflowExecutionVersioningInfo
	171, // 26: temporal.server.api.historyservice.v1.PollMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	172, // 27: temporal.server.api.historyservice.v1.PollMutableStateRequest.version_history_item:type_name -> temporal.server.api.history.v1.VersionHistoryItem
	171, // 28: temporal.server.api.historyservice.v1.PollMutableStateResponse.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	174, // 29: temporal.server.api.historyservice.v1.PollMutableStateResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	175, // 30: temporal.server.api.historyservice.v1.PollMutableStateResponse.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	175, // 31: temporal.server.api.historyservice.v1.PollMutableStateResponse.sticky_task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	165, // 32: temporal.server.api.historyservice.v1.PollMutableStateResponse.sticky_task_queue_schedule_to_start_timeout:type_name -> google.protobuf.Duration
	178, // 33: temporal.server.api.historyservice.v1.PollMutableStateResponse.version_histories:type_name -> temporal.server.api.history.v1.VersionHistories
	176, // 34: temporal.server.api.historyservice.v1.PollMutableStateResponse.workflow_state:type_name -> temporal.server.api.enums.v1.WorkflowExecutionState
	177, // 35: temporal.server.api.historyservice.v1.PollMutableStateResponse.workflow_status:type_name -> temporal.api.enums.v1.WorkflowExecutionStatus
	171, // 36: temporal.server.api.historyservice.v1.ResetStickyTaskQueueRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	150, // 37: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.operations:type_name -> temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.Operation
	151, // 38: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.responses:type_name -> temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.Response
	171, // 39: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	180, // 40: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.poll_request:type_name -> temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest
	169, // 41: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	181, // 42: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.build_id_redirect_info:type_name -> temporal.server.api.taskqueue.v1.BuildIdRedirectInfo
	182, // 43: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.scheduled_deployment:type_name -> temporal.api.deployment.v1.Deployment
	183, // 44: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest.version_directive:type_name -> temporal.server.api.taskqueue.v1.TaskVersionDirective
	174, // 45: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	184, // 46: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.transient_workflow_task:type_name -> temporal.server.api.history.v1.TransientWorkflowTaskInfo
	175, // 47: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.workflow_execution_task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	161, // 48: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 49: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.started_time:type_name -> google.protobuf.Timestamp
	152, // 50: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.queries:type_name -> temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.QueriesEntry
	169, // 51: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	185, // 52: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.messages:type_name -> temporal.api.protocol.v1.Message
	186, // 53: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.history:type_name -> temporal.api.history.v1.History
	186, // 54: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.raw_history:type_name -> temporal.api.history.v1.History
	174, // 55: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	184, // 56: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.transient_workflow_task:type_name -> temporal.server.api.history.v1.TransientWorkflowTaskInfo
	175, // 57: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.workflow_execution_task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	161, // 58: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 59: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.started_time:type_name -> google.protobuf.Timestamp
	153, // 60: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.queries:type_name -> temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.QueriesEntry
	169, // 61: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	185, // 62: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.messages:type_name -> temporal.api.protocol.v1.Message
	186, // 63: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.history:type_name -> temporal.api.history.v1.History
	171, // 64: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	187, // 65: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.poll_request:type_name -> temporal.api.workflowservice.v1.PollActivityTaskQueueRequest
	169, // 66: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	181, // 67: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.build_id_redirect_info:type_name -> temporal.server.api.taskqueue.v1.BuildIdRedirectInfo
	182, // 68: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.scheduled_deployment:type_name -> temporal.api.deployment.v1.Deployment
	183, // 69: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest.version_directive:type_name -> temporal.server.api.taskqueue.v1.TaskVersionDirective
	188, // 70: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.scheduled_event:type_name -> temporal.api.history.v1.HistoryEvent
	161, // 71: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.started_time:type_name -> google.protobuf.Timestamp
	161, // 72: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.current_attempt_scheduled_time:type_name -> google.protobuf.Timestamp
	164, // 73: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.heartbeat_details:type_name -> temporal.api.common.v1.Payloads
	174, // 74: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	169, // 75: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	189, // 76: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse.priority:type_name -> temporal.api.common.v1.Priority
	190, // 77: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedRequest.complete_request:type_name -> temporal.api.workflowservice.v1.RespondWorkflowTaskCompletedRequest
	12,  // 78: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse.started_response:type_name -> temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse
	191, // 79: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse.activity_tasks:type_name -> temporal.api.workflowservice.v1.PollActivityTaskQueueResponse
	170, // 80: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse.new_workflow_task:type_name -> temporal.api.workflowservice.v1.PollWorkflowTaskQueueResponse
	192, // 81: temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedRequest.failed_request:type_name -> temporal.api.workflowservice.v1.RespondWorkflowTaskFailedRequest
	171, // 82: temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	169, // 83: temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	193, // 84: temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatRequest.heartbeat_request:type_name -> temporal.api.workflowservice.v1.RecordActivityTaskHeartbeatRequest
	194, // 85: temporal.server.api.historyservice.v1.RespondActivityTaskCompletedRequest.complete_request:type_name -> temporal.api.workflowservice.v1.RespondActivityTaskCompletedRequest
	195, // 86: temporal.server.api.historyservice.v1.RespondActivityTaskFailedRequest.failed_request:type_name -> temporal.api.workflowservice.v1.RespondActivityTaskFailedRequest
	196, // 87: temporal.server.api.historyservice.v1.RespondActivityTaskCanceledRequest.cancel_request:type_name -> temporal.api.workflowservice.v1.RespondActivityTaskCanceledRequest
	171, // 88: temporal.server.api.historyservice.v1.IsActivityTaskValidRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	169, // 89: temporal.server.api.historyservice.v1.IsActivityTaskValidRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	197, // 90: temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest.signal_request:type_name -> temporal.api.workflowservice.v1.SignalWorkflowExecutionRequest
	171, // 91: temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest.external_workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	198, // 92: temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionRequest.signal_with_start_request:type_name -> temporal.api.workflowservice.v1.SignalWithStartWorkflowExecutionRequest
	171, // 93: temporal.server.api.historyservice.v1.RemoveSignalMutableStateRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	199, // 94: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest.terminate_request:type_name -> temporal.api.workflowservice.v1.TerminateWorkflowExecutionRequest
	171, // 95: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest.external_workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	171, // 96: temporal.server.api.historyservice.v1.DeleteWorkflowExecutionRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	200, // 97: temporal.server.api.historyservice.v1.ResetWorkflowExecutionRequest.reset_request:type_name -> temporal.api.workflowservice.v1.ResetWorkflowExecutionRequest
	201, // 98: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest.cancel_request:type_name -> temporal.api.workflowservice.v1.RequestCancelWorkflowExecutionRequest
	171, // 99: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest.external_workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	171, // 100: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	169, // 101: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest.child_clock:type_name -> temporal.server.api.clock.v1.VectorClock
	169, // 102: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest.parent_clock:type_name -> temporal.server.api.clock.v1.VectorClock
	171, // 103: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	169, // 104: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	171, // 105: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest.parent_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	171, // 106: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest.child_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	188, // 107: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest.completion_event:type_name -> temporal.api.history.v1.HistoryEvent
	169, // 108: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	171, // 109: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest.parent_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	171, // 110: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest.child_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	169, // 111: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	202, // 112: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionRequest.request:type_name -> temporal.api.workflowservice.v1.DescribeWorkflowExecutionRequest
	203, // 113: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.execution_config:type_name -> temporal.api.workflow.v1.WorkflowExecutionConfig
	204, // 114: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.workflow_execution_info:type_name -> temporal.api.workflow.v1.WorkflowExecutionInfo
	205, // 115: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.pending_activities:type_name -> temporal.api.workflow.v1.PendingActivityInfo
	206, // 116: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.pending_children:type_name -> temporal.api.workflow.v1.PendingChildExecutionInfo
	207, // 117: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.pending_workflow_task:type_name -> temporal.api.workflow.v1.PendingWorkflowTaskInfo
	208, // 118: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.callbacks:type_name -> temporal.api.workflow.v1.CallbackInfo
	209, // 119: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.pending_nexus_operations:type_name -> temporal.api.workflow.v1.PendingNexusOperationInfo
	210, // 120: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse.workflow_extended_info:type_name -> temporal.api.workflow.v1.WorkflowExecutionExtendedInfo
	171, // 121: temporal.server.api.historyservice.v1.ReplicateEventsV2Request.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	172, // 122: temporal.server.api.historyservice.v1.ReplicateEventsV2Request.version_history_items:type_name -> temporal.server.api.history.v1.VersionHistoryItem
	211, // 123: temporal.server.api.historyservice.v1.ReplicateEventsV2Request.events:type_name -> temporal.api.common.v1.DataBlob
	211, // 124: temporal.server.api.historyservice.v1.ReplicateEventsV2Request.new_run_events:type_name -> temporal.api.common.v1.DataBlob
	212, // 125: temporal.server.api.historyservice.v1.ReplicateEventsV2Request.base_execution_info:type_name -> temporal.server.api.workflow.v1.BaseExecutionInfo
	213, // 126: temporal.server.api.historyservice.v1.ReplicateWorkflowStateRequest.workflow_state:type_name -> temporal.server.api.persistence.v1.WorkflowMutableState
	161, // 127: temporal.server.api.historyservice.v1.SyncShardStatusRequest.status_time:type_name -> google.protobuf.Timestamp
	161, // 128: temporal.server.api.historyservice.v1.SyncActivityRequest.scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 129: temporal.server.api.historyservice.v1.SyncActivityRequest.started_time:type_name -> google.protobuf.Timestamp
	161, // 130: temporal.server.api.historyservice.v1.SyncActivityRequest.last_heartbeat_time:type_name -> google.protobuf.Timestamp
	164, // 131: temporal.server.api.historyservice.v1.SyncActivityRequest.details:type_name -> temporal.api.common.v1.Payloads
	163, // 132: temporal.server.api.historyservice.v1.SyncActivityRequest.last_failure:type_name -> temporal.api.failure.v1.Failure
	214, // 133: temporal.server.api.historyservice.v1.SyncActivityRequest.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	212, // 134: temporal.server.api.historyservice.v1.SyncActivityRequest.base_execution_info:type_name -> temporal.server.api.workflow.v1.BaseExecutionInfo
	161, // 135: temporal.server.api.historyservice.v1.SyncActivityRequest.first_scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 136: temporal.server.api.historyservice.v1.SyncActivityRequest.last_attempt_complete_time:type_name -> google.protobuf.Timestamp
	165, // 137: temporal.server.api.historyservice.v1.SyncActivityRequest.retry_initial_interval:type_name -> google.protobuf.Duration
	165, // 138: temporal.server.api.historyservice.v1.SyncActivityRequest.retry_maximum_interval:type_name -> google.protobuf.Duration
	64,  // 139: temporal.server.api.historyservice.v1.SyncActivitiesRequest.activities_info:type_name -> temporal.server.api.historyservice.v1.ActivitySyncInfo
	161, // 140: temporal.server.api.historyservice.v1.ActivitySyncInfo.scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 141: temporal.server.api.historyservice.v1.ActivitySyncInfo.started_time:type_name -> google.protobuf.Timestamp
	161, // 142: temporal.server.api.historyservice.v1.ActivitySyncInfo.last_heartbeat_time:type_name -> google.protobuf.Timestamp
	164, // 143: temporal.server.api.historyservice.v1.ActivitySyncInfo.details:type_name -> temporal.api.common.v1.Payloads
	163, // 144: temporal.server.api.historyservice.v1.ActivitySyncInfo.last_failure:type_name -> temporal.api.failure.v1.Failure
	214, // 145: temporal.server.api.historyservice.v1.ActivitySyncInfo.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	161, // 146: temporal.server.api.historyservice.v1.ActivitySyncInfo.first_scheduled_time:type_name -> google.protobuf.Timestamp
	161, // 147: temporal.server.api.historyservice.v1.ActivitySyncInfo.last_attempt_complete_time:type_name -> google.protobuf.Timestamp
	165, // 148: temporal.server.api.historyservice.v1.ActivitySyncInfo.retry_initial_interval:type_name -> google.protobuf.Duration
	165, // 149: temporal.server.api.historyservice.v1.ActivitySyncInfo.retry_maximum_interval:type_name -> google.protobuf.Duration
	171, // 150: temporal.server.api.historyservice.v1.DescribeMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	213, // 151: temporal.server.api.historyservice.v1.DescribeMutableStateResponse.cache_mutable_state:type_name -> temporal.server.api.persistence.v1.WorkflowMutableState
	213, // 152: temporal.server.api.historyservice.v1.DescribeMutableStateResponse.database_mutable_state:type_name -> temporal.server.api.persistence.v1.WorkflowMutableState
	171, // 153: temporal.server.api.historyservice.v1.DescribeHistoryHostRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	215, // 154: temporal.server.api.historyservice.v1.DescribeHistoryHostResponse.namespace_cache:type_name -> temporal.server.api.namespace.v1.NamespaceCacheInfo
	216, // 155: temporal.server.api.historyservice.v1.GetShardResponse.shard_info:type_name -> temporal.server.api.persistence.v1.ShardInfo
	161, // 156: temporal.server.api.historyservice.v1.RemoveTaskRequest.visibility_time:type_name -> google.protobuf.Timestamp
	217, // 157: temporal.server.api.historyservice.v1.GetReplicationMessagesRequest.tokens:type_name -> temporal.server.api.replication.v1.ReplicationToken
	154, // 158: temporal.server.api.historyservice.v1.GetReplicationMessagesResponse.shard_messages:type_name -> temporal.server.api.historyservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry
	218, // 159: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesRequest.task_infos:type_name -> temporal.server.api.replication.v1.ReplicationTaskInfo
	219, // 160: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesResponse.replication_tasks:type_name -> temporal.server.api.replication.v1.ReplicationTask
	220, // 161: temporal.server.api.historyservice.v1.QueryWorkflowRequest.request:type_name -> temporal.api.workflowservice.v1.QueryWorkflowRequest
	221, // 162: temporal.server.api.historyservice.v1.QueryWorkflowResponse.response:type_name -> temporal.api.workflowservice.v1.QueryWorkflowResponse
	222, // 163: temporal.server.api.historyservice.v1.ReapplyEventsRequest.request:type_name -> temporal.server.api.adminservice.v1.ReapplyEventsRequest
	223, // 164: temporal.server.api.historyservice.v1.GetDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	223, // 165: temporal.server.api.historyservice.v1.GetDLQMessagesResponse.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	219, // 166: temporal.server.api.historyservice.v1.GetDLQMessagesResponse.replication_tasks:type_name -> temporal.server.api.replication.v1.ReplicationTask
	218, // 167: temporal.server.api.historyservice.v1.GetDLQMessagesResponse.replication_tasks_info:type_name -> temporal.server.api.replication.v1.ReplicationTaskInfo
	223, // 168: temporal.server.api.historyservice.v1.PurgeDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	223, // 169: temporal.server.api.historyservice.v1.MergeDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	224, // 170: temporal.server.api.historyservice.v1.RefreshWorkflowTasksRequest.request:type_name -> temporal.server.api.adminservice.v1.RefreshWorkflowTasksRequest
	171, // 171: temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	96,  // 172: temporal.server.api.historyservice.v1.GetReplicationStatusResponse.shards:type_name -> temporal.server.api.historyservice.v1.ShardReplicationStatus
	161, // 173: temporal.server.api.historyservice.v1.ShardReplicationStatus.shard_local_time:type_name -> google.protobuf.Timestamp
	155, // 174: temporal.server.api.historyservice.v1.ShardReplicationStatus.remote_clusters:type_name -> temporal.server.api.historyservice.v1.ShardReplicationStatus.RemoteClustersEntry
	156, // 175: temporal.server.api.historyservice.v1.ShardReplicationStatus.handover_namespaces:type_name -> temporal.server.api.historyservice.v1.ShardReplicationStatus.HandoverNamespacesEntry
	161, // 176: temporal.server.api.historyservice.v1.ShardReplicationStatus.max_replication_task_visibility_time:type_name -> google.protobuf.Timestamp
	161, // 177: temporal.server.api.historyservice.v1.ShardReplicationStatusPerCluster.acked_task_visibility_time:type_name -> google.protobuf.Timestamp
	171, // 178: temporal.server.api.historyservice.v1.RebuildMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	171, // 179: temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	211, // 180: temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest.history_batches:type_name -> temporal.api.common.v1.DataBlob
	214, // 181: temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	171, // 182: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	161, // 183: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest.workflow_start_time:type_name -> google.protobuf.Timestamp
	161, // 184: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest.workflow_close_time:type_name -> google.protobuf.Timestamp
	225, // 185: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest.request:type_name -> temporal.api.workflowservice.v1.UpdateWorkflowExecutionRequest
	226, // 186: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse.response:type_name -> temporal.api.workflowservice.v1.UpdateWorkflowExecutionResponse
	227, // 187: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesRequest.sync_replication_state:type_name -> temporal.server.api.replication.v1.SyncReplicationState
	228, // 188: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesResponse.messages:type_name -> temporal.server.api.replication.v1.WorkflowReplicationMessages
	229, // 189: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateRequest.request:type_name -> temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateRequest
	230, // 190: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateResponse.response:type_name -> temporal.api.workflowservice.v1.PollWorkflowExecutionUpdateResponse
	231, // 191: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryRequest.request:type_name -> temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryRequest
	232, // 192: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse.response:type_name -> temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponse
	186, // 193: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse.history:type_name -> temporal.api.history.v1.History
	232, // 194: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponseWithRaw.response:type_name -> temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryResponse
	233, // 195: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseRequest.request:type_name -> temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseRequest
	234, // 196: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseResponse.response:type_name -> temporal.api.workflowservice.v1.GetWorkflowExecutionHistoryReverseResponse
	235, // 197: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Request.request:type_name -> temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Request
	236, // 198: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Response.response:type_name -> temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Response
	237, // 199: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryRequest.request:type_name -> temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryRequest
	238, // 200: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryResponse.response:type_name -> temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponse
	239, // 201: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionRequest.request:type_name -> temporal.server.api.adminservice.v1.DeleteWorkflowExecutionRequest
	240, // 202: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionResponse.response:type_name -> temporal.server.api.adminservice.v1.DeleteWorkflowExecutionResponse
	241, // 203: temporal.server.api.historyservice.v1.GetDLQTasksRequest.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	242, // 204: temporal.server.api.historyservice.v1.GetDLQTasksResponse.dlq_tasks:type_name -> temporal.server.api.common.v1.HistoryDLQTask
	241, // 205: temporal.server.api.historyservice.v1.DeleteDLQTasksRequest.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	243, // 206: temporal.server.api.historyservice.v1.DeleteDLQTasksRequest.inclusive_max_task_metadata:type_name -> temporal.server.api.common.v1.HistoryDLQTaskMetadata
	157, // 207: temporal.server.api.historyservice.v1.ListQueuesResponse.queues:type_name -> temporal.server.api.historyservice.v1.ListQueuesResponse.QueueInfo
	158, // 208: temporal.server.api.historyservice.v1.AddTasksRequest.tasks:type_name -> temporal.server.api.historyservice.v1.AddTasksRequest.Task
	244, // 209: temporal.server.api.historyservice.v1.ListTasksRequest.request:type_name -> temporal.server.api.adminservice.v1.ListHistoryTasksRequest
	245, // 210: temporal.server.api.historyservice.v1.ListTasksResponse.response:type_name -> temporal.server.api.adminservice.v1.ListHistoryTasksResponse
	246, // 211: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest.completion:type_name -> temporal.server.api.token.v1.NexusOperationCompletion
	247, // 212: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest.success:type_name -> temporal.api.common.v1.Payload
	248, // 213: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest.failure:type_name -> temporal.api.nexus.v1.Failure
	161, // 214: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest.start_time:type_name -> google.protobuf.Timestamp
	249, // 215: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest.links:type_name -> temporal.api.common.v1.Link
	250, // 216: temporal.server.api.historyservice.v1.InvokeStateMachineMethodRequest.ref:type_name -> temporal.server.api.persistence.v1.StateMachineRef
	251, // 217: temporal.server.api.historyservice.v1.DeepHealthCheckResponse.state:type_name -> temporal.server.api.enums.v1.HealthState
	171, // 218: temporal.server.api.historyservice.v1.SyncWorkflowStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	173, // 219: temporal.server.api.historyservice.v1.SyncWorkflowStateRequest.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	178, // 220: temporal.server.api.historyservice.v1.SyncWorkflowStateRequest.version_histories:type_name -> temporal.server.api.history.v1.VersionHistories
	252, // 221: temporal.server.api.historyservice.v1.SyncWorkflowStateResponse.versioned_transition_artifact:type_name -> temporal.server.api.replication.v1.VersionedTransitionArtifact
	253, // 222: temporal.server.api.historyservice.v1.UpdateActivityOptionsRequest.update_request:type_name -> temporal.api.workflowservice.v1.UpdateActivityOptionsRequest
	254, // 223: temporal.server.api.historyservice.v1.UpdateActivityOptionsResponse.activity_options:type_name -> temporal.api.activity.v1.ActivityOptions
	255, // 224: temporal.server.api.historyservice.v1.PauseActivityRequest.frontend_request:type_name -> temporal.api.workflowservice.v1.PauseActivityRequest
	256, // 225: temporal.server.api.historyservice.v1.UnpauseActivityRequest.frontend_request:type_name -> temporal.api.workflowservice.v1.UnpauseActivityRequest
	257, // 226: temporal.server.api.historyservice.v1.ResetActivityRequest.frontend_request:type_name -> temporal.api.workflowservice.v1.ResetActivityRequest
	258, // 227: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsRequest.update_request:type_name -> temporal.api.workflowservice.v1.UpdateWorkflowExecutionOptionsRequest
	259, // 228: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsResponse.workflow_execution_options:type_name -> temporal.api.workflow.v1.WorkflowExecutionOptions
	1,   // 229: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.Operation.start_workflow:type_name -> temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest
	105, // 230: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest.Operation.update_workflow:type_name -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest
	2,   // 231: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.Response.start_workflow:type_name -> temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse
	106, // 232: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse.Response.update_workflow:type_name -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse
	260, // 233: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse.QueriesEntry.value:type_name -> temporal.api.query.v1.WorkflowQuery
	260, // 234: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponseWithRawHistory.QueriesEntry.value:type_name -> temporal.api.query.v1.WorkflowQuery
	261, // 235: temporal.server.api.historyservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry.value:type_name -> temporal.server.api.replication.v1.ReplicationMessages
	98,  // 236: temporal.server.api.historyservice.v1.ShardReplicationStatus.RemoteClustersEntry.value:type_name -> temporal.server.api.historyservice.v1.ShardReplicationStatusPerCluster
	97,  // 237: temporal.server.api.historyservice.v1.ShardReplicationStatus.HandoverNamespacesEntry.value:type_name -> temporal.server.api.historyservice.v1.HandoverNamespaceInfo
	211, // 238: temporal.server.api.historyservice.v1.AddTasksRequest.Task.blob:type_name -> temporal.api.common.v1.DataBlob
	262, // 239: temporal.server.api.historyservice.v1.routing:extendee -> google.protobuf.MessageOptions
	0,   // 240: temporal.server.api.historyservice.v1.routing:type_name -> temporal.server.api.historyservice.v1.RoutingOptions
	241, // [241:241] is the sub-list for method output_type
	241, // [241:241] is the sub-list for method input_type
	240, // [240:241] is the sub-list for extension type_name
	239, // [239:240] is the sub-list for extension extendee
	0,   // [0:239] is the sub-list for field type_name
}

func init() { file_temporal_server_api_historyservice_v1_request_response_proto_init() }
func file_temporal_server_api_historyservice_v1_request_response_proto_init() {
	if File_temporal_server_api_historyservice_v1_request_response_proto != nil {
		return
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[107].OneofWrappers = []any{
		(*StreamWorkflowReplicationMessagesRequest_SyncReplicationState)(nil),
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[108].OneofWrappers = []any{
		(*StreamWorkflowReplicationMessagesResponse_Messages)(nil),
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[132].OneofWrappers = []any{
		(*CompleteNexusOperationRequest_Success)(nil),
		(*CompleteNexusOperationRequest_Failure)(nil),
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[150].OneofWrappers = []any{
		(*ExecuteMultiOperationRequest_Operation_StartWorkflow)(nil),
		(*ExecuteMultiOperationRequest_Operation_UpdateWorkflow)(nil),
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes[151].OneofWrappers = []any{
		(*ExecuteMultiOperationResponse_Response_StartWorkflow)(nil),
		(*ExecuteMultiOperationResponse_Response_UpdateWorkflow)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_historyservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_historyservice_v1_request_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   159,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_historyservice_v1_request_response_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_historyservice_v1_request_response_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_historyservice_v1_request_response_proto_msgTypes,
		ExtensionInfos:    file_temporal_server_api_historyservice_v1_request_response_proto_extTypes,
	}.Build()
	File_temporal_server_api_historyservice_v1_request_response_proto = out.File
	file_temporal_server_api_historyservice_v1_request_response_proto_goTypes = nil
	file_temporal_server_api_historyservice_v1_request_response_proto_depIdxs = nil
}
