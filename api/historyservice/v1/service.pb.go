// The MIT License
//
// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/historyservice/v1/service.proto

package historyservice

import (
	reflect "reflect"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_temporal_server_api_historyservice_v1_service_proto protoreflect.FileDescriptor

const file_temporal_server_api_historyservice_v1_service_proto_rawDesc = "" +
	"\n" +
	"3temporal/server/api/historyservice/v1/service.proto\x12%temporal.server.api.historyservice.v1\x1a<temporal/server/api/historyservice/v1/request_response.proto2\xbd]\n" +
	"\x0eHistoryService\x12\xa7\x01\n" +
	"\x16StartWorkflowExecution\x12D.temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest\x1aE.temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse\"\x00\x12\x92\x01\n" +
	"\x0fGetMutableState\x12=.temporal.server.api.historyservice.v1.GetMutableStateRequest\x1a>.temporal.server.api.historyservice.v1.GetMutableStateResponse\"\x00\x12\x95\x01\n" +
	"\x10PollMutableState\x12>.temporal.server.api.historyservice.v1.PollMutableStateRequest\x1a?.temporal.server.api.historyservice.v1.PollMutableStateResponse\"\x00\x12\xa1\x01\n" +
	"\x14ResetStickyTaskQueue\x12B.temporal.server.api.historyservice.v1.ResetStickyTaskQueueRequest\x1aC.temporal.server.api.historyservice.v1.ResetStickyTaskQueueResponse\"\x00\x12\xb0\x01\n" +
	"\x19RecordWorkflowTaskStarted\x12G.temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest\x1aH.temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse\"\x00\x12\xb0\x01\n" +
	"\x19RecordActivityTaskStarted\x12G.temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest\x1aH.temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse\"\x00\x12\xb9\x01\n" +
	"\x1cRespondWorkflowTaskCompleted\x12J.temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedRequest\x1aK.temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse\"\x00\x12\xb0\x01\n" +
	"\x19RespondWorkflowTaskFailed\x12G.temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedRequest\x1aH.temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedResponse\"\x00\x12\x9e\x01\n" +
	"\x13IsWorkflowTaskValid\x12A.temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest\x1aB.temporal.server.api.historyservice.v1.IsWorkflowTaskValidResponse\"\x00\x12\xb6\x01\n" +
	"\x1bRecordActivityTaskHeartbeat\x12I.temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatRequest\x1aJ.temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatResponse\"\x00\x12\xb9\x01\n" +
	"\x1cRespondActivityTaskCompleted\x12J.temporal.server.api.historyservice.v1.RespondActivityTaskCompletedRequest\x1aK.temporal.server.api.historyservice.v1.RespondActivityTaskCompletedResponse\"\x00\x12\xb0\x01\n" +
	"\x19RespondActivityTaskFailed\x12G.temporal.server.api.historyservice.v1.RespondActivityTaskFailedRequest\x1aH.temporal.server.api.historyservice.v1.RespondActivityTaskFailedResponse\"\x00\x12\xb6\x01\n" +
	"\x1bRespondActivityTaskCanceled\x12I.temporal.server.api.historyservice.v1.RespondActivityTaskCanceledRequest\x1aJ.temporal.server.api.historyservice.v1.RespondActivityTaskCanceledResponse\"\x00\x12\x9e\x01\n" +
	"\x13IsActivityTaskValid\x12A.temporal.server.api.historyservice.v1.IsActivityTaskValidRequest\x1aB.temporal.server.api.historyservice.v1.IsActivityTaskValidResponse\"\x00\x12\xaa\x01\n" +
	"\x17SignalWorkflowExecution\x12E.temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest\x1aF.temporal.server.api.historyservice.v1.SignalWorkflowExecutionResponse\"\x00\x12\xc5\x01\n" +
	" SignalWithStartWorkflowExecution\x12N.temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionRequest\x1aO.temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionResponse\"\x00\x12\xa4\x01\n" +
	"\x15ExecuteMultiOperation\x12C.temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest\x1aD.temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse\"\x00\x12\xad\x01\n" +
	"\x18RemoveSignalMutableState\x12F.temporal.server.api.historyservice.v1.RemoveSignalMutableStateRequest\x1aG.temporal.server.api.historyservice.v1.RemoveSignalMutableStateResponse\"\x00\x12\xb3\x01\n" +
	"\x1aTerminateWorkflowExecution\x12H.temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest\x1aI.temporal.server.api.historyservice.v1.TerminateWorkflowExecutionResponse\"\x00\x12\xaa\x01\n" +
	"\x17DeleteWorkflowExecution\x12E.temporal.server.api.historyservice.v1.DeleteWorkflowExecutionRequest\x1aF.temporal.server.api.historyservice.v1.DeleteWorkflowExecutionResponse\"\x00\x12\xa7\x01\n" +
	"\x16ResetWorkflowExecution\x12D.temporal.server.api.historyservice.v1.ResetWorkflowExecutionRequest\x1aE.temporal.server.api.historyservice.v1.ResetWorkflowExecutionResponse\"\x00\x12\xbf\x01\n" +
	"\x1eUpdateWorkflowExecutionOptions\x12L.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsRequest\x1aM.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsResponse\"\x00\x12\xbf\x01\n" +
	"\x1eRequestCancelWorkflowExecution\x12L.temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest\x1aM.temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionResponse\"\x00\x12\xa1\x01\n" +
	"\x14ScheduleWorkflowTask\x12B.temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest\x1aC.temporal.server.api.historyservice.v1.ScheduleWorkflowTaskResponse\"\x00\x12\xc5\x01\n" +
	" VerifyFirstWorkflowTaskScheduled\x12N.temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest\x1aO.temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledResponse\"\x00\x12\xbc\x01\n" +
	"\x1dRecordChildExecutionCompleted\x12K.temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest\x1aL.temporal.server.api.historyservice.v1.RecordChildExecutionCompletedResponse\"\x00\x12\xd7\x01\n" +
	"&VerifyChildExecutionCompletionRecorded\x12T.temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest\x1aU.temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedResponse\"\x00\x12\xb0\x01\n" +
	"\x19DescribeWorkflowExecution\x12G.temporal.server.api.historyservice.v1.DescribeWorkflowExecutionRequest\x1aH.temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse\"\x00\x12\x98\x01\n" +
	"\x11ReplicateEventsV2\x12?.temporal.server.api.historyservice.v1.ReplicateEventsV2Request\x1a@.temporal.server.api.historyservice.v1.ReplicateEventsV2Response\"\x00\x12\xa7\x01\n" +
	"\x16ReplicateWorkflowState\x12D.temporal.server.api.historyservice.v1.ReplicateWorkflowStateRequest\x1aE.temporal.server.api.historyservice.v1.ReplicateWorkflowStateResponse\"\x00\x12\x92\x01\n" +
	"\x0fSyncShardStatus\x12=.temporal.server.api.historyservice.v1.SyncShardStatusRequest\x1a>.temporal.server.api.historyservice.v1.SyncShardStatusResponse\"\x00\x12\x89\x01\n" +
	"\fSyncActivity\x12:.temporal.server.api.historyservice.v1.SyncActivityRequest\x1a;.temporal.server.api.historyservice.v1.SyncActivityResponse\"\x00\x12\xa1\x01\n" +
	"\x14DescribeMutableState\x12B.temporal.server.api.historyservice.v1.DescribeMutableStateRequest\x1aC.temporal.server.api.historyservice.v1.DescribeMutableStateResponse\"\x00\x12\x9e\x01\n" +
	"\x13DescribeHistoryHost\x12A.temporal.server.api.historyservice.v1.DescribeHistoryHostRequest\x1aB.temporal.server.api.historyservice.v1.DescribeHistoryHostResponse\"\x00\x12\x83\x01\n" +
	"\n" +
	"CloseShard\x128.temporal.server.api.historyservice.v1.CloseShardRequest\x1a9.temporal.server.api.historyservice.v1.CloseShardResponse\"\x00\x12}\n" +
	"\bGetShard\x126.temporal.server.api.historyservice.v1.GetShardRequest\x1a7.temporal.server.api.historyservice.v1.GetShardResponse\"\x00\x12\x83\x01\n" +
	"\n" +
	"RemoveTask\x128.temporal.server.api.historyservice.v1.RemoveTaskRequest\x1a9.temporal.server.api.historyservice.v1.RemoveTaskResponse\"\x00\x12\xa7\x01\n" +
	"\x16GetReplicationMessages\x12D.temporal.server.api.historyservice.v1.GetReplicationMessagesRequest\x1aE.temporal.server.api.historyservice.v1.GetReplicationMessagesResponse\"\x00\x12\xb0\x01\n" +
	"\x19GetDLQReplicationMessages\x12G.temporal.server.api.historyservice.v1.GetDLQReplicationMessagesRequest\x1aH.temporal.server.api.historyservice.v1.GetDLQReplicationMessagesResponse\"\x00\x12\x8c\x01\n" +
	"\rQueryWorkflow\x12;.temporal.server.api.historyservice.v1.QueryWorkflowRequest\x1a<.temporal.server.api.historyservice.v1.QueryWorkflowResponse\"\x00\x12\x8c\x01\n" +
	"\rReapplyEvents\x12;.temporal.server.api.historyservice.v1.ReapplyEventsRequest\x1a<.temporal.server.api.historyservice.v1.ReapplyEventsResponse\"\x00\x12\x8f\x01\n" +
	"\x0eGetDLQMessages\x12<.temporal.server.api.historyservice.v1.GetDLQMessagesRequest\x1a=.temporal.server.api.historyservice.v1.GetDLQMessagesResponse\"\x00\x12\x95\x01\n" +
	"\x10PurgeDLQMessages\x12>.temporal.server.api.historyservice.v1.PurgeDLQMessagesRequest\x1a?.temporal.server.api.historyservice.v1.PurgeDLQMessagesResponse\"\x00\x12\x95\x01\n" +
	"\x10MergeDLQMessages\x12>.temporal.server.api.historyservice.v1.MergeDLQMessagesRequest\x1a?.temporal.server.api.historyservice.v1.MergeDLQMessagesResponse\"\x00\x12\xa1\x01\n" +
	"\x14RefreshWorkflowTasks\x12B.temporal.server.api.historyservice.v1.RefreshWorkflowTasksRequest\x1aC.temporal.server.api.historyservice.v1.RefreshWorkflowTasksResponse\"\x00\x12\xce\x01\n" +
	"#GenerateLastHistoryReplicationTasks\x12Q.temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksRequest\x1aR.temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksResponse\"\x00\x12\xa1\x01\n" +
	"\x14GetReplicationStatus\x12B.temporal.server.api.historyservice.v1.GetReplicationStatusRequest\x1aC.temporal.server.api.historyservice.v1.GetReplicationStatusResponse\"\x00\x12\x9e\x01\n" +
	"\x13RebuildMutableState\x12A.temporal.server.api.historyservice.v1.RebuildMutableStateRequest\x1aB.temporal.server.api.historyservice.v1.RebuildMutableStateResponse\"\x00\x12\xaa\x01\n" +
	"\x17ImportWorkflowExecution\x12E.temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest\x1aF.temporal.server.api.historyservice.v1.ImportWorkflowExecutionResponse\"\x00\x12\xbf\x01\n" +
	"\x1eDeleteWorkflowVisibilityRecord\x12L.temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest\x1aM.temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordResponse\"\x00\x12\xaa\x01\n" +
	"\x17UpdateWorkflowExecution\x12E.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest\x1aF.temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse\"\x00\x12\xb6\x01\n" +
	"\x1bPollWorkflowExecutionUpdate\x12I.temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateRequest\x1aJ.temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateResponse\"\x00\x12\xcc\x01\n" +
	"!StreamWorkflowReplicationMessages\x12O.temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesRequest\x1aP.temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesResponse\"\x00(\x010\x01\x12\xb6\x01\n" +
	"\x1bGetWorkflowExecutionHistory\x12I.temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryRequest\x1aJ.temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse\"\x00\x12\xcb\x01\n" +
	"\"GetWorkflowExecutionHistoryReverse\x12P.temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseRequest\x1aQ.temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseResponse\"\x00\x12\xc5\x01\n" +
	" GetWorkflowExecutionRawHistoryV2\x12N.temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Request\x1aO.temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Response\"\x00\x12\xbf\x01\n" +
	"\x1eGetWorkflowExecutionRawHistory\x12L.temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryRequest\x1aM.temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryResponse\"\x00\x12\xb9\x01\n" +
	"\x1cForceDeleteWorkflowExecution\x12J.temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionRequest\x1aK.temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionResponse\"\x00\x12\x86\x01\n" +
	"\vGetDLQTasks\x129.temporal.server.api.historyservice.v1.GetDLQTasksRequest\x1a:.temporal.server.api.historyservice.v1.GetDLQTasksResponse\"\x00\x12\x8f\x01\n" +
	"\x0eDeleteDLQTasks\x12<.temporal.server.api.historyservice.v1.DeleteDLQTasksRequest\x1a=.temporal.server.api.historyservice.v1.DeleteDLQTasksResponse\"\x00\x12\x83\x01\n" +
	"\n" +
	"ListQueues\x128.temporal.server.api.historyservice.v1.ListQueuesRequest\x1a9.temporal.server.api.historyservice.v1.ListQueuesResponse\"\x00\x12}\n" +
	"\bAddTasks\x126.temporal.server.api.historyservice.v1.AddTasksRequest\x1a7.temporal.server.api.historyservice.v1.AddTasksResponse\"\x00\x12\x80\x01\n" +
	"\tListTasks\x127.temporal.server.api.historyservice.v1.ListTasksRequest\x1a8.temporal.server.api.historyservice.v1.ListTasksResponse\"\x00\x12\xa7\x01\n" +
	"\x16CompleteNexusOperation\x12D.temporal.server.api.historyservice.v1.CompleteNexusOperationRequest\x1aE.temporal.server.api.historyservice.v1.CompleteNexusOperationResponse\"\x00\x12\xad\x01\n" +
	"\x18InvokeStateMachineMethod\x12F.temporal.server.api.historyservice.v1.InvokeStateMachineMethodRequest\x1aG.temporal.server.api.historyservice.v1.InvokeStateMachineMethodResponse\"\x00\x12\x92\x01\n" +
	"\x0fDeepHealthCheck\x12=.temporal.server.api.historyservice.v1.DeepHealthCheckRequest\x1a>.temporal.server.api.historyservice.v1.DeepHealthCheckResponse\"\x00\x12\x98\x01\n" +
	"\x11SyncWorkflowState\x12?.temporal.server.api.historyservice.v1.SyncWorkflowStateRequest\x1a@.temporal.server.api.historyservice.v1.SyncWorkflowStateResponse\"\x00\x12\xa4\x01\n" +
	"\x15UpdateActivityOptions\x12C.temporal.server.api.historyservice.v1.UpdateActivityOptionsRequest\x1aD.temporal.server.api.historyservice.v1.UpdateActivityOptionsResponse\"\x00\x12\x8c\x01\n" +
	"\rPauseActivity\x12;.temporal.server.api.historyservice.v1.PauseActivityRequest\x1a<.temporal.server.api.historyservice.v1.PauseActivityResponse\"\x00\x12\x92\x01\n" +
	"\x0fUnpauseActivity\x12=.temporal.server.api.historyservice.v1.UnpauseActivityRequest\x1a>.temporal.server.api.historyservice.v1.UnpauseActivityResponse\"\x00\x12\x8c\x01\n" +
	"\rResetActivity\x12;.temporal.server.api.historyservice.v1.ResetActivityRequest\x1a<.temporal.server.api.historyservice.v1.ResetActivityResponse\"\x00B<Z:go.temporal.io/server/api/historyservice/v1;historyserviceb\x06proto3"

var file_temporal_server_api_historyservice_v1_service_proto_goTypes = []any{
	(*StartWorkflowExecutionRequest)(nil),                  // 0: temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest
	(*GetMutableStateRequest)(nil),                         // 1: temporal.server.api.historyservice.v1.GetMutableStateRequest
	(*PollMutableStateRequest)(nil),                        // 2: temporal.server.api.historyservice.v1.PollMutableStateRequest
	(*ResetStickyTaskQueueRequest)(nil),                    // 3: temporal.server.api.historyservice.v1.ResetStickyTaskQueueRequest
	(*RecordWorkflowTaskStartedRequest)(nil),               // 4: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest
	(*RecordActivityTaskStartedRequest)(nil),               // 5: temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest
	(*RespondWorkflowTaskCompletedRequest)(nil),            // 6: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedRequest
	(*RespondWorkflowTaskFailedRequest)(nil),               // 7: temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedRequest
	(*IsWorkflowTaskValidRequest)(nil),                     // 8: temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest
	(*RecordActivityTaskHeartbeatRequest)(nil),             // 9: temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatRequest
	(*RespondActivityTaskCompletedRequest)(nil),            // 10: temporal.server.api.historyservice.v1.RespondActivityTaskCompletedRequest
	(*RespondActivityTaskFailedRequest)(nil),               // 11: temporal.server.api.historyservice.v1.RespondActivityTaskFailedRequest
	(*RespondActivityTaskCanceledRequest)(nil),             // 12: temporal.server.api.historyservice.v1.RespondActivityTaskCanceledRequest
	(*IsActivityTaskValidRequest)(nil),                     // 13: temporal.server.api.historyservice.v1.IsActivityTaskValidRequest
	(*SignalWorkflowExecutionRequest)(nil),                 // 14: temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest
	(*SignalWithStartWorkflowExecutionRequest)(nil),        // 15: temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionRequest
	(*ExecuteMultiOperationRequest)(nil),                   // 16: temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest
	(*RemoveSignalMutableStateRequest)(nil),                // 17: temporal.server.api.historyservice.v1.RemoveSignalMutableStateRequest
	(*TerminateWorkflowExecutionRequest)(nil),              // 18: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest
	(*DeleteWorkflowExecutionRequest)(nil),                 // 19: temporal.server.api.historyservice.v1.DeleteWorkflowExecutionRequest
	(*ResetWorkflowExecutionRequest)(nil),                  // 20: temporal.server.api.historyservice.v1.ResetWorkflowExecutionRequest
	(*UpdateWorkflowExecutionOptionsRequest)(nil),          // 21: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsRequest
	(*RequestCancelWorkflowExecutionRequest)(nil),          // 22: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest
	(*ScheduleWorkflowTaskRequest)(nil),                    // 23: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest
	(*VerifyFirstWorkflowTaskScheduledRequest)(nil),        // 24: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest
	(*RecordChildExecutionCompletedRequest)(nil),           // 25: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest
	(*VerifyChildExecutionCompletionRecordedRequest)(nil),  // 26: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest
	(*DescribeWorkflowExecutionRequest)(nil),               // 27: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionRequest
	(*ReplicateEventsV2Request)(nil),                       // 28: temporal.server.api.historyservice.v1.ReplicateEventsV2Request
	(*ReplicateWorkflowStateRequest)(nil),                  // 29: temporal.server.api.historyservice.v1.ReplicateWorkflowStateRequest
	(*SyncShardStatusRequest)(nil),                         // 30: temporal.server.api.historyservice.v1.SyncShardStatusRequest
	(*SyncActivityRequest)(nil),                            // 31: temporal.server.api.historyservice.v1.SyncActivityRequest
	(*DescribeMutableStateRequest)(nil),                    // 32: temporal.server.api.historyservice.v1.DescribeMutableStateRequest
	(*DescribeHistoryHostRequest)(nil),                     // 33: temporal.server.api.historyservice.v1.DescribeHistoryHostRequest
	(*CloseShardRequest)(nil),                              // 34: temporal.server.api.historyservice.v1.CloseShardRequest
	(*GetShardRequest)(nil),                                // 35: temporal.server.api.historyservice.v1.GetShardRequest
	(*RemoveTaskRequest)(nil),                              // 36: temporal.server.api.historyservice.v1.RemoveTaskRequest
	(*GetReplicationMessagesRequest)(nil),                  // 37: temporal.server.api.historyservice.v1.GetReplicationMessagesRequest
	(*GetDLQReplicationMessagesRequest)(nil),               // 38: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesRequest
	(*QueryWorkflowRequest)(nil),                           // 39: temporal.server.api.historyservice.v1.QueryWorkflowRequest
	(*ReapplyEventsRequest)(nil),                           // 40: temporal.server.api.historyservice.v1.ReapplyEventsRequest
	(*GetDLQMessagesRequest)(nil),                          // 41: temporal.server.api.historyservice.v1.GetDLQMessagesRequest
	(*PurgeDLQMessagesRequest)(nil),                        // 42: temporal.server.api.historyservice.v1.PurgeDLQMessagesRequest
	(*MergeDLQMessagesRequest)(nil),                        // 43: temporal.server.api.historyservice.v1.MergeDLQMessagesRequest
	(*RefreshWorkflowTasksRequest)(nil),                    // 44: temporal.server.api.historyservice.v1.RefreshWorkflowTasksRequest
	(*GenerateLastHistoryReplicationTasksRequest)(nil),     // 45: temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksRequest
	(*GetReplicationStatusRequest)(nil),                    // 46: temporal.server.api.historyservice.v1.GetReplicationStatusRequest
	(*RebuildMutableStateRequest)(nil),                     // 47: temporal.server.api.historyservice.v1.RebuildMutableStateRequest
	(*ImportWorkflowExecutionRequest)(nil),                 // 48: temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest
	(*DeleteWorkflowVisibilityRecordRequest)(nil),          // 49: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest
	(*UpdateWorkflowExecutionRequest)(nil),                 // 50: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest
	(*PollWorkflowExecutionUpdateRequest)(nil),             // 51: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateRequest
	(*StreamWorkflowReplicationMessagesRequest)(nil),       // 52: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesRequest
	(*GetWorkflowExecutionHistoryRequest)(nil),             // 53: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryRequest
	(*GetWorkflowExecutionHistoryReverseRequest)(nil),      // 54: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseRequest
	(*GetWorkflowExecutionRawHistoryV2Request)(nil),        // 55: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Request
	(*GetWorkflowExecutionRawHistoryRequest)(nil),          // 56: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryRequest
	(*ForceDeleteWorkflowExecutionRequest)(nil),            // 57: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionRequest
	(*GetDLQTasksRequest)(nil),                             // 58: temporal.server.api.historyservice.v1.GetDLQTasksRequest
	(*DeleteDLQTasksRequest)(nil),                          // 59: temporal.server.api.historyservice.v1.DeleteDLQTasksRequest
	(*ListQueuesRequest)(nil),                              // 60: temporal.server.api.historyservice.v1.ListQueuesRequest
	(*AddTasksRequest)(nil),                                // 61: temporal.server.api.historyservice.v1.AddTasksRequest
	(*ListTasksRequest)(nil),                               // 62: temporal.server.api.historyservice.v1.ListTasksRequest
	(*CompleteNexusOperationRequest)(nil),                  // 63: temporal.server.api.historyservice.v1.CompleteNexusOperationRequest
	(*InvokeStateMachineMethodRequest)(nil),                // 64: temporal.server.api.historyservice.v1.InvokeStateMachineMethodRequest
	(*DeepHealthCheckRequest)(nil),                         // 65: temporal.server.api.historyservice.v1.DeepHealthCheckRequest
	(*SyncWorkflowStateRequest)(nil),                       // 66: temporal.server.api.historyservice.v1.SyncWorkflowStateRequest
	(*UpdateActivityOptionsRequest)(nil),                   // 67: temporal.server.api.historyservice.v1.UpdateActivityOptionsRequest
	(*PauseActivityRequest)(nil),                           // 68: temporal.server.api.historyservice.v1.PauseActivityRequest
	(*UnpauseActivityRequest)(nil),                         // 69: temporal.server.api.historyservice.v1.UnpauseActivityRequest
	(*ResetActivityRequest)(nil),                           // 70: temporal.server.api.historyservice.v1.ResetActivityRequest
	(*StartWorkflowExecutionResponse)(nil),                 // 71: temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse
	(*GetMutableStateResponse)(nil),                        // 72: temporal.server.api.historyservice.v1.GetMutableStateResponse
	(*PollMutableStateResponse)(nil),                       // 73: temporal.server.api.historyservice.v1.PollMutableStateResponse
	(*ResetStickyTaskQueueResponse)(nil),                   // 74: temporal.server.api.historyservice.v1.ResetStickyTaskQueueResponse
	(*RecordWorkflowTaskStartedResponse)(nil),              // 75: temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse
	(*RecordActivityTaskStartedResponse)(nil),              // 76: temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse
	(*RespondWorkflowTaskCompletedResponse)(nil),           // 77: temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse
	(*RespondWorkflowTaskFailedResponse)(nil),              // 78: temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedResponse
	(*IsWorkflowTaskValidResponse)(nil),                    // 79: temporal.server.api.historyservice.v1.IsWorkflowTaskValidResponse
	(*RecordActivityTaskHeartbeatResponse)(nil),            // 80: temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatResponse
	(*RespondActivityTaskCompletedResponse)(nil),           // 81: temporal.server.api.historyservice.v1.RespondActivityTaskCompletedResponse
	(*RespondActivityTaskFailedResponse)(nil),              // 82: temporal.server.api.historyservice.v1.RespondActivityTaskFailedResponse
	(*RespondActivityTaskCanceledResponse)(nil),            // 83: temporal.server.api.historyservice.v1.RespondActivityTaskCanceledResponse
	(*IsActivityTaskValidResponse)(nil),                    // 84: temporal.server.api.historyservice.v1.IsActivityTaskValidResponse
	(*SignalWorkflowExecutionResponse)(nil),                // 85: temporal.server.api.historyservice.v1.SignalWorkflowExecutionResponse
	(*SignalWithStartWorkflowExecutionResponse)(nil),       // 86: temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionResponse
	(*ExecuteMultiOperationResponse)(nil),                  // 87: temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse
	(*RemoveSignalMutableStateResponse)(nil),               // 88: temporal.server.api.historyservice.v1.RemoveSignalMutableStateResponse
	(*TerminateWorkflowExecutionResponse)(nil),             // 89: temporal.server.api.historyservice.v1.TerminateWorkflowExecutionResponse
	(*DeleteWorkflowExecutionResponse)(nil),                // 90: temporal.server.api.historyservice.v1.DeleteWorkflowExecutionResponse
	(*ResetWorkflowExecutionResponse)(nil),                 // 91: temporal.server.api.historyservice.v1.ResetWorkflowExecutionResponse
	(*UpdateWorkflowExecutionOptionsResponse)(nil),         // 92: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsResponse
	(*RequestCancelWorkflowExecutionResponse)(nil),         // 93: temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionResponse
	(*ScheduleWorkflowTaskResponse)(nil),                   // 94: temporal.server.api.historyservice.v1.ScheduleWorkflowTaskResponse
	(*VerifyFirstWorkflowTaskScheduledResponse)(nil),       // 95: temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledResponse
	(*RecordChildExecutionCompletedResponse)(nil),          // 96: temporal.server.api.historyservice.v1.RecordChildExecutionCompletedResponse
	(*VerifyChildExecutionCompletionRecordedResponse)(nil), // 97: temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedResponse
	(*DescribeWorkflowExecutionResponse)(nil),              // 98: temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse
	(*ReplicateEventsV2Response)(nil),                      // 99: temporal.server.api.historyservice.v1.ReplicateEventsV2Response
	(*ReplicateWorkflowStateResponse)(nil),                 // 100: temporal.server.api.historyservice.v1.ReplicateWorkflowStateResponse
	(*SyncShardStatusResponse)(nil),                        // 101: temporal.server.api.historyservice.v1.SyncShardStatusResponse
	(*SyncActivityResponse)(nil),                           // 102: temporal.server.api.historyservice.v1.SyncActivityResponse
	(*DescribeMutableStateResponse)(nil),                   // 103: temporal.server.api.historyservice.v1.DescribeMutableStateResponse
	(*DescribeHistoryHostResponse)(nil),                    // 104: temporal.server.api.historyservice.v1.DescribeHistoryHostResponse
	(*CloseShardResponse)(nil),                             // 105: temporal.server.api.historyservice.v1.CloseShardResponse
	(*GetShardResponse)(nil),                               // 106: temporal.server.api.historyservice.v1.GetShardResponse
	(*RemoveTaskResponse)(nil),                             // 107: temporal.server.api.historyservice.v1.RemoveTaskResponse
	(*GetReplicationMessagesResponse)(nil),                 // 108: temporal.server.api.historyservice.v1.GetReplicationMessagesResponse
	(*GetDLQReplicationMessagesResponse)(nil),              // 109: temporal.server.api.historyservice.v1.GetDLQReplicationMessagesResponse
	(*QueryWorkflowResponse)(nil),                          // 110: temporal.server.api.historyservice.v1.QueryWorkflowResponse
	(*ReapplyEventsResponse)(nil),                          // 111: temporal.server.api.historyservice.v1.ReapplyEventsResponse
	(*GetDLQMessagesResponse)(nil),                         // 112: temporal.server.api.historyservice.v1.GetDLQMessagesResponse
	(*PurgeDLQMessagesResponse)(nil),                       // 113: temporal.server.api.historyservice.v1.PurgeDLQMessagesResponse
	(*MergeDLQMessagesResponse)(nil),                       // 114: temporal.server.api.historyservice.v1.MergeDLQMessagesResponse
	(*RefreshWorkflowTasksResponse)(nil),                   // 115: temporal.server.api.historyservice.v1.RefreshWorkflowTasksResponse
	(*GenerateLastHistoryReplicationTasksResponse)(nil),    // 116: temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksResponse
	(*GetReplicationStatusResponse)(nil),                   // 117: temporal.server.api.historyservice.v1.GetReplicationStatusResponse
	(*RebuildMutableStateResponse)(nil),                    // 118: temporal.server.api.historyservice.v1.RebuildMutableStateResponse
	(*ImportWorkflowExecutionResponse)(nil),                // 119: temporal.server.api.historyservice.v1.ImportWorkflowExecutionResponse
	(*DeleteWorkflowVisibilityRecordResponse)(nil),         // 120: temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordResponse
	(*UpdateWorkflowExecutionResponse)(nil),                // 121: temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse
	(*PollWorkflowExecutionUpdateResponse)(nil),            // 122: temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateResponse
	(*StreamWorkflowReplicationMessagesResponse)(nil),      // 123: temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesResponse
	(*GetWorkflowExecutionHistoryResponse)(nil),            // 124: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse
	(*GetWorkflowExecutionHistoryReverseResponse)(nil),     // 125: temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseResponse
	(*GetWorkflowExecutionRawHistoryV2Response)(nil),       // 126: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Response
	(*GetWorkflowExecutionRawHistoryResponse)(nil),         // 127: temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryResponse
	(*ForceDeleteWorkflowExecutionResponse)(nil),           // 128: temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionResponse
	(*GetDLQTasksResponse)(nil),                            // 129: temporal.server.api.historyservice.v1.GetDLQTasksResponse
	(*DeleteDLQTasksResponse)(nil),                         // 130: temporal.server.api.historyservice.v1.DeleteDLQTasksResponse
	(*ListQueuesResponse)(nil),                             // 131: temporal.server.api.historyservice.v1.ListQueuesResponse
	(*AddTasksResponse)(nil),                               // 132: temporal.server.api.historyservice.v1.AddTasksResponse
	(*ListTasksResponse)(nil),                              // 133: temporal.server.api.historyservice.v1.ListTasksResponse
	(*CompleteNexusOperationResponse)(nil),                 // 134: temporal.server.api.historyservice.v1.CompleteNexusOperationResponse
	(*InvokeStateMachineMethodResponse)(nil),               // 135: temporal.server.api.historyservice.v1.InvokeStateMachineMethodResponse
	(*DeepHealthCheckResponse)(nil),                        // 136: temporal.server.api.historyservice.v1.DeepHealthCheckResponse
	(*SyncWorkflowStateResponse)(nil),                      // 137: temporal.server.api.historyservice.v1.SyncWorkflowStateResponse
	(*UpdateActivityOptionsResponse)(nil),                  // 138: temporal.server.api.historyservice.v1.UpdateActivityOptionsResponse
	(*PauseActivityResponse)(nil),                          // 139: temporal.server.api.historyservice.v1.PauseActivityResponse
	(*UnpauseActivityResponse)(nil),                        // 140: temporal.server.api.historyservice.v1.UnpauseActivityResponse
	(*ResetActivityResponse)(nil),                          // 141: temporal.server.api.historyservice.v1.ResetActivityResponse
}
var file_temporal_server_api_historyservice_v1_service_proto_depIdxs = []int32{
	0,   // 0: temporal.server.api.historyservice.v1.HistoryService.StartWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.StartWorkflowExecutionRequest
	1,   // 1: temporal.server.api.historyservice.v1.HistoryService.GetMutableState:input_type -> temporal.server.api.historyservice.v1.GetMutableStateRequest
	2,   // 2: temporal.server.api.historyservice.v1.HistoryService.PollMutableState:input_type -> temporal.server.api.historyservice.v1.PollMutableStateRequest
	3,   // 3: temporal.server.api.historyservice.v1.HistoryService.ResetStickyTaskQueue:input_type -> temporal.server.api.historyservice.v1.ResetStickyTaskQueueRequest
	4,   // 4: temporal.server.api.historyservice.v1.HistoryService.RecordWorkflowTaskStarted:input_type -> temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedRequest
	5,   // 5: temporal.server.api.historyservice.v1.HistoryService.RecordActivityTaskStarted:input_type -> temporal.server.api.historyservice.v1.RecordActivityTaskStartedRequest
	6,   // 6: temporal.server.api.historyservice.v1.HistoryService.RespondWorkflowTaskCompleted:input_type -> temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedRequest
	7,   // 7: temporal.server.api.historyservice.v1.HistoryService.RespondWorkflowTaskFailed:input_type -> temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedRequest
	8,   // 8: temporal.server.api.historyservice.v1.HistoryService.IsWorkflowTaskValid:input_type -> temporal.server.api.historyservice.v1.IsWorkflowTaskValidRequest
	9,   // 9: temporal.server.api.historyservice.v1.HistoryService.RecordActivityTaskHeartbeat:input_type -> temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatRequest
	10,  // 10: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskCompleted:input_type -> temporal.server.api.historyservice.v1.RespondActivityTaskCompletedRequest
	11,  // 11: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskFailed:input_type -> temporal.server.api.historyservice.v1.RespondActivityTaskFailedRequest
	12,  // 12: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskCanceled:input_type -> temporal.server.api.historyservice.v1.RespondActivityTaskCanceledRequest
	13,  // 13: temporal.server.api.historyservice.v1.HistoryService.IsActivityTaskValid:input_type -> temporal.server.api.historyservice.v1.IsActivityTaskValidRequest
	14,  // 14: temporal.server.api.historyservice.v1.HistoryService.SignalWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.SignalWorkflowExecutionRequest
	15,  // 15: temporal.server.api.historyservice.v1.HistoryService.SignalWithStartWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionRequest
	16,  // 16: temporal.server.api.historyservice.v1.HistoryService.ExecuteMultiOperation:input_type -> temporal.server.api.historyservice.v1.ExecuteMultiOperationRequest
	17,  // 17: temporal.server.api.historyservice.v1.HistoryService.RemoveSignalMutableState:input_type -> temporal.server.api.historyservice.v1.RemoveSignalMutableStateRequest
	18,  // 18: temporal.server.api.historyservice.v1.HistoryService.TerminateWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.TerminateWorkflowExecutionRequest
	19,  // 19: temporal.server.api.historyservice.v1.HistoryService.DeleteWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.DeleteWorkflowExecutionRequest
	20,  // 20: temporal.server.api.historyservice.v1.HistoryService.ResetWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.ResetWorkflowExecutionRequest
	21,  // 21: temporal.server.api.historyservice.v1.HistoryService.UpdateWorkflowExecutionOptions:input_type -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsRequest
	22,  // 22: temporal.server.api.historyservice.v1.HistoryService.RequestCancelWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionRequest
	23,  // 23: temporal.server.api.historyservice.v1.HistoryService.ScheduleWorkflowTask:input_type -> temporal.server.api.historyservice.v1.ScheduleWorkflowTaskRequest
	24,  // 24: temporal.server.api.historyservice.v1.HistoryService.VerifyFirstWorkflowTaskScheduled:input_type -> temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledRequest
	25,  // 25: temporal.server.api.historyservice.v1.HistoryService.RecordChildExecutionCompleted:input_type -> temporal.server.api.historyservice.v1.RecordChildExecutionCompletedRequest
	26,  // 26: temporal.server.api.historyservice.v1.HistoryService.VerifyChildExecutionCompletionRecorded:input_type -> temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedRequest
	27,  // 27: temporal.server.api.historyservice.v1.HistoryService.DescribeWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.DescribeWorkflowExecutionRequest
	28,  // 28: temporal.server.api.historyservice.v1.HistoryService.ReplicateEventsV2:input_type -> temporal.server.api.historyservice.v1.ReplicateEventsV2Request
	29,  // 29: temporal.server.api.historyservice.v1.HistoryService.ReplicateWorkflowState:input_type -> temporal.server.api.historyservice.v1.ReplicateWorkflowStateRequest
	30,  // 30: temporal.server.api.historyservice.v1.HistoryService.SyncShardStatus:input_type -> temporal.server.api.historyservice.v1.SyncShardStatusRequest
	31,  // 31: temporal.server.api.historyservice.v1.HistoryService.SyncActivity:input_type -> temporal.server.api.historyservice.v1.SyncActivityRequest
	32,  // 32: temporal.server.api.historyservice.v1.HistoryService.DescribeMutableState:input_type -> temporal.server.api.historyservice.v1.DescribeMutableStateRequest
	33,  // 33: temporal.server.api.historyservice.v1.HistoryService.DescribeHistoryHost:input_type -> temporal.server.api.historyservice.v1.DescribeHistoryHostRequest
	34,  // 34: temporal.server.api.historyservice.v1.HistoryService.CloseShard:input_type -> temporal.server.api.historyservice.v1.CloseShardRequest
	35,  // 35: temporal.server.api.historyservice.v1.HistoryService.GetShard:input_type -> temporal.server.api.historyservice.v1.GetShardRequest
	36,  // 36: temporal.server.api.historyservice.v1.HistoryService.RemoveTask:input_type -> temporal.server.api.historyservice.v1.RemoveTaskRequest
	37,  // 37: temporal.server.api.historyservice.v1.HistoryService.GetReplicationMessages:input_type -> temporal.server.api.historyservice.v1.GetReplicationMessagesRequest
	38,  // 38: temporal.server.api.historyservice.v1.HistoryService.GetDLQReplicationMessages:input_type -> temporal.server.api.historyservice.v1.GetDLQReplicationMessagesRequest
	39,  // 39: temporal.server.api.historyservice.v1.HistoryService.QueryWorkflow:input_type -> temporal.server.api.historyservice.v1.QueryWorkflowRequest
	40,  // 40: temporal.server.api.historyservice.v1.HistoryService.ReapplyEvents:input_type -> temporal.server.api.historyservice.v1.ReapplyEventsRequest
	41,  // 41: temporal.server.api.historyservice.v1.HistoryService.GetDLQMessages:input_type -> temporal.server.api.historyservice.v1.GetDLQMessagesRequest
	42,  // 42: temporal.server.api.historyservice.v1.HistoryService.PurgeDLQMessages:input_type -> temporal.server.api.historyservice.v1.PurgeDLQMessagesRequest
	43,  // 43: temporal.server.api.historyservice.v1.HistoryService.MergeDLQMessages:input_type -> temporal.server.api.historyservice.v1.MergeDLQMessagesRequest
	44,  // 44: temporal.server.api.historyservice.v1.HistoryService.RefreshWorkflowTasks:input_type -> temporal.server.api.historyservice.v1.RefreshWorkflowTasksRequest
	45,  // 45: temporal.server.api.historyservice.v1.HistoryService.GenerateLastHistoryReplicationTasks:input_type -> temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksRequest
	46,  // 46: temporal.server.api.historyservice.v1.HistoryService.GetReplicationStatus:input_type -> temporal.server.api.historyservice.v1.GetReplicationStatusRequest
	47,  // 47: temporal.server.api.historyservice.v1.HistoryService.RebuildMutableState:input_type -> temporal.server.api.historyservice.v1.RebuildMutableStateRequest
	48,  // 48: temporal.server.api.historyservice.v1.HistoryService.ImportWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.ImportWorkflowExecutionRequest
	49,  // 49: temporal.server.api.historyservice.v1.HistoryService.DeleteWorkflowVisibilityRecord:input_type -> temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordRequest
	50,  // 50: temporal.server.api.historyservice.v1.HistoryService.UpdateWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionRequest
	51,  // 51: temporal.server.api.historyservice.v1.HistoryService.PollWorkflowExecutionUpdate:input_type -> temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateRequest
	52,  // 52: temporal.server.api.historyservice.v1.HistoryService.StreamWorkflowReplicationMessages:input_type -> temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesRequest
	53,  // 53: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionHistory:input_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryRequest
	54,  // 54: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionHistoryReverse:input_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseRequest
	55,  // 55: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionRawHistoryV2:input_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Request
	56,  // 56: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionRawHistory:input_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryRequest
	57,  // 57: temporal.server.api.historyservice.v1.HistoryService.ForceDeleteWorkflowExecution:input_type -> temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionRequest
	58,  // 58: temporal.server.api.historyservice.v1.HistoryService.GetDLQTasks:input_type -> temporal.server.api.historyservice.v1.GetDLQTasksRequest
	59,  // 59: temporal.server.api.historyservice.v1.HistoryService.DeleteDLQTasks:input_type -> temporal.server.api.historyservice.v1.DeleteDLQTasksRequest
	60,  // 60: temporal.server.api.historyservice.v1.HistoryService.ListQueues:input_type -> temporal.server.api.historyservice.v1.ListQueuesRequest
	61,  // 61: temporal.server.api.historyservice.v1.HistoryService.AddTasks:input_type -> temporal.server.api.historyservice.v1.AddTasksRequest
	62,  // 62: temporal.server.api.historyservice.v1.HistoryService.ListTasks:input_type -> temporal.server.api.historyservice.v1.ListTasksRequest
	63,  // 63: temporal.server.api.historyservice.v1.HistoryService.CompleteNexusOperation:input_type -> temporal.server.api.historyservice.v1.CompleteNexusOperationRequest
	64,  // 64: temporal.server.api.historyservice.v1.HistoryService.InvokeStateMachineMethod:input_type -> temporal.server.api.historyservice.v1.InvokeStateMachineMethodRequest
	65,  // 65: temporal.server.api.historyservice.v1.HistoryService.DeepHealthCheck:input_type -> temporal.server.api.historyservice.v1.DeepHealthCheckRequest
	66,  // 66: temporal.server.api.historyservice.v1.HistoryService.SyncWorkflowState:input_type -> temporal.server.api.historyservice.v1.SyncWorkflowStateRequest
	67,  // 67: temporal.server.api.historyservice.v1.HistoryService.UpdateActivityOptions:input_type -> temporal.server.api.historyservice.v1.UpdateActivityOptionsRequest
	68,  // 68: temporal.server.api.historyservice.v1.HistoryService.PauseActivity:input_type -> temporal.server.api.historyservice.v1.PauseActivityRequest
	69,  // 69: temporal.server.api.historyservice.v1.HistoryService.UnpauseActivity:input_type -> temporal.server.api.historyservice.v1.UnpauseActivityRequest
	70,  // 70: temporal.server.api.historyservice.v1.HistoryService.ResetActivity:input_type -> temporal.server.api.historyservice.v1.ResetActivityRequest
	71,  // 71: temporal.server.api.historyservice.v1.HistoryService.StartWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.StartWorkflowExecutionResponse
	72,  // 72: temporal.server.api.historyservice.v1.HistoryService.GetMutableState:output_type -> temporal.server.api.historyservice.v1.GetMutableStateResponse
	73,  // 73: temporal.server.api.historyservice.v1.HistoryService.PollMutableState:output_type -> temporal.server.api.historyservice.v1.PollMutableStateResponse
	74,  // 74: temporal.server.api.historyservice.v1.HistoryService.ResetStickyTaskQueue:output_type -> temporal.server.api.historyservice.v1.ResetStickyTaskQueueResponse
	75,  // 75: temporal.server.api.historyservice.v1.HistoryService.RecordWorkflowTaskStarted:output_type -> temporal.server.api.historyservice.v1.RecordWorkflowTaskStartedResponse
	76,  // 76: temporal.server.api.historyservice.v1.HistoryService.RecordActivityTaskStarted:output_type -> temporal.server.api.historyservice.v1.RecordActivityTaskStartedResponse
	77,  // 77: temporal.server.api.historyservice.v1.HistoryService.RespondWorkflowTaskCompleted:output_type -> temporal.server.api.historyservice.v1.RespondWorkflowTaskCompletedResponse
	78,  // 78: temporal.server.api.historyservice.v1.HistoryService.RespondWorkflowTaskFailed:output_type -> temporal.server.api.historyservice.v1.RespondWorkflowTaskFailedResponse
	79,  // 79: temporal.server.api.historyservice.v1.HistoryService.IsWorkflowTaskValid:output_type -> temporal.server.api.historyservice.v1.IsWorkflowTaskValidResponse
	80,  // 80: temporal.server.api.historyservice.v1.HistoryService.RecordActivityTaskHeartbeat:output_type -> temporal.server.api.historyservice.v1.RecordActivityTaskHeartbeatResponse
	81,  // 81: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskCompleted:output_type -> temporal.server.api.historyservice.v1.RespondActivityTaskCompletedResponse
	82,  // 82: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskFailed:output_type -> temporal.server.api.historyservice.v1.RespondActivityTaskFailedResponse
	83,  // 83: temporal.server.api.historyservice.v1.HistoryService.RespondActivityTaskCanceled:output_type -> temporal.server.api.historyservice.v1.RespondActivityTaskCanceledResponse
	84,  // 84: temporal.server.api.historyservice.v1.HistoryService.IsActivityTaskValid:output_type -> temporal.server.api.historyservice.v1.IsActivityTaskValidResponse
	85,  // 85: temporal.server.api.historyservice.v1.HistoryService.SignalWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.SignalWorkflowExecutionResponse
	86,  // 86: temporal.server.api.historyservice.v1.HistoryService.SignalWithStartWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.SignalWithStartWorkflowExecutionResponse
	87,  // 87: temporal.server.api.historyservice.v1.HistoryService.ExecuteMultiOperation:output_type -> temporal.server.api.historyservice.v1.ExecuteMultiOperationResponse
	88,  // 88: temporal.server.api.historyservice.v1.HistoryService.RemoveSignalMutableState:output_type -> temporal.server.api.historyservice.v1.RemoveSignalMutableStateResponse
	89,  // 89: temporal.server.api.historyservice.v1.HistoryService.TerminateWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.TerminateWorkflowExecutionResponse
	90,  // 90: temporal.server.api.historyservice.v1.HistoryService.DeleteWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.DeleteWorkflowExecutionResponse
	91,  // 91: temporal.server.api.historyservice.v1.HistoryService.ResetWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.ResetWorkflowExecutionResponse
	92,  // 92: temporal.server.api.historyservice.v1.HistoryService.UpdateWorkflowExecutionOptions:output_type -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionOptionsResponse
	93,  // 93: temporal.server.api.historyservice.v1.HistoryService.RequestCancelWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.RequestCancelWorkflowExecutionResponse
	94,  // 94: temporal.server.api.historyservice.v1.HistoryService.ScheduleWorkflowTask:output_type -> temporal.server.api.historyservice.v1.ScheduleWorkflowTaskResponse
	95,  // 95: temporal.server.api.historyservice.v1.HistoryService.VerifyFirstWorkflowTaskScheduled:output_type -> temporal.server.api.historyservice.v1.VerifyFirstWorkflowTaskScheduledResponse
	96,  // 96: temporal.server.api.historyservice.v1.HistoryService.RecordChildExecutionCompleted:output_type -> temporal.server.api.historyservice.v1.RecordChildExecutionCompletedResponse
	97,  // 97: temporal.server.api.historyservice.v1.HistoryService.VerifyChildExecutionCompletionRecorded:output_type -> temporal.server.api.historyservice.v1.VerifyChildExecutionCompletionRecordedResponse
	98,  // 98: temporal.server.api.historyservice.v1.HistoryService.DescribeWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.DescribeWorkflowExecutionResponse
	99,  // 99: temporal.server.api.historyservice.v1.HistoryService.ReplicateEventsV2:output_type -> temporal.server.api.historyservice.v1.ReplicateEventsV2Response
	100, // 100: temporal.server.api.historyservice.v1.HistoryService.ReplicateWorkflowState:output_type -> temporal.server.api.historyservice.v1.ReplicateWorkflowStateResponse
	101, // 101: temporal.server.api.historyservice.v1.HistoryService.SyncShardStatus:output_type -> temporal.server.api.historyservice.v1.SyncShardStatusResponse
	102, // 102: temporal.server.api.historyservice.v1.HistoryService.SyncActivity:output_type -> temporal.server.api.historyservice.v1.SyncActivityResponse
	103, // 103: temporal.server.api.historyservice.v1.HistoryService.DescribeMutableState:output_type -> temporal.server.api.historyservice.v1.DescribeMutableStateResponse
	104, // 104: temporal.server.api.historyservice.v1.HistoryService.DescribeHistoryHost:output_type -> temporal.server.api.historyservice.v1.DescribeHistoryHostResponse
	105, // 105: temporal.server.api.historyservice.v1.HistoryService.CloseShard:output_type -> temporal.server.api.historyservice.v1.CloseShardResponse
	106, // 106: temporal.server.api.historyservice.v1.HistoryService.GetShard:output_type -> temporal.server.api.historyservice.v1.GetShardResponse
	107, // 107: temporal.server.api.historyservice.v1.HistoryService.RemoveTask:output_type -> temporal.server.api.historyservice.v1.RemoveTaskResponse
	108, // 108: temporal.server.api.historyservice.v1.HistoryService.GetReplicationMessages:output_type -> temporal.server.api.historyservice.v1.GetReplicationMessagesResponse
	109, // 109: temporal.server.api.historyservice.v1.HistoryService.GetDLQReplicationMessages:output_type -> temporal.server.api.historyservice.v1.GetDLQReplicationMessagesResponse
	110, // 110: temporal.server.api.historyservice.v1.HistoryService.QueryWorkflow:output_type -> temporal.server.api.historyservice.v1.QueryWorkflowResponse
	111, // 111: temporal.server.api.historyservice.v1.HistoryService.ReapplyEvents:output_type -> temporal.server.api.historyservice.v1.ReapplyEventsResponse
	112, // 112: temporal.server.api.historyservice.v1.HistoryService.GetDLQMessages:output_type -> temporal.server.api.historyservice.v1.GetDLQMessagesResponse
	113, // 113: temporal.server.api.historyservice.v1.HistoryService.PurgeDLQMessages:output_type -> temporal.server.api.historyservice.v1.PurgeDLQMessagesResponse
	114, // 114: temporal.server.api.historyservice.v1.HistoryService.MergeDLQMessages:output_type -> temporal.server.api.historyservice.v1.MergeDLQMessagesResponse
	115, // 115: temporal.server.api.historyservice.v1.HistoryService.RefreshWorkflowTasks:output_type -> temporal.server.api.historyservice.v1.RefreshWorkflowTasksResponse
	116, // 116: temporal.server.api.historyservice.v1.HistoryService.GenerateLastHistoryReplicationTasks:output_type -> temporal.server.api.historyservice.v1.GenerateLastHistoryReplicationTasksResponse
	117, // 117: temporal.server.api.historyservice.v1.HistoryService.GetReplicationStatus:output_type -> temporal.server.api.historyservice.v1.GetReplicationStatusResponse
	118, // 118: temporal.server.api.historyservice.v1.HistoryService.RebuildMutableState:output_type -> temporal.server.api.historyservice.v1.RebuildMutableStateResponse
	119, // 119: temporal.server.api.historyservice.v1.HistoryService.ImportWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.ImportWorkflowExecutionResponse
	120, // 120: temporal.server.api.historyservice.v1.HistoryService.DeleteWorkflowVisibilityRecord:output_type -> temporal.server.api.historyservice.v1.DeleteWorkflowVisibilityRecordResponse
	121, // 121: temporal.server.api.historyservice.v1.HistoryService.UpdateWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.UpdateWorkflowExecutionResponse
	122, // 122: temporal.server.api.historyservice.v1.HistoryService.PollWorkflowExecutionUpdate:output_type -> temporal.server.api.historyservice.v1.PollWorkflowExecutionUpdateResponse
	123, // 123: temporal.server.api.historyservice.v1.HistoryService.StreamWorkflowReplicationMessages:output_type -> temporal.server.api.historyservice.v1.StreamWorkflowReplicationMessagesResponse
	124, // 124: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionHistory:output_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryResponse
	125, // 125: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionHistoryReverse:output_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionHistoryReverseResponse
	126, // 126: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionRawHistoryV2:output_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryV2Response
	127, // 127: temporal.server.api.historyservice.v1.HistoryService.GetWorkflowExecutionRawHistory:output_type -> temporal.server.api.historyservice.v1.GetWorkflowExecutionRawHistoryResponse
	128, // 128: temporal.server.api.historyservice.v1.HistoryService.ForceDeleteWorkflowExecution:output_type -> temporal.server.api.historyservice.v1.ForceDeleteWorkflowExecutionResponse
	129, // 129: temporal.server.api.historyservice.v1.HistoryService.GetDLQTasks:output_type -> temporal.server.api.historyservice.v1.GetDLQTasksResponse
	130, // 130: temporal.server.api.historyservice.v1.HistoryService.DeleteDLQTasks:output_type -> temporal.server.api.historyservice.v1.DeleteDLQTasksResponse
	131, // 131: temporal.server.api.historyservice.v1.HistoryService.ListQueues:output_type -> temporal.server.api.historyservice.v1.ListQueuesResponse
	132, // 132: temporal.server.api.historyservice.v1.HistoryService.AddTasks:output_type -> temporal.server.api.historyservice.v1.AddTasksResponse
	133, // 133: temporal.server.api.historyservice.v1.HistoryService.ListTasks:output_type -> temporal.server.api.historyservice.v1.ListTasksResponse
	134, // 134: temporal.server.api.historyservice.v1.HistoryService.CompleteNexusOperation:output_type -> temporal.server.api.historyservice.v1.CompleteNexusOperationResponse
	135, // 135: temporal.server.api.historyservice.v1.HistoryService.InvokeStateMachineMethod:output_type -> temporal.server.api.historyservice.v1.InvokeStateMachineMethodResponse
	136, // 136: temporal.server.api.historyservice.v1.HistoryService.DeepHealthCheck:output_type -> temporal.server.api.historyservice.v1.DeepHealthCheckResponse
	137, // 137: temporal.server.api.historyservice.v1.HistoryService.SyncWorkflowState:output_type -> temporal.server.api.historyservice.v1.SyncWorkflowStateResponse
	138, // 138: temporal.server.api.historyservice.v1.HistoryService.UpdateActivityOptions:output_type -> temporal.server.api.historyservice.v1.UpdateActivityOptionsResponse
	139, // 139: temporal.server.api.historyservice.v1.HistoryService.PauseActivity:output_type -> temporal.server.api.historyservice.v1.PauseActivityResponse
	140, // 140: temporal.server.api.historyservice.v1.HistoryService.UnpauseActivity:output_type -> temporal.server.api.historyservice.v1.UnpauseActivityResponse
	141, // 141: temporal.server.api.historyservice.v1.HistoryService.ResetActivity:output_type -> temporal.server.api.historyservice.v1.ResetActivityResponse
	71,  // [71:142] is the sub-list for method output_type
	0,   // [0:71] is the sub-list for method input_type
	0,   // [0:0] is the sub-list for extension type_name
	0,   // [0:0] is the sub-list for extension extendee
	0,   // [0:0] is the sub-list for field type_name
}

func init() { file_temporal_server_api_historyservice_v1_service_proto_init() }
func file_temporal_server_api_historyservice_v1_service_proto_init() {
	if File_temporal_server_api_historyservice_v1_service_proto != nil {
		return
	}
	file_temporal_server_api_historyservice_v1_request_response_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_historyservice_v1_service_proto_rawDesc), len(file_temporal_server_api_historyservice_v1_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_temporal_server_api_historyservice_v1_service_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_historyservice_v1_service_proto_depIdxs,
	}.Build()
	File_temporal_server_api_historyservice_v1_service_proto = out.File
	file_temporal_server_api_historyservice_v1_service_proto_goTypes = nil
	file_temporal_server_api_historyservice_v1_service_proto_depIdxs = nil
}
