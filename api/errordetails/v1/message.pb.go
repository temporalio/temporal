// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/errordetails/v1/message.proto

// These error details extend failures defined in https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto

package errordetails

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v11 "go.temporal.io/server/api/history/v1"
	v1 "go.temporal.io/server/api/persistence/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskAlreadyStartedFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAlreadyStartedFailure) Reset() {
	*x = TaskAlreadyStartedFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAlreadyStartedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAlreadyStartedFailure) ProtoMessage() {}

func (x *TaskAlreadyStartedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAlreadyStartedFailure.ProtoReflect.Descriptor instead.
func (*TaskAlreadyStartedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{0}
}

type CurrentBranchChangedFailure struct {
	state                      protoimpl.MessageState  `protogen:"open.v1"`
	CurrentBranchToken         []byte                  `protobuf:"bytes,1,opt,name=current_branch_token,json=currentBranchToken,proto3" json:"current_branch_token,omitempty"`
	RequestBranchToken         []byte                  `protobuf:"bytes,2,opt,name=request_branch_token,json=requestBranchToken,proto3" json:"request_branch_token,omitempty"`
	CurrentVersionedTransition *v1.VersionedTransition `protobuf:"bytes,3,opt,name=current_versioned_transition,json=currentVersionedTransition,proto3" json:"current_versioned_transition,omitempty"`
	RequestVersionedTransition *v1.VersionedTransition `protobuf:"bytes,4,opt,name=request_versioned_transition,json=requestVersionedTransition,proto3" json:"request_versioned_transition,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *CurrentBranchChangedFailure) Reset() {
	*x = CurrentBranchChangedFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentBranchChangedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentBranchChangedFailure) ProtoMessage() {}

func (x *CurrentBranchChangedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentBranchChangedFailure.ProtoReflect.Descriptor instead.
func (*CurrentBranchChangedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentBranchChangedFailure) GetCurrentBranchToken() []byte {
	if x != nil {
		return x.CurrentBranchToken
	}
	return nil
}

func (x *CurrentBranchChangedFailure) GetRequestBranchToken() []byte {
	if x != nil {
		return x.RequestBranchToken
	}
	return nil
}

func (x *CurrentBranchChangedFailure) GetCurrentVersionedTransition() *v1.VersionedTransition {
	if x != nil {
		return x.CurrentVersionedTransition
	}
	return nil
}

func (x *CurrentBranchChangedFailure) GetRequestVersionedTransition() *v1.VersionedTransition {
	if x != nil {
		return x.RequestVersionedTransition
	}
	return nil
}

type ShardOwnershipLostFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerHost     string                 `protobuf:"bytes,1,opt,name=owner_host,json=ownerHost,proto3" json:"owner_host,omitempty"`
	CurrentHost   string                 `protobuf:"bytes,2,opt,name=current_host,json=currentHost,proto3" json:"current_host,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardOwnershipLostFailure) Reset() {
	*x = ShardOwnershipLostFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardOwnershipLostFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardOwnershipLostFailure) ProtoMessage() {}

func (x *ShardOwnershipLostFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardOwnershipLostFailure.ProtoReflect.Descriptor instead.
func (*ShardOwnershipLostFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *ShardOwnershipLostFailure) GetOwnerHost() string {
	if x != nil {
		return x.OwnerHost
	}
	return ""
}

func (x *ShardOwnershipLostFailure) GetCurrentHost() string {
	if x != nil {
		return x.CurrentHost
	}
	return ""
}

type RetryReplicationFailure struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId        string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId             string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	StartEventId      int64                  `protobuf:"varint,4,opt,name=start_event_id,json=startEventId,proto3" json:"start_event_id,omitempty"`
	StartEventVersion int64                  `protobuf:"varint,5,opt,name=start_event_version,json=startEventVersion,proto3" json:"start_event_version,omitempty"`
	EndEventId        int64                  `protobuf:"varint,6,opt,name=end_event_id,json=endEventId,proto3" json:"end_event_id,omitempty"`
	EndEventVersion   int64                  `protobuf:"varint,7,opt,name=end_event_version,json=endEventVersion,proto3" json:"end_event_version,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RetryReplicationFailure) Reset() {
	*x = RetryReplicationFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryReplicationFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryReplicationFailure) ProtoMessage() {}

func (x *RetryReplicationFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryReplicationFailure.ProtoReflect.Descriptor instead.
func (*RetryReplicationFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *RetryReplicationFailure) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RetryReplicationFailure) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *RetryReplicationFailure) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *RetryReplicationFailure) GetStartEventId() int64 {
	if x != nil {
		return x.StartEventId
	}
	return 0
}

func (x *RetryReplicationFailure) GetStartEventVersion() int64 {
	if x != nil {
		return x.StartEventVersion
	}
	return 0
}

func (x *RetryReplicationFailure) GetEndEventId() int64 {
	if x != nil {
		return x.EndEventId
	}
	return 0
}

func (x *RetryReplicationFailure) GetEndEventVersion() int64 {
	if x != nil {
		return x.EndEventVersion
	}
	return 0
}

type SyncStateFailure struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId         string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId          string                  `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId               string                  `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	VersionedTransition *v1.VersionedTransition `protobuf:"bytes,4,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
	VersionHistories    *v11.VersionHistories   `protobuf:"bytes,5,opt,name=version_histories,json=versionHistories,proto3" json:"version_histories,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SyncStateFailure) Reset() {
	*x = SyncStateFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncStateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStateFailure) ProtoMessage() {}

func (x *SyncStateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStateFailure.ProtoReflect.Descriptor instead.
func (*SyncStateFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *SyncStateFailure) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncStateFailure) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *SyncStateFailure) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *SyncStateFailure) GetVersionedTransition() *v1.VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

func (x *SyncStateFailure) GetVersionHistories() *v11.VersionHistories {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

type StickyWorkerUnavailableFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StickyWorkerUnavailableFailure) Reset() {
	*x = StickyWorkerUnavailableFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StickyWorkerUnavailableFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StickyWorkerUnavailableFailure) ProtoMessage() {}

func (x *StickyWorkerUnavailableFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StickyWorkerUnavailableFailure.ProtoReflect.Descriptor instead.
func (*StickyWorkerUnavailableFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{5}
}

// Deprecated. Only used in WV2. [cleanup-old-wv]
type ObsoleteDispatchBuildIdFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsoleteDispatchBuildIdFailure) Reset() {
	*x = ObsoleteDispatchBuildIdFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsoleteDispatchBuildIdFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsoleteDispatchBuildIdFailure) ProtoMessage() {}

func (x *ObsoleteDispatchBuildIdFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsoleteDispatchBuildIdFailure.ProtoReflect.Descriptor instead.
func (*ObsoleteDispatchBuildIdFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{6}
}

// Returned when History determines a task that Matching wants to dispatch is no longer valid.
type ObsoleteMatchingTaskFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObsoleteMatchingTaskFailure) Reset() {
	*x = ObsoleteMatchingTaskFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObsoleteMatchingTaskFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObsoleteMatchingTaskFailure) ProtoMessage() {}

func (x *ObsoleteMatchingTaskFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObsoleteMatchingTaskFailure.ProtoReflect.Descriptor instead.
func (*ObsoleteMatchingTaskFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{7}
}

// Returned when an activity start is rejected by History because the workflow is in a transitioning
// between worker deployments.
type ActivityStartDuringTransitionFailure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityStartDuringTransitionFailure) Reset() {
	*x = ActivityStartDuringTransitionFailure{}
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityStartDuringTransitionFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityStartDuringTransitionFailure) ProtoMessage() {}

func (x *ActivityStartDuringTransitionFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_errordetails_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityStartDuringTransitionFailure.ProtoReflect.Descriptor instead.
func (*ActivityStartDuringTransitionFailure) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP(), []int{8}
}

var File_temporal_server_api_errordetails_v1_message_proto protoreflect.FileDescriptor

const file_temporal_server_api_errordetails_v1_message_proto_rawDesc = "" +
	"\n" +
	"1temporal/server/api/errordetails/v1/message.proto\x12#temporal.server.api.errordetails.v1\x1a,temporal/server/api/history/v1/message.proto\x1a,temporal/server/api/persistence/v1/hsm.proto\"\x1b\n" +
	"\x19TaskAlreadyStartedFailure\"\xf7\x02\n" +
	"\x1bCurrentBranchChangedFailure\x120\n" +
	"\x14current_branch_token\x18\x01 \x01(\fR\x12currentBranchToken\x120\n" +
	"\x14request_branch_token\x18\x02 \x01(\fR\x12requestBranchToken\x12y\n" +
	"\x1ccurrent_versioned_transition\x18\x03 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x1acurrentVersionedTransition\x12y\n" +
	"\x1crequest_versioned_transition\x18\x04 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x1arequestVersionedTransition\"]\n" +
	"\x19ShardOwnershipLostFailure\x12\x1d\n" +
	"\n" +
	"owner_host\x18\x01 \x01(\tR\townerHost\x12!\n" +
	"\fcurrent_host\x18\x02 \x01(\tR\vcurrentHost\"\x98\x02\n" +
	"\x17RetryReplicationFailure\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12$\n" +
	"\x0estart_event_id\x18\x04 \x01(\x03R\fstartEventId\x12.\n" +
	"\x13start_event_version\x18\x05 \x01(\x03R\x11startEventVersion\x12 \n" +
	"\fend_event_id\x18\x06 \x01(\x03R\n" +
	"endEventId\x12*\n" +
	"\x11end_event_version\x18\a \x01(\x03R\x0fendEventVersion\"\xb8\x02\n" +
	"\x10SyncStateFailure\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12j\n" +
	"\x14versioned_transition\x18\x04 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x13versionedTransition\x12]\n" +
	"\x11version_histories\x18\x05 \x01(\v20.temporal.server.api.history.v1.VersionHistoriesR\x10versionHistories\" \n" +
	"\x1eStickyWorkerUnavailableFailure\" \n" +
	"\x1eObsoleteDispatchBuildIdFailure\"\x1d\n" +
	"\x1bObsoleteMatchingTaskFailure\"&\n" +
	"$ActivityStartDuringTransitionFailureB8Z6go.temporal.io/server/api/errordetails/v1;errordetailsb\x06proto3"

var (
	file_temporal_server_api_errordetails_v1_message_proto_rawDescOnce sync.Once
	file_temporal_server_api_errordetails_v1_message_proto_rawDescData []byte
)

func file_temporal_server_api_errordetails_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_server_api_errordetails_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_errordetails_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_errordetails_v1_message_proto_rawDesc), len(file_temporal_server_api_errordetails_v1_message_proto_rawDesc)))
	})
	return file_temporal_server_api_errordetails_v1_message_proto_rawDescData
}

var file_temporal_server_api_errordetails_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_temporal_server_api_errordetails_v1_message_proto_goTypes = []any{
	(*TaskAlreadyStartedFailure)(nil),            // 0: temporal.server.api.errordetails.v1.TaskAlreadyStartedFailure
	(*CurrentBranchChangedFailure)(nil),          // 1: temporal.server.api.errordetails.v1.CurrentBranchChangedFailure
	(*ShardOwnershipLostFailure)(nil),            // 2: temporal.server.api.errordetails.v1.ShardOwnershipLostFailure
	(*RetryReplicationFailure)(nil),              // 3: temporal.server.api.errordetails.v1.RetryReplicationFailure
	(*SyncStateFailure)(nil),                     // 4: temporal.server.api.errordetails.v1.SyncStateFailure
	(*StickyWorkerUnavailableFailure)(nil),       // 5: temporal.server.api.errordetails.v1.StickyWorkerUnavailableFailure
	(*ObsoleteDispatchBuildIdFailure)(nil),       // 6: temporal.server.api.errordetails.v1.ObsoleteDispatchBuildIdFailure
	(*ObsoleteMatchingTaskFailure)(nil),          // 7: temporal.server.api.errordetails.v1.ObsoleteMatchingTaskFailure
	(*ActivityStartDuringTransitionFailure)(nil), // 8: temporal.server.api.errordetails.v1.ActivityStartDuringTransitionFailure
	(*v1.VersionedTransition)(nil),               // 9: temporal.server.api.persistence.v1.VersionedTransition
	(*v11.VersionHistories)(nil),                 // 10: temporal.server.api.history.v1.VersionHistories
}
var file_temporal_server_api_errordetails_v1_message_proto_depIdxs = []int32{
	9,  // 0: temporal.server.api.errordetails.v1.CurrentBranchChangedFailure.current_versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	9,  // 1: temporal.server.api.errordetails.v1.CurrentBranchChangedFailure.request_versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	9,  // 2: temporal.server.api.errordetails.v1.SyncStateFailure.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	10, // 3: temporal.server.api.errordetails.v1.SyncStateFailure.version_histories:type_name -> temporal.server.api.history.v1.VersionHistories
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_temporal_server_api_errordetails_v1_message_proto_init() }
func file_temporal_server_api_errordetails_v1_message_proto_init() {
	if File_temporal_server_api_errordetails_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_errordetails_v1_message_proto_rawDesc), len(file_temporal_server_api_errordetails_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_errordetails_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_errordetails_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_errordetails_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_server_api_errordetails_v1_message_proto = out.File
	file_temporal_server_api_errordetails_v1_message_proto_goTypes = nil
	file_temporal_server_api_errordetails_v1_message_proto_depIdxs = nil
}
