// The MIT License
//
// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/matchingservice/v1/request_response.proto

package matchingservice

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v11 "go.temporal.io/api/common/v1"
	v111 "go.temporal.io/api/deployment/v1"
	v19 "go.temporal.io/api/enums/v1"
	v16 "go.temporal.io/api/history/v1"
	v113 "go.temporal.io/api/nexus/v1"
	v15 "go.temporal.io/api/protocol/v1"
	v12 "go.temporal.io/api/query/v1"
	v14 "go.temporal.io/api/taskqueue/v1"
	v1 "go.temporal.io/api/workflowservice/v1"
	v17 "go.temporal.io/server/api/clock/v1"
	v112 "go.temporal.io/server/api/deployment/v1"
	v13 "go.temporal.io/server/api/history/v1"
	v110 "go.temporal.io/server/api/persistence/v1"
	v18 "go.temporal.io/server/api/taskqueue/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PollWorkflowTaskQueueRequest struct {
	state           protoimpl.MessageState           `protogen:"open.v1"`
	NamespaceId     string                           `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PollerId        string                           `protobuf:"bytes,2,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`
	PollRequest     *v1.PollWorkflowTaskQueueRequest `protobuf:"bytes,3,opt,name=poll_request,json=pollRequest,proto3" json:"poll_request,omitempty"`
	ForwardedSource string                           `protobuf:"bytes,4,opt,name=forwarded_source,json=forwardedSource,proto3" json:"forwarded_source,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PollWorkflowTaskQueueRequest) Reset() {
	*x = PollWorkflowTaskQueueRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollWorkflowTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollWorkflowTaskQueueRequest) ProtoMessage() {}

func (x *PollWorkflowTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollWorkflowTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*PollWorkflowTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{0}
}

func (x *PollWorkflowTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PollWorkflowTaskQueueRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

func (x *PollWorkflowTaskQueueRequest) GetPollRequest() *v1.PollWorkflowTaskQueueRequest {
	if x != nil {
		return x.PollRequest
	}
	return nil
}

func (x *PollWorkflowTaskQueueRequest) GetForwardedSource() string {
	if x != nil {
		return x.ForwardedSource
	}
	return ""
}

type PollWorkflowTaskQueueResponse struct {
	state                      protoimpl.MessageState         `protogen:"open.v1"`
	TaskToken                  []byte                         `protobuf:"bytes,1,opt,name=task_token,json=taskToken,proto3" json:"task_token,omitempty"`
	WorkflowExecution          *v11.WorkflowExecution         `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	WorkflowType               *v11.WorkflowType              `protobuf:"bytes,3,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	PreviousStartedEventId     int64                          `protobuf:"varint,4,opt,name=previous_started_event_id,json=previousStartedEventId,proto3" json:"previous_started_event_id,omitempty"`
	StartedEventId             int64                          `protobuf:"varint,5,opt,name=started_event_id,json=startedEventId,proto3" json:"started_event_id,omitempty"`
	Attempt                    int32                          `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	NextEventId                int64                          `protobuf:"varint,7,opt,name=next_event_id,json=nextEventId,proto3" json:"next_event_id,omitempty"`
	BacklogCountHint           int64                          `protobuf:"varint,8,opt,name=backlog_count_hint,json=backlogCountHint,proto3" json:"backlog_count_hint,omitempty"`
	StickyExecutionEnabled     bool                           `protobuf:"varint,9,opt,name=sticky_execution_enabled,json=stickyExecutionEnabled,proto3" json:"sticky_execution_enabled,omitempty"`
	Query                      *v12.WorkflowQuery             `protobuf:"bytes,10,opt,name=query,proto3" json:"query,omitempty"`
	TransientWorkflowTask      *v13.TransientWorkflowTaskInfo `protobuf:"bytes,11,opt,name=transient_workflow_task,json=transientWorkflowTask,proto3" json:"transient_workflow_task,omitempty"`
	WorkflowExecutionTaskQueue *v14.TaskQueue                 `protobuf:"bytes,12,opt,name=workflow_execution_task_queue,json=workflowExecutionTaskQueue,proto3" json:"workflow_execution_task_queue,omitempty"`
	BranchToken                []byte                         `protobuf:"bytes,14,opt,name=branch_token,json=branchToken,proto3" json:"branch_token,omitempty"`
	ScheduledTime              *timestamppb.Timestamp         `protobuf:"bytes,15,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	StartedTime                *timestamppb.Timestamp         `protobuf:"bytes,16,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	Queries                    map[string]*v12.WorkflowQuery  `protobuf:"bytes,17,rep,name=queries,proto3" json:"queries,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Messages                   []*v15.Message                 `protobuf:"bytes,18,rep,name=messages,proto3" json:"messages,omitempty"`
	// The history for this workflow, which will either be complete or partial. Partial histories
	// are sent to workers who have signaled that they are using a sticky queue when completing
	// a workflow task. Sticky query tasks will not include any history.
	History               *v16.History               `protobuf:"bytes,19,opt,name=history,proto3" json:"history,omitempty"`
	NextPageToken         []byte                     `protobuf:"bytes,20,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PollerScalingDecision *v14.PollerScalingDecision `protobuf:"bytes,21,opt,name=poller_scaling_decision,json=pollerScalingDecision,proto3" json:"poller_scaling_decision,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PollWorkflowTaskQueueResponse) Reset() {
	*x = PollWorkflowTaskQueueResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollWorkflowTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollWorkflowTaskQueueResponse) ProtoMessage() {}

func (x *PollWorkflowTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollWorkflowTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*PollWorkflowTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{1}
}

func (x *PollWorkflowTaskQueueResponse) GetTaskToken() []byte {
	if x != nil {
		return x.TaskToken
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetWorkflowExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetWorkflowType() *v11.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetPreviousStartedEventId() int64 {
	if x != nil {
		return x.PreviousStartedEventId
	}
	return 0
}

func (x *PollWorkflowTaskQueueResponse) GetStartedEventId() int64 {
	if x != nil {
		return x.StartedEventId
	}
	return 0
}

func (x *PollWorkflowTaskQueueResponse) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *PollWorkflowTaskQueueResponse) GetNextEventId() int64 {
	if x != nil {
		return x.NextEventId
	}
	return 0
}

func (x *PollWorkflowTaskQueueResponse) GetBacklogCountHint() int64 {
	if x != nil {
		return x.BacklogCountHint
	}
	return 0
}

func (x *PollWorkflowTaskQueueResponse) GetStickyExecutionEnabled() bool {
	if x != nil {
		return x.StickyExecutionEnabled
	}
	return false
}

func (x *PollWorkflowTaskQueueResponse) GetQuery() *v12.WorkflowQuery {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetTransientWorkflowTask() *v13.TransientWorkflowTaskInfo {
	if x != nil {
		return x.TransientWorkflowTask
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetWorkflowExecutionTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.WorkflowExecutionTaskQueue
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetBranchToken() []byte {
	if x != nil {
		return x.BranchToken
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetQueries() map[string]*v12.WorkflowQuery {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetMessages() []*v15.Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetHistory() *v16.History {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *PollWorkflowTaskQueueResponse) GetPollerScalingDecision() *v14.PollerScalingDecision {
	if x != nil {
		return x.PollerScalingDecision
	}
	return nil
}

type PollActivityTaskQueueRequest struct {
	state           protoimpl.MessageState           `protogen:"open.v1"`
	NamespaceId     string                           `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	PollerId        string                           `protobuf:"bytes,2,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`
	PollRequest     *v1.PollActivityTaskQueueRequest `protobuf:"bytes,3,opt,name=poll_request,json=pollRequest,proto3" json:"poll_request,omitempty"`
	ForwardedSource string                           `protobuf:"bytes,4,opt,name=forwarded_source,json=forwardedSource,proto3" json:"forwarded_source,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PollActivityTaskQueueRequest) Reset() {
	*x = PollActivityTaskQueueRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollActivityTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollActivityTaskQueueRequest) ProtoMessage() {}

func (x *PollActivityTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollActivityTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*PollActivityTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{2}
}

func (x *PollActivityTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PollActivityTaskQueueRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

func (x *PollActivityTaskQueueRequest) GetPollRequest() *v1.PollActivityTaskQueueRequest {
	if x != nil {
		return x.PollRequest
	}
	return nil
}

func (x *PollActivityTaskQueueRequest) GetForwardedSource() string {
	if x != nil {
		return x.ForwardedSource
	}
	return ""
}

type PollActivityTaskQueueResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskToken         []byte                 `protobuf:"bytes,1,opt,name=task_token,json=taskToken,proto3" json:"task_token,omitempty"`
	WorkflowExecution *v11.WorkflowExecution `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	ActivityId        string                 `protobuf:"bytes,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityType      *v11.ActivityType      `protobuf:"bytes,4,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	Input             *v11.Payloads          `protobuf:"bytes,5,opt,name=input,proto3" json:"input,omitempty"`
	ScheduledTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=scheduled_time,json=scheduledTime,proto3" json:"scheduled_time,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToCloseTimeout *durationpb.Duration   `protobuf:"bytes,7,opt,name=schedule_to_close_timeout,json=scheduleToCloseTimeout,proto3" json:"schedule_to_close_timeout,omitempty"`
	StartedTime            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_time,json=startedTime,proto3" json:"started_time,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	StartToCloseTimeout         *durationpb.Duration       `protobuf:"bytes,9,opt,name=start_to_close_timeout,json=startToCloseTimeout,proto3" json:"start_to_close_timeout,omitempty"`
	HeartbeatTimeout            *durationpb.Duration       `protobuf:"bytes,10,opt,name=heartbeat_timeout,json=heartbeatTimeout,proto3" json:"heartbeat_timeout,omitempty"`
	Attempt                     int32                      `protobuf:"varint,11,opt,name=attempt,proto3" json:"attempt,omitempty"`
	CurrentAttemptScheduledTime *timestamppb.Timestamp     `protobuf:"bytes,12,opt,name=current_attempt_scheduled_time,json=currentAttemptScheduledTime,proto3" json:"current_attempt_scheduled_time,omitempty"`
	HeartbeatDetails            *v11.Payloads              `protobuf:"bytes,13,opt,name=heartbeat_details,json=heartbeatDetails,proto3" json:"heartbeat_details,omitempty"`
	WorkflowType                *v11.WorkflowType          `protobuf:"bytes,14,opt,name=workflow_type,json=workflowType,proto3" json:"workflow_type,omitempty"`
	WorkflowNamespace           string                     `protobuf:"bytes,15,opt,name=workflow_namespace,json=workflowNamespace,proto3" json:"workflow_namespace,omitempty"`
	Header                      *v11.Header                `protobuf:"bytes,16,opt,name=header,proto3" json:"header,omitempty"`
	PollerScalingDecision       *v14.PollerScalingDecision `protobuf:"bytes,17,opt,name=poller_scaling_decision,json=pollerScalingDecision,proto3" json:"poller_scaling_decision,omitempty"`
	Priority                    *v11.Priority              `protobuf:"bytes,18,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *PollActivityTaskQueueResponse) Reset() {
	*x = PollActivityTaskQueueResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollActivityTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollActivityTaskQueueResponse) ProtoMessage() {}

func (x *PollActivityTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollActivityTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*PollActivityTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{3}
}

func (x *PollActivityTaskQueueResponse) GetTaskToken() []byte {
	if x != nil {
		return x.TaskToken
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetWorkflowExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *PollActivityTaskQueueResponse) GetActivityType() *v11.ActivityType {
	if x != nil {
		return x.ActivityType
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetInput() *v11.Payloads {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScheduledTime
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetScheduleToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToCloseTimeout
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetStartedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedTime
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetStartToCloseTimeout() *durationpb.Duration {
	if x != nil {
		return x.StartToCloseTimeout
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetHeartbeatTimeout() *durationpb.Duration {
	if x != nil {
		return x.HeartbeatTimeout
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetAttempt() int32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *PollActivityTaskQueueResponse) GetCurrentAttemptScheduledTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentAttemptScheduledTime
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetHeartbeatDetails() *v11.Payloads {
	if x != nil {
		return x.HeartbeatDetails
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetWorkflowType() *v11.WorkflowType {
	if x != nil {
		return x.WorkflowType
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetWorkflowNamespace() string {
	if x != nil {
		return x.WorkflowNamespace
	}
	return ""
}

func (x *PollActivityTaskQueueResponse) GetHeader() *v11.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetPollerScalingDecision() *v14.PollerScalingDecision {
	if x != nil {
		return x.PollerScalingDecision
	}
	return nil
}

func (x *PollActivityTaskQueueResponse) GetPriority() *v11.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type AddWorkflowTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId      string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution        *v11.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	TaskQueue        *v14.TaskQueue         `protobuf:"bytes,3,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	ScheduledEventId int64                  `protobuf:"varint,4,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToStartTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=schedule_to_start_timeout,json=scheduleToStartTimeout,proto3" json:"schedule_to_start_timeout,omitempty"`
	Clock                  *v17.VectorClock     `protobuf:"bytes,9,opt,name=clock,proto3" json:"clock,omitempty"`
	// How this task should be directed by matching. (Missing means the default
	// for TaskVersionDirective, which is unversioned.)
	VersionDirective *v18.TaskVersionDirective `protobuf:"bytes,10,opt,name=version_directive,json=versionDirective,proto3" json:"version_directive,omitempty"`
	ForwardInfo      *v18.TaskForwardInfo      `protobuf:"bytes,11,opt,name=forward_info,json=forwardInfo,proto3" json:"forward_info,omitempty"`
	Priority         *v11.Priority             `protobuf:"bytes,12,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddWorkflowTaskRequest) Reset() {
	*x = AddWorkflowTaskRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowTaskRequest) ProtoMessage() {}

func (x *AddWorkflowTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowTaskRequest.ProtoReflect.Descriptor instead.
func (*AddWorkflowTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{4}
}

func (x *AddWorkflowTaskRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *AddWorkflowTaskRequest) GetExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *AddWorkflowTaskRequest) GetScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToStartTimeout
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetClock() *v17.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetVersionDirective() *v18.TaskVersionDirective {
	if x != nil {
		return x.VersionDirective
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetForwardInfo() *v18.TaskForwardInfo {
	if x != nil {
		return x.ForwardInfo
	}
	return nil
}

func (x *AddWorkflowTaskRequest) GetPriority() *v11.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type AddWorkflowTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When present, it means that the task is spooled to a versioned queue of this build ID
	// Deprecated. [cleanup-old-wv]
	AssignedBuildId string `protobuf:"bytes,1,opt,name=assigned_build_id,json=assignedBuildId,proto3" json:"assigned_build_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AddWorkflowTaskResponse) Reset() {
	*x = AddWorkflowTaskResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddWorkflowTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkflowTaskResponse) ProtoMessage() {}

func (x *AddWorkflowTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkflowTaskResponse.ProtoReflect.Descriptor instead.
func (*AddWorkflowTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{5}
}

func (x *AddWorkflowTaskResponse) GetAssignedBuildId() string {
	if x != nil {
		return x.AssignedBuildId
	}
	return ""
}

type AddActivityTaskRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId      string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution        *v11.WorkflowExecution `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	TaskQueue        *v14.TaskQueue         `protobuf:"bytes,4,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	ScheduledEventId int64                  `protobuf:"varint,5,opt,name=scheduled_event_id,json=scheduledEventId,proto3" json:"scheduled_event_id,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "to" is used to indicate interval. --)
	ScheduleToStartTimeout *durationpb.Duration `protobuf:"bytes,6,opt,name=schedule_to_start_timeout,json=scheduleToStartTimeout,proto3" json:"schedule_to_start_timeout,omitempty"`
	Clock                  *v17.VectorClock     `protobuf:"bytes,9,opt,name=clock,proto3" json:"clock,omitempty"`
	// How this task should be directed by matching. (Missing means the default
	// for TaskVersionDirective, which is unversioned.)
	VersionDirective *v18.TaskVersionDirective `protobuf:"bytes,10,opt,name=version_directive,json=versionDirective,proto3" json:"version_directive,omitempty"`
	ForwardInfo      *v18.TaskForwardInfo      `protobuf:"bytes,11,opt,name=forward_info,json=forwardInfo,proto3" json:"forward_info,omitempty"`
	Stamp            int32                     `protobuf:"varint,12,opt,name=stamp,proto3" json:"stamp,omitempty"`
	Priority         *v11.Priority             `protobuf:"bytes,13,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddActivityTaskRequest) Reset() {
	*x = AddActivityTaskRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityTaskRequest) ProtoMessage() {}

func (x *AddActivityTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityTaskRequest.ProtoReflect.Descriptor instead.
func (*AddActivityTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{6}
}

func (x *AddActivityTaskRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *AddActivityTaskRequest) GetExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *AddActivityTaskRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *AddActivityTaskRequest) GetScheduledEventId() int64 {
	if x != nil {
		return x.ScheduledEventId
	}
	return 0
}

func (x *AddActivityTaskRequest) GetScheduleToStartTimeout() *durationpb.Duration {
	if x != nil {
		return x.ScheduleToStartTimeout
	}
	return nil
}

func (x *AddActivityTaskRequest) GetClock() *v17.VectorClock {
	if x != nil {
		return x.Clock
	}
	return nil
}

func (x *AddActivityTaskRequest) GetVersionDirective() *v18.TaskVersionDirective {
	if x != nil {
		return x.VersionDirective
	}
	return nil
}

func (x *AddActivityTaskRequest) GetForwardInfo() *v18.TaskForwardInfo {
	if x != nil {
		return x.ForwardInfo
	}
	return nil
}

func (x *AddActivityTaskRequest) GetStamp() int32 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *AddActivityTaskRequest) GetPriority() *v11.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type AddActivityTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// When present, it means that the task is spooled to a versioned queue of this build ID
	// Deprecated. [cleanup-old-wv]
	AssignedBuildId string `protobuf:"bytes,1,opt,name=assigned_build_id,json=assignedBuildId,proto3" json:"assigned_build_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AddActivityTaskResponse) Reset() {
	*x = AddActivityTaskResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddActivityTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddActivityTaskResponse) ProtoMessage() {}

func (x *AddActivityTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddActivityTaskResponse.ProtoReflect.Descriptor instead.
func (*AddActivityTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{7}
}

func (x *AddActivityTaskResponse) GetAssignedBuildId() string {
	if x != nil {
		return x.AssignedBuildId
	}
	return ""
}

type QueryWorkflowRequest struct {
	state        protoimpl.MessageState   `protogen:"open.v1"`
	NamespaceId  string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue    *v14.TaskQueue           `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	QueryRequest *v1.QueryWorkflowRequest `protobuf:"bytes,3,opt,name=query_request,json=queryRequest,proto3" json:"query_request,omitempty"`
	// How this task should be directed by matching. (Missing means the default
	// for TaskVersionDirective, which is unversioned.)
	VersionDirective *v18.TaskVersionDirective `protobuf:"bytes,5,opt,name=version_directive,json=versionDirective,proto3" json:"version_directive,omitempty"`
	ForwardInfo      *v18.TaskForwardInfo      `protobuf:"bytes,6,opt,name=forward_info,json=forwardInfo,proto3" json:"forward_info,omitempty"`
	Priority         *v11.Priority             `protobuf:"bytes,7,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryWorkflowRequest) Reset() {
	*x = QueryWorkflowRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWorkflowRequest) ProtoMessage() {}

func (x *QueryWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWorkflowRequest.ProtoReflect.Descriptor instead.
func (*QueryWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{8}
}

func (x *QueryWorkflowRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *QueryWorkflowRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *QueryWorkflowRequest) GetQueryRequest() *v1.QueryWorkflowRequest {
	if x != nil {
		return x.QueryRequest
	}
	return nil
}

func (x *QueryWorkflowRequest) GetVersionDirective() *v18.TaskVersionDirective {
	if x != nil {
		return x.VersionDirective
	}
	return nil
}

func (x *QueryWorkflowRequest) GetForwardInfo() *v18.TaskForwardInfo {
	if x != nil {
		return x.ForwardInfo
	}
	return nil
}

func (x *QueryWorkflowRequest) GetPriority() *v11.Priority {
	if x != nil {
		return x.Priority
	}
	return nil
}

type QueryWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryResult   *v11.Payloads          `protobuf:"bytes,1,opt,name=query_result,json=queryResult,proto3" json:"query_result,omitempty"`
	QueryRejected *v12.QueryRejected     `protobuf:"bytes,2,opt,name=query_rejected,json=queryRejected,proto3" json:"query_rejected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryWorkflowResponse) Reset() {
	*x = QueryWorkflowResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWorkflowResponse) ProtoMessage() {}

func (x *QueryWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWorkflowResponse.ProtoReflect.Descriptor instead.
func (*QueryWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{9}
}

func (x *QueryWorkflowResponse) GetQueryResult() *v11.Payloads {
	if x != nil {
		return x.QueryResult
	}
	return nil
}

func (x *QueryWorkflowResponse) GetQueryRejected() *v12.QueryRejected {
	if x != nil {
		return x.QueryRejected
	}
	return nil
}

type RespondQueryTaskCompletedRequest struct {
	state            protoimpl.MessageState               `protogen:"open.v1"`
	NamespaceId      string                               `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue        *v14.TaskQueue                       `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	TaskId           string                               `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	CompletedRequest *v1.RespondQueryTaskCompletedRequest `protobuf:"bytes,4,opt,name=completed_request,json=completedRequest,proto3" json:"completed_request,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RespondQueryTaskCompletedRequest) Reset() {
	*x = RespondQueryTaskCompletedRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondQueryTaskCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondQueryTaskCompletedRequest) ProtoMessage() {}

func (x *RespondQueryTaskCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondQueryTaskCompletedRequest.ProtoReflect.Descriptor instead.
func (*RespondQueryTaskCompletedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{10}
}

func (x *RespondQueryTaskCompletedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondQueryTaskCompletedRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *RespondQueryTaskCompletedRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RespondQueryTaskCompletedRequest) GetCompletedRequest() *v1.RespondQueryTaskCompletedRequest {
	if x != nil {
		return x.CompletedRequest
	}
	return nil
}

type RespondQueryTaskCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondQueryTaskCompletedResponse) Reset() {
	*x = RespondQueryTaskCompletedResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondQueryTaskCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondQueryTaskCompletedResponse) ProtoMessage() {}

func (x *RespondQueryTaskCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondQueryTaskCompletedResponse.ProtoReflect.Descriptor instead.
func (*RespondQueryTaskCompletedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{11}
}

type CancelOutstandingPollRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueueType v19.TaskQueueType      `protobuf:"varint,2,opt,name=task_queue_type,json=taskQueueType,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_type,omitempty"`
	TaskQueue     *v14.TaskQueue         `protobuf:"bytes,3,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	PollerId      string                 `protobuf:"bytes,4,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelOutstandingPollRequest) Reset() {
	*x = CancelOutstandingPollRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelOutstandingPollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOutstandingPollRequest) ProtoMessage() {}

func (x *CancelOutstandingPollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOutstandingPollRequest.ProtoReflect.Descriptor instead.
func (*CancelOutstandingPollRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{12}
}

func (x *CancelOutstandingPollRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CancelOutstandingPollRequest) GetTaskQueueType() v19.TaskQueueType {
	if x != nil {
		return x.TaskQueueType
	}
	return v19.TaskQueueType(0)
}

func (x *CancelOutstandingPollRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *CancelOutstandingPollRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

type CancelOutstandingPollResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelOutstandingPollResponse) Reset() {
	*x = CancelOutstandingPollResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelOutstandingPollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOutstandingPollResponse) ProtoMessage() {}

func (x *CancelOutstandingPollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOutstandingPollResponse.ProtoReflect.Descriptor instead.
func (*CancelOutstandingPollResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{13}
}

type DescribeTaskQueueRequest struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	NamespaceId   string                       `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	DescRequest   *v1.DescribeTaskQueueRequest `protobuf:"bytes,2,opt,name=desc_request,json=descRequest,proto3" json:"desc_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTaskQueueRequest) Reset() {
	*x = DescribeTaskQueueRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueueRequest) ProtoMessage() {}

func (x *DescribeTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeTaskQueueRequest) GetDescRequest() *v1.DescribeTaskQueueRequest {
	if x != nil {
		return x.DescRequest
	}
	return nil
}

type DescribeTaskQueueResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	DescResponse  *v1.DescribeTaskQueueResponse `protobuf:"bytes,3,opt,name=desc_response,json=descResponse,proto3" json:"desc_response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTaskQueueResponse) Reset() {
	*x = DescribeTaskQueueResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueueResponse) ProtoMessage() {}

func (x *DescribeTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeTaskQueueResponse) GetDescResponse() *v1.DescribeTaskQueueResponse {
	if x != nil {
		return x.DescResponse
	}
	return nil
}

type DescribeTaskQueuePartitionRequest struct {
	state              protoimpl.MessageState         `protogen:"open.v1"`
	NamespaceId        string                         `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueuePartition *v18.TaskQueuePartition        `protobuf:"bytes,2,opt,name=task_queue_partition,json=taskQueuePartition,proto3" json:"task_queue_partition,omitempty"`
	Versions           *v14.TaskQueueVersionSelection `protobuf:"bytes,3,opt,name=versions,proto3" json:"versions,omitempty"`
	// Report task queue stats for the requested task queue types and versions
	ReportStats bool `protobuf:"varint,4,opt,name=report_stats,json=reportStats,proto3" json:"report_stats,omitempty"`
	// Report list of pollers for requested task queue types and versions
	ReportPollers                 bool `protobuf:"varint,5,opt,name=report_pollers,json=reportPollers,proto3" json:"report_pollers,omitempty"`
	ReportInternalTaskQueueStatus bool `protobuf:"varint,6,opt,name=report_internal_task_queue_status,json=reportInternalTaskQueueStatus,proto3" json:"report_internal_task_queue_status,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *DescribeTaskQueuePartitionRequest) Reset() {
	*x = DescribeTaskQueuePartitionRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueuePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueuePartitionRequest) ProtoMessage() {}

func (x *DescribeTaskQueuePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueuePartitionRequest.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueuePartitionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{16}
}

func (x *DescribeTaskQueuePartitionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DescribeTaskQueuePartitionRequest) GetTaskQueuePartition() *v18.TaskQueuePartition {
	if x != nil {
		return x.TaskQueuePartition
	}
	return nil
}

func (x *DescribeTaskQueuePartitionRequest) GetVersions() *v14.TaskQueueVersionSelection {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *DescribeTaskQueuePartitionRequest) GetReportStats() bool {
	if x != nil {
		return x.ReportStats
	}
	return false
}

func (x *DescribeTaskQueuePartitionRequest) GetReportPollers() bool {
	if x != nil {
		return x.ReportPollers
	}
	return false
}

func (x *DescribeTaskQueuePartitionRequest) GetReportInternalTaskQueueStatus() bool {
	if x != nil {
		return x.ReportInternalTaskQueueStatus
	}
	return false
}

type DescribeTaskQueuePartitionResponse struct {
	state                protoimpl.MessageState                       `protogen:"open.v1"`
	VersionsInfoInternal map[string]*v18.TaskQueueVersionInfoInternal `protobuf:"bytes,1,rep,name=versions_info_internal,json=versionsInfoInternal,proto3" json:"versions_info_internal,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeTaskQueuePartitionResponse) Reset() {
	*x = DescribeTaskQueuePartitionResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueuePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueuePartitionResponse) ProtoMessage() {}

func (x *DescribeTaskQueuePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueuePartitionResponse.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueuePartitionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{17}
}

func (x *DescribeTaskQueuePartitionResponse) GetVersionsInfoInternal() map[string]*v18.TaskQueueVersionInfoInternal {
	if x != nil {
		return x.VersionsInfoInternal
	}
	return nil
}

type ListTaskQueuePartitionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NamespaceId   string                 `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue     *v14.TaskQueue         `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTaskQueuePartitionsRequest) Reset() {
	*x = ListTaskQueuePartitionsRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTaskQueuePartitionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskQueuePartitionsRequest) ProtoMessage() {}

func (x *ListTaskQueuePartitionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskQueuePartitionsRequest.ProtoReflect.Descriptor instead.
func (*ListTaskQueuePartitionsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{18}
}

func (x *ListTaskQueuePartitionsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListTaskQueuePartitionsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ListTaskQueuePartitionsRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

type ListTaskQueuePartitionsResponse struct {
	state                       protoimpl.MessageState            `protogen:"open.v1"`
	ActivityTaskQueuePartitions []*v14.TaskQueuePartitionMetadata `protobuf:"bytes,1,rep,name=activity_task_queue_partitions,json=activityTaskQueuePartitions,proto3" json:"activity_task_queue_partitions,omitempty"`
	WorkflowTaskQueuePartitions []*v14.TaskQueuePartitionMetadata `protobuf:"bytes,2,rep,name=workflow_task_queue_partitions,json=workflowTaskQueuePartitions,proto3" json:"workflow_task_queue_partitions,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListTaskQueuePartitionsResponse) Reset() {
	*x = ListTaskQueuePartitionsResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTaskQueuePartitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTaskQueuePartitionsResponse) ProtoMessage() {}

func (x *ListTaskQueuePartitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTaskQueuePartitionsResponse.ProtoReflect.Descriptor instead.
func (*ListTaskQueuePartitionsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{19}
}

func (x *ListTaskQueuePartitionsResponse) GetActivityTaskQueuePartitions() []*v14.TaskQueuePartitionMetadata {
	if x != nil {
		return x.ActivityTaskQueuePartitions
	}
	return nil
}

func (x *ListTaskQueuePartitionsResponse) GetWorkflowTaskQueuePartitions() []*v14.TaskQueuePartitionMetadata {
	if x != nil {
		return x.WorkflowTaskQueuePartitions
	}
	return nil
}

// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: UpdateWorkerBuildIdCompatibilityRequest doesn't follow Google API format --)
//
// (-- api-linter: core::0134::request-resource-required=disabled
//
//	aip.dev/not-precedent: UpdateWorkerBuildIdCompatibilityRequest RPC doesn't follow Google API format. --)
type UpdateWorkerBuildIdCompatibilityRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Types that are valid to be assigned to Operation:
	//
	//	*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest_
	//	*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds_
	//	*UpdateWorkerBuildIdCompatibilityRequest_PersistUnknownBuildId
	Operation     isUpdateWorkerBuildIdCompatibilityRequest_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) Reset() {
	*x = UpdateWorkerBuildIdCompatibilityRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerBuildIdCompatibilityRequest) ProtoMessage() {}

func (x *UpdateWorkerBuildIdCompatibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerBuildIdCompatibilityRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkerBuildIdCompatibilityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetOperation() isUpdateWorkerBuildIdCompatibilityRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetApplyPublicRequest() *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest {
	if x != nil {
		if x, ok := x.Operation.(*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest_); ok {
			return x.ApplyPublicRequest
		}
	}
	return nil
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetRemoveBuildIds() *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds {
	if x != nil {
		if x, ok := x.Operation.(*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds_); ok {
			return x.RemoveBuildIds
		}
	}
	return nil
}

func (x *UpdateWorkerBuildIdCompatibilityRequest) GetPersistUnknownBuildId() string {
	if x != nil {
		if x, ok := x.Operation.(*UpdateWorkerBuildIdCompatibilityRequest_PersistUnknownBuildId); ok {
			return x.PersistUnknownBuildId
		}
	}
	return ""
}

type isUpdateWorkerBuildIdCompatibilityRequest_Operation interface {
	isUpdateWorkerBuildIdCompatibilityRequest_Operation()
}

type UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest_ struct {
	ApplyPublicRequest *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest `protobuf:"bytes,3,opt,name=apply_public_request,json=applyPublicRequest,proto3,oneof"`
}

type UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds_ struct {
	RemoveBuildIds *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds `protobuf:"bytes,4,opt,name=remove_build_ids,json=removeBuildIds,proto3,oneof"`
}

type UpdateWorkerBuildIdCompatibilityRequest_PersistUnknownBuildId struct {
	PersistUnknownBuildId string `protobuf:"bytes,5,opt,name=persist_unknown_build_id,json=persistUnknownBuildId,proto3,oneof"`
}

func (*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest_) isUpdateWorkerBuildIdCompatibilityRequest_Operation() {
}

func (*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds_) isUpdateWorkerBuildIdCompatibilityRequest_Operation() {
}

func (*UpdateWorkerBuildIdCompatibilityRequest_PersistUnknownBuildId) isUpdateWorkerBuildIdCompatibilityRequest_Operation() {
}

type UpdateWorkerBuildIdCompatibilityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerBuildIdCompatibilityResponse) Reset() {
	*x = UpdateWorkerBuildIdCompatibilityResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerBuildIdCompatibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerBuildIdCompatibilityResponse) ProtoMessage() {}

func (x *UpdateWorkerBuildIdCompatibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerBuildIdCompatibilityResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkerBuildIdCompatibilityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{21}
}

type GetWorkerVersioningRulesRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*GetWorkerVersioningRulesRequest_Request
	Command       isGetWorkerVersioningRulesRequest_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerVersioningRulesRequest) Reset() {
	*x = GetWorkerVersioningRulesRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerVersioningRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerVersioningRulesRequest) ProtoMessage() {}

func (x *GetWorkerVersioningRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerVersioningRulesRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerVersioningRulesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{22}
}

func (x *GetWorkerVersioningRulesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkerVersioningRulesRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *GetWorkerVersioningRulesRequest) GetCommand() isGetWorkerVersioningRulesRequest_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *GetWorkerVersioningRulesRequest) GetRequest() *v1.GetWorkerVersioningRulesRequest {
	if x != nil {
		if x, ok := x.Command.(*GetWorkerVersioningRulesRequest_Request); ok {
			return x.Request
		}
	}
	return nil
}

type isGetWorkerVersioningRulesRequest_Command interface {
	isGetWorkerVersioningRulesRequest_Command()
}

type GetWorkerVersioningRulesRequest_Request struct {
	Request *v1.GetWorkerVersioningRulesRequest `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

func (*GetWorkerVersioningRulesRequest_Request) isGetWorkerVersioningRulesRequest_Command() {}

type GetWorkerVersioningRulesResponse struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Response      *v1.GetWorkerVersioningRulesResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerVersioningRulesResponse) Reset() {
	*x = GetWorkerVersioningRulesResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerVersioningRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerVersioningRulesResponse) ProtoMessage() {}

func (x *GetWorkerVersioningRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerVersioningRulesResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerVersioningRulesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{23}
}

func (x *GetWorkerVersioningRulesResponse) GetResponse() *v1.GetWorkerVersioningRulesResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: UpdateWorkerVersioningRulesRequest doesn't follow Google API format --)
//
// (-- api-linter: core::0134::request-resource-required=disabled
//
//	aip.dev/not-precedent: UpdateWorkerVersioningRulesRequest RPC doesn't follow Google API format. --)
type UpdateWorkerVersioningRulesRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Types that are valid to be assigned to Command:
	//
	//	*UpdateWorkerVersioningRulesRequest_Request
	Command       isUpdateWorkerVersioningRulesRequest_Command `protobuf_oneof:"command"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerVersioningRulesRequest) Reset() {
	*x = UpdateWorkerVersioningRulesRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerVersioningRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerVersioningRulesRequest) ProtoMessage() {}

func (x *UpdateWorkerVersioningRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerVersioningRulesRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkerVersioningRulesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateWorkerVersioningRulesRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateWorkerVersioningRulesRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *UpdateWorkerVersioningRulesRequest) GetCommand() isUpdateWorkerVersioningRulesRequest_Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *UpdateWorkerVersioningRulesRequest) GetRequest() *v1.UpdateWorkerVersioningRulesRequest {
	if x != nil {
		if x, ok := x.Command.(*UpdateWorkerVersioningRulesRequest_Request); ok {
			return x.Request
		}
	}
	return nil
}

type isUpdateWorkerVersioningRulesRequest_Command interface {
	isUpdateWorkerVersioningRulesRequest_Command()
}

type UpdateWorkerVersioningRulesRequest_Request struct {
	Request *v1.UpdateWorkerVersioningRulesRequest `protobuf:"bytes,3,opt,name=request,proto3,oneof"`
}

func (*UpdateWorkerVersioningRulesRequest_Request) isUpdateWorkerVersioningRulesRequest_Command() {}

type UpdateWorkerVersioningRulesResponse struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Response      *v1.UpdateWorkerVersioningRulesResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerVersioningRulesResponse) Reset() {
	*x = UpdateWorkerVersioningRulesResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerVersioningRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerVersioningRulesResponse) ProtoMessage() {}

func (x *UpdateWorkerVersioningRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerVersioningRulesResponse.ProtoReflect.Descriptor instead.
func (*UpdateWorkerVersioningRulesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateWorkerVersioningRulesResponse) GetResponse() *v1.UpdateWorkerVersioningRulesResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetWorkerBuildIdCompatibilityRequest struct {
	state         protoimpl.MessageState                   `protogen:"open.v1"`
	NamespaceId   string                                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Request       *v1.GetWorkerBuildIdCompatibilityRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerBuildIdCompatibilityRequest) Reset() {
	*x = GetWorkerBuildIdCompatibilityRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerBuildIdCompatibilityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerBuildIdCompatibilityRequest) ProtoMessage() {}

func (x *GetWorkerBuildIdCompatibilityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerBuildIdCompatibilityRequest.ProtoReflect.Descriptor instead.
func (*GetWorkerBuildIdCompatibilityRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{26}
}

func (x *GetWorkerBuildIdCompatibilityRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkerBuildIdCompatibilityRequest) GetRequest() *v1.GetWorkerBuildIdCompatibilityRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetWorkerBuildIdCompatibilityResponse struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	Response      *v1.GetWorkerBuildIdCompatibilityResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWorkerBuildIdCompatibilityResponse) Reset() {
	*x = GetWorkerBuildIdCompatibilityResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkerBuildIdCompatibilityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkerBuildIdCompatibilityResponse) ProtoMessage() {}

func (x *GetWorkerBuildIdCompatibilityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkerBuildIdCompatibilityResponse.ProtoReflect.Descriptor instead.
func (*GetWorkerBuildIdCompatibilityResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{27}
}

func (x *GetWorkerBuildIdCompatibilityResponse) GetResponse() *v1.GetWorkerBuildIdCompatibilityResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetTaskQueueUserDataRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// The task queue to fetch data from. The task queue is always considered as a normal
	// queue, since sticky queues have no user data.
	TaskQueue     string            `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	TaskQueueType v19.TaskQueueType `protobuf:"varint,5,opt,name=task_queue_type,json=taskQueueType,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_type,omitempty"`
	// The value of the last known user data version.
	// If the requester has no data, it should set this to 0.
	// This value must not be set to a negative number (note that our linter suggests avoiding uint64).
	LastKnownUserDataVersion int64 `protobuf:"varint,3,opt,name=last_known_user_data_version,json=lastKnownUserDataVersion,proto3" json:"last_known_user_data_version,omitempty"`
	// If set and last_known_user_data_version is the current version, block until new data is
	// available (or timeout).
	WaitNewData bool `protobuf:"varint,4,opt,name=wait_new_data,json=waitNewData,proto3" json:"wait_new_data,omitempty"`
	// If set, do not load task queue if unloaded. (Returns FailedPrecondition error in that case.)
	OnlyIfLoaded  bool `protobuf:"varint,6,opt,name=only_if_loaded,json=onlyIfLoaded,proto3" json:"only_if_loaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskQueueUserDataRequest) Reset() {
	*x = GetTaskQueueUserDataRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskQueueUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskQueueUserDataRequest) ProtoMessage() {}

func (x *GetTaskQueueUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskQueueUserDataRequest.ProtoReflect.Descriptor instead.
func (*GetTaskQueueUserDataRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{28}
}

func (x *GetTaskQueueUserDataRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetTaskQueueUserDataRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *GetTaskQueueUserDataRequest) GetTaskQueueType() v19.TaskQueueType {
	if x != nil {
		return x.TaskQueueType
	}
	return v19.TaskQueueType(0)
}

func (x *GetTaskQueueUserDataRequest) GetLastKnownUserDataVersion() int64 {
	if x != nil {
		return x.LastKnownUserDataVersion
	}
	return 0
}

func (x *GetTaskQueueUserDataRequest) GetWaitNewData() bool {
	if x != nil {
		return x.WaitNewData
	}
	return false
}

func (x *GetTaskQueueUserDataRequest) GetOnlyIfLoaded() bool {
	if x != nil {
		return x.OnlyIfLoaded
	}
	return false
}

type GetTaskQueueUserDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Versioned user data, set if the task queue has user data and the request's last_known_user_data_version is less
	// than the version cached in the root partition.
	UserData      *v110.VersionedTaskQueueUserData `protobuf:"bytes,2,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskQueueUserDataResponse) Reset() {
	*x = GetTaskQueueUserDataResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskQueueUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskQueueUserDataResponse) ProtoMessage() {}

func (x *GetTaskQueueUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskQueueUserDataResponse.ProtoReflect.Descriptor instead.
func (*GetTaskQueueUserDataResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{29}
}

func (x *GetTaskQueueUserDataResponse) GetUserData() *v110.VersionedTaskQueueUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type SyncDeploymentUserDataRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Note: this is the task queue type being modified, but this field should not be used for
	// routing, the user data is owned by the WORKFLOW task queue.
	// Deprecated. Use `task_queue_types`.
	TaskQueueType  v19.TaskQueueType   `protobuf:"varint,3,opt,name=task_queue_type,json=taskQueueType,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_type,omitempty"`
	TaskQueueTypes []v19.TaskQueueType `protobuf:"varint,8,rep,packed,name=task_queue_types,json=taskQueueTypes,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_types,omitempty"`
	// This is the deployment being modified.
	// Deprecated.
	Deployment *v111.Deployment `protobuf:"bytes,4,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// Data for this deployment.
	// Deprecated.
	Data *v112.TaskQueueData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	// Types that are valid to be assigned to Operation:
	//
	//	*SyncDeploymentUserDataRequest_UpdateVersionData
	//	*SyncDeploymentUserDataRequest_ForgetVersion
	Operation     isSyncDeploymentUserDataRequest_Operation `protobuf_oneof:"operation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncDeploymentUserDataRequest) Reset() {
	*x = SyncDeploymentUserDataRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDeploymentUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDeploymentUserDataRequest) ProtoMessage() {}

func (x *SyncDeploymentUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDeploymentUserDataRequest.ProtoReflect.Descriptor instead.
func (*SyncDeploymentUserDataRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{30}
}

func (x *SyncDeploymentUserDataRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncDeploymentUserDataRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *SyncDeploymentUserDataRequest) GetTaskQueueType() v19.TaskQueueType {
	if x != nil {
		return x.TaskQueueType
	}
	return v19.TaskQueueType(0)
}

func (x *SyncDeploymentUserDataRequest) GetTaskQueueTypes() []v19.TaskQueueType {
	if x != nil {
		return x.TaskQueueTypes
	}
	return nil
}

func (x *SyncDeploymentUserDataRequest) GetDeployment() *v111.Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *SyncDeploymentUserDataRequest) GetData() *v112.TaskQueueData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SyncDeploymentUserDataRequest) GetOperation() isSyncDeploymentUserDataRequest_Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *SyncDeploymentUserDataRequest) GetUpdateVersionData() *v112.DeploymentVersionData {
	if x != nil {
		if x, ok := x.Operation.(*SyncDeploymentUserDataRequest_UpdateVersionData); ok {
			return x.UpdateVersionData
		}
	}
	return nil
}

func (x *SyncDeploymentUserDataRequest) GetForgetVersion() *v112.WorkerDeploymentVersion {
	if x != nil {
		if x, ok := x.Operation.(*SyncDeploymentUserDataRequest_ForgetVersion); ok {
			return x.ForgetVersion
		}
	}
	return nil
}

type isSyncDeploymentUserDataRequest_Operation interface {
	isSyncDeploymentUserDataRequest_Operation()
}

type SyncDeploymentUserDataRequest_UpdateVersionData struct {
	// The deployment version and its data that is being updated.
	UpdateVersionData *v112.DeploymentVersionData `protobuf:"bytes,6,opt,name=update_version_data,json=updateVersionData,proto3,oneof"`
}

type SyncDeploymentUserDataRequest_ForgetVersion struct {
	// The version whose data should be cleaned from the task queue.
	ForgetVersion *v112.WorkerDeploymentVersion `protobuf:"bytes,7,opt,name=forget_version,json=forgetVersion,proto3,oneof"`
}

func (*SyncDeploymentUserDataRequest_UpdateVersionData) isSyncDeploymentUserDataRequest_Operation() {}

func (*SyncDeploymentUserDataRequest_ForgetVersion) isSyncDeploymentUserDataRequest_Operation() {}

type SyncDeploymentUserDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// New task queue user data version. Can be used to wait for propagation.
	Version       int64 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncDeploymentUserDataResponse) Reset() {
	*x = SyncDeploymentUserDataResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncDeploymentUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncDeploymentUserDataResponse) ProtoMessage() {}

func (x *SyncDeploymentUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncDeploymentUserDataResponse.ProtoReflect.Descriptor instead.
func (*SyncDeploymentUserDataResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{31}
}

func (x *SyncDeploymentUserDataResponse) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ApplyTaskQueueUserDataReplicationEventRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId   string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue     string                  `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	UserData      *v110.TaskQueueUserData `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) Reset() {
	*x = ApplyTaskQueueUserDataReplicationEventRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTaskQueueUserDataReplicationEventRequest) ProtoMessage() {}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTaskQueueUserDataReplicationEventRequest.ProtoReflect.Descriptor instead.
func (*ApplyTaskQueueUserDataReplicationEventRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{32}
}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *ApplyTaskQueueUserDataReplicationEventRequest) GetUserData() *v110.TaskQueueUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ApplyTaskQueueUserDataReplicationEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyTaskQueueUserDataReplicationEventResponse) Reset() {
	*x = ApplyTaskQueueUserDataReplicationEventResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyTaskQueueUserDataReplicationEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyTaskQueueUserDataReplicationEventResponse) ProtoMessage() {}

func (x *ApplyTaskQueueUserDataReplicationEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyTaskQueueUserDataReplicationEventResponse.ProtoReflect.Descriptor instead.
func (*ApplyTaskQueueUserDataReplicationEventResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{33}
}

type GetBuildIdTaskQueueMappingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	BuildId       string                 `protobuf:"bytes,2,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBuildIdTaskQueueMappingRequest) Reset() {
	*x = GetBuildIdTaskQueueMappingRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildIdTaskQueueMappingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildIdTaskQueueMappingRequest) ProtoMessage() {}

func (x *GetBuildIdTaskQueueMappingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildIdTaskQueueMappingRequest.ProtoReflect.Descriptor instead.
func (*GetBuildIdTaskQueueMappingRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{34}
}

func (x *GetBuildIdTaskQueueMappingRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetBuildIdTaskQueueMappingRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type GetBuildIdTaskQueueMappingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskQueues    []string               `protobuf:"bytes,1,rep,name=task_queues,json=taskQueues,proto3" json:"task_queues,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBuildIdTaskQueueMappingResponse) Reset() {
	*x = GetBuildIdTaskQueueMappingResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildIdTaskQueueMappingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildIdTaskQueueMappingResponse) ProtoMessage() {}

func (x *GetBuildIdTaskQueueMappingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildIdTaskQueueMappingResponse.ProtoReflect.Descriptor instead.
func (*GetBuildIdTaskQueueMappingResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{35}
}

func (x *GetBuildIdTaskQueueMappingResponse) GetTaskQueues() []string {
	if x != nil {
		return x.TaskQueues
	}
	return nil
}

type ForceLoadTaskQueuePartitionRequest struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId        string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueuePartition *v18.TaskQueuePartition `protobuf:"bytes,2,opt,name=task_queue_partition,json=taskQueuePartition,proto3" json:"task_queue_partition,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ForceLoadTaskQueuePartitionRequest) Reset() {
	*x = ForceLoadTaskQueuePartitionRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceLoadTaskQueuePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceLoadTaskQueuePartitionRequest) ProtoMessage() {}

func (x *ForceLoadTaskQueuePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceLoadTaskQueuePartitionRequest.ProtoReflect.Descriptor instead.
func (*ForceLoadTaskQueuePartitionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{36}
}

func (x *ForceLoadTaskQueuePartitionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ForceLoadTaskQueuePartitionRequest) GetTaskQueuePartition() *v18.TaskQueuePartition {
	if x != nil {
		return x.TaskQueuePartition
	}
	return nil
}

type ForceLoadTaskQueuePartitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasUnloaded   bool                   `protobuf:"varint,1,opt,name=was_unloaded,json=wasUnloaded,proto3" json:"was_unloaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceLoadTaskQueuePartitionResponse) Reset() {
	*x = ForceLoadTaskQueuePartitionResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceLoadTaskQueuePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceLoadTaskQueuePartitionResponse) ProtoMessage() {}

func (x *ForceLoadTaskQueuePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceLoadTaskQueuePartitionResponse.ProtoReflect.Descriptor instead.
func (*ForceLoadTaskQueuePartitionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{37}
}

func (x *ForceLoadTaskQueuePartitionResponse) GetWasUnloaded() bool {
	if x != nil {
		return x.WasUnloaded
	}
	return false
}

// TODO Shivam - Please remove this in 123
type ForceUnloadTaskQueueRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue     string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	TaskQueueType v19.TaskQueueType      `protobuf:"varint,3,opt,name=task_queue_type,json=taskQueueType,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueueRequest) Reset() {
	*x = ForceUnloadTaskQueueRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueueRequest) ProtoMessage() {}

func (x *ForceUnloadTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{38}
}

func (x *ForceUnloadTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ForceUnloadTaskQueueRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *ForceUnloadTaskQueueRequest) GetTaskQueueType() v19.TaskQueueType {
	if x != nil {
		return x.TaskQueueType
	}
	return v19.TaskQueueType(0)
}

// TODO Shivam - Please remove this in 123
type ForceUnloadTaskQueueResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasLoaded     bool                   `protobuf:"varint,1,opt,name=was_loaded,json=wasLoaded,proto3" json:"was_loaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueueResponse) Reset() {
	*x = ForceUnloadTaskQueueResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueueResponse) ProtoMessage() {}

func (x *ForceUnloadTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{39}
}

func (x *ForceUnloadTaskQueueResponse) GetWasLoaded() bool {
	if x != nil {
		return x.WasLoaded
	}
	return false
}

type ForceUnloadTaskQueuePartitionRequest struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId        string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueuePartition *v18.TaskQueuePartition `protobuf:"bytes,2,opt,name=task_queue_partition,json=taskQueuePartition,proto3" json:"task_queue_partition,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueuePartitionRequest) Reset() {
	*x = ForceUnloadTaskQueuePartitionRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueuePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueuePartitionRequest) ProtoMessage() {}

func (x *ForceUnloadTaskQueuePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueuePartitionRequest.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueuePartitionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{40}
}

func (x *ForceUnloadTaskQueuePartitionRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ForceUnloadTaskQueuePartitionRequest) GetTaskQueuePartition() *v18.TaskQueuePartition {
	if x != nil {
		return x.TaskQueuePartition
	}
	return nil
}

type ForceUnloadTaskQueuePartitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasLoaded     bool                   `protobuf:"varint,1,opt,name=was_loaded,json=wasLoaded,proto3" json:"was_loaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueuePartitionResponse) Reset() {
	*x = ForceUnloadTaskQueuePartitionResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueuePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueuePartitionResponse) ProtoMessage() {}

func (x *ForceUnloadTaskQueuePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueuePartitionResponse.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueuePartitionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{41}
}

func (x *ForceUnloadTaskQueuePartitionResponse) GetWasLoaded() bool {
	if x != nil {
		return x.WasLoaded
	}
	return false
}

// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: UpdateTaskQueueUserDataRequest doesn't follow Google API format --)
//
// (-- api-linter: core::0134::request-resource-required=disabled
//
//	aip.dev/not-precedent: UpdateTaskQueueUserDataRequest RPC doesn't follow Google API format. --)
type UpdateTaskQueueUserDataRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Versioned user data, set if the task queue has user data and the request's last_known_user_data_version is less
	// than the version cached in the root partition.
	UserData *v110.VersionedTaskQueueUserData `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	// List of added build ids
	BuildIdsAdded []string `protobuf:"bytes,4,rep,name=build_ids_added,json=buildIdsAdded,proto3" json:"build_ids_added,omitempty"`
	// List of removed build ids
	BuildIdsRemoved []string `protobuf:"bytes,5,rep,name=build_ids_removed,json=buildIdsRemoved,proto3" json:"build_ids_removed,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateTaskQueueUserDataRequest) Reset() {
	*x = UpdateTaskQueueUserDataRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskQueueUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskQueueUserDataRequest) ProtoMessage() {}

func (x *UpdateTaskQueueUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskQueueUserDataRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskQueueUserDataRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{42}
}

func (x *UpdateTaskQueueUserDataRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *UpdateTaskQueueUserDataRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *UpdateTaskQueueUserDataRequest) GetUserData() *v110.VersionedTaskQueueUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

func (x *UpdateTaskQueueUserDataRequest) GetBuildIdsAdded() []string {
	if x != nil {
		return x.BuildIdsAdded
	}
	return nil
}

func (x *UpdateTaskQueueUserDataRequest) GetBuildIdsRemoved() []string {
	if x != nil {
		return x.BuildIdsRemoved
	}
	return nil
}

type UpdateTaskQueueUserDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskQueueUserDataResponse) Reset() {
	*x = UpdateTaskQueueUserDataResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskQueueUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskQueueUserDataResponse) ProtoMessage() {}

func (x *UpdateTaskQueueUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskQueueUserDataResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskQueueUserDataResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{43}
}

type ReplicateTaskQueueUserDataRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	NamespaceId   string                  `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue     string                  `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	UserData      *v110.TaskQueueUserData `protobuf:"bytes,3,opt,name=user_data,json=userData,proto3" json:"user_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateTaskQueueUserDataRequest) Reset() {
	*x = ReplicateTaskQueueUserDataRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateTaskQueueUserDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateTaskQueueUserDataRequest) ProtoMessage() {}

func (x *ReplicateTaskQueueUserDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateTaskQueueUserDataRequest.ProtoReflect.Descriptor instead.
func (*ReplicateTaskQueueUserDataRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{44}
}

func (x *ReplicateTaskQueueUserDataRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ReplicateTaskQueueUserDataRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *ReplicateTaskQueueUserDataRequest) GetUserData() *v110.TaskQueueUserData {
	if x != nil {
		return x.UserData
	}
	return nil
}

type ReplicateTaskQueueUserDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicateTaskQueueUserDataResponse) Reset() {
	*x = ReplicateTaskQueueUserDataResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicateTaskQueueUserDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateTaskQueueUserDataResponse) ProtoMessage() {}

func (x *ReplicateTaskQueueUserDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateTaskQueueUserDataResponse.ProtoReflect.Descriptor instead.
func (*ReplicateTaskQueueUserDataResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{45}
}

type CheckTaskQueueUserDataPropagationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue     string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	Version       int64                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckTaskQueueUserDataPropagationRequest) Reset() {
	*x = CheckTaskQueueUserDataPropagationRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckTaskQueueUserDataPropagationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskQueueUserDataPropagationRequest) ProtoMessage() {}

func (x *CheckTaskQueueUserDataPropagationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskQueueUserDataPropagationRequest.ProtoReflect.Descriptor instead.
func (*CheckTaskQueueUserDataPropagationRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{46}
}

func (x *CheckTaskQueueUserDataPropagationRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CheckTaskQueueUserDataPropagationRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *CheckTaskQueueUserDataPropagationRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CheckTaskQueueUserDataPropagationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckTaskQueueUserDataPropagationResponse) Reset() {
	*x = CheckTaskQueueUserDataPropagationResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckTaskQueueUserDataPropagationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTaskQueueUserDataPropagationResponse) ProtoMessage() {}

func (x *CheckTaskQueueUserDataPropagationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTaskQueueUserDataPropagationResponse.ProtoReflect.Descriptor instead.
func (*CheckTaskQueueUserDataPropagationResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{47}
}

type DispatchNexusTaskRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   *v14.TaskQueue         `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// Nexus request extracted by the frontend and translated into Temporal API format.
	Request       *v113.Request        `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	ForwardInfo   *v18.TaskForwardInfo `protobuf:"bytes,4,opt,name=forward_info,json=forwardInfo,proto3" json:"forward_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchNexusTaskRequest) Reset() {
	*x = DispatchNexusTaskRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchNexusTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchNexusTaskRequest) ProtoMessage() {}

func (x *DispatchNexusTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchNexusTaskRequest.ProtoReflect.Descriptor instead.
func (*DispatchNexusTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{48}
}

func (x *DispatchNexusTaskRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *DispatchNexusTaskRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *DispatchNexusTaskRequest) GetRequest() *v113.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *DispatchNexusTaskRequest) GetForwardInfo() *v18.TaskForwardInfo {
	if x != nil {
		return x.ForwardInfo
	}
	return nil
}

type DispatchNexusTaskResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Outcome:
	//
	//	*DispatchNexusTaskResponse_HandlerError
	//	*DispatchNexusTaskResponse_Response
	Outcome       isDispatchNexusTaskResponse_Outcome `protobuf_oneof:"outcome"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DispatchNexusTaskResponse) Reset() {
	*x = DispatchNexusTaskResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DispatchNexusTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DispatchNexusTaskResponse) ProtoMessage() {}

func (x *DispatchNexusTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DispatchNexusTaskResponse.ProtoReflect.Descriptor instead.
func (*DispatchNexusTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{49}
}

func (x *DispatchNexusTaskResponse) GetOutcome() isDispatchNexusTaskResponse_Outcome {
	if x != nil {
		return x.Outcome
	}
	return nil
}

func (x *DispatchNexusTaskResponse) GetHandlerError() *v113.HandlerError {
	if x != nil {
		if x, ok := x.Outcome.(*DispatchNexusTaskResponse_HandlerError); ok {
			return x.HandlerError
		}
	}
	return nil
}

func (x *DispatchNexusTaskResponse) GetResponse() *v113.Response {
	if x != nil {
		if x, ok := x.Outcome.(*DispatchNexusTaskResponse_Response); ok {
			return x.Response
		}
	}
	return nil
}

type isDispatchNexusTaskResponse_Outcome interface {
	isDispatchNexusTaskResponse_Outcome()
}

type DispatchNexusTaskResponse_HandlerError struct {
	// Set if the worker's handler failed the nexus task.
	HandlerError *v113.HandlerError `protobuf:"bytes,1,opt,name=handler_error,json=handlerError,proto3,oneof"`
}

type DispatchNexusTaskResponse_Response struct {
	// Set if the worker's handler responded successfully to the nexus task.
	Response *v113.Response `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

func (*DispatchNexusTaskResponse_HandlerError) isDispatchNexusTaskResponse_Outcome() {}

func (*DispatchNexusTaskResponse_Response) isDispatchNexusTaskResponse_Outcome() {}

type PollNexusTaskQueueRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// A unique ID generated by the frontend for this request.
	PollerId string `protobuf:"bytes,2,opt,name=poller_id,json=pollerId,proto3" json:"poller_id,omitempty"`
	// Original WorkflowService poll request as received by the frontend.
	Request *v1.PollNexusTaskQueueRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	// Non-empty if this poll was forwarded from a child partition.
	ForwardedSource string `protobuf:"bytes,4,opt,name=forwarded_source,json=forwardedSource,proto3" json:"forwarded_source,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PollNexusTaskQueueRequest) Reset() {
	*x = PollNexusTaskQueueRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollNexusTaskQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollNexusTaskQueueRequest) ProtoMessage() {}

func (x *PollNexusTaskQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollNexusTaskQueueRequest.ProtoReflect.Descriptor instead.
func (*PollNexusTaskQueueRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{50}
}

func (x *PollNexusTaskQueueRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *PollNexusTaskQueueRequest) GetPollerId() string {
	if x != nil {
		return x.PollerId
	}
	return ""
}

func (x *PollNexusTaskQueueRequest) GetRequest() *v1.PollNexusTaskQueueRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *PollNexusTaskQueueRequest) GetForwardedSource() string {
	if x != nil {
		return x.ForwardedSource
	}
	return ""
}

type PollNexusTaskQueueResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Response that should be delivered to the worker containing a request from DispatchNexusTaskRequest.
	Response      *v1.PollNexusTaskQueueResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PollNexusTaskQueueResponse) Reset() {
	*x = PollNexusTaskQueueResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollNexusTaskQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollNexusTaskQueueResponse) ProtoMessage() {}

func (x *PollNexusTaskQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollNexusTaskQueueResponse.ProtoReflect.Descriptor instead.
func (*PollNexusTaskQueueResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{51}
}

func (x *PollNexusTaskQueueResponse) GetResponse() *v1.PollNexusTaskQueueResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type RespondNexusTaskCompletedRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   *v14.TaskQueue         `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// A unique ID for this task generated by the matching engine. Decoded from the incoming request's task token.
	TaskId string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Original completion as received by the frontend.
	Request       *v1.RespondNexusTaskCompletedRequest `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondNexusTaskCompletedRequest) Reset() {
	*x = RespondNexusTaskCompletedRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondNexusTaskCompletedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondNexusTaskCompletedRequest) ProtoMessage() {}

func (x *RespondNexusTaskCompletedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondNexusTaskCompletedRequest.ProtoReflect.Descriptor instead.
func (*RespondNexusTaskCompletedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{52}
}

func (x *RespondNexusTaskCompletedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondNexusTaskCompletedRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *RespondNexusTaskCompletedRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RespondNexusTaskCompletedRequest) GetRequest() *v1.RespondNexusTaskCompletedRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type RespondNexusTaskCompletedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondNexusTaskCompletedResponse) Reset() {
	*x = RespondNexusTaskCompletedResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondNexusTaskCompletedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondNexusTaskCompletedResponse) ProtoMessage() {}

func (x *RespondNexusTaskCompletedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondNexusTaskCompletedResponse.ProtoReflect.Descriptor instead.
func (*RespondNexusTaskCompletedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{53}
}

type RespondNexusTaskFailedRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	TaskQueue   *v14.TaskQueue         `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	// A unique ID for this task generated by the matching engine. Decoded from the incoming request's task token.
	TaskId string `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// Original failure as received by the frontend.
	Request       *v1.RespondNexusTaskFailedRequest `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondNexusTaskFailedRequest) Reset() {
	*x = RespondNexusTaskFailedRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondNexusTaskFailedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondNexusTaskFailedRequest) ProtoMessage() {}

func (x *RespondNexusTaskFailedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondNexusTaskFailedRequest.ProtoReflect.Descriptor instead.
func (*RespondNexusTaskFailedRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{54}
}

func (x *RespondNexusTaskFailedRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RespondNexusTaskFailedRequest) GetTaskQueue() *v14.TaskQueue {
	if x != nil {
		return x.TaskQueue
	}
	return nil
}

func (x *RespondNexusTaskFailedRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RespondNexusTaskFailedRequest) GetRequest() *v1.RespondNexusTaskFailedRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type RespondNexusTaskFailedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespondNexusTaskFailedResponse) Reset() {
	*x = RespondNexusTaskFailedResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespondNexusTaskFailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespondNexusTaskFailedResponse) ProtoMessage() {}

func (x *RespondNexusTaskFailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespondNexusTaskFailedResponse.ProtoReflect.Descriptor instead.
func (*RespondNexusTaskFailedResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{55}
}

// (-- api-linter: core::0133::request-unknown-fields=disabled
//
//	aip.dev/not-precedent: CreateNexusEndpoint RPC doesn't follow Google API format. --)
//
// (-- api-linter: core::0133::request-resource-field=disabled
//
//	aip.dev/not-precedent: CreateNexusEndpoint RPC doesn't follow Google API format. --)
//
// (-- api-linter: core::0133::request-parent-required=disabled
//
//	aip.dev/not-precedent: CreateNexusEndpoint RPC doesn't follow Google API format. --)
type CreateNexusEndpointRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Spec          *v110.NexusEndpointSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNexusEndpointRequest) Reset() {
	*x = CreateNexusEndpointRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNexusEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNexusEndpointRequest) ProtoMessage() {}

func (x *CreateNexusEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNexusEndpointRequest.ProtoReflect.Descriptor instead.
func (*CreateNexusEndpointRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{56}
}

func (x *CreateNexusEndpointRequest) GetSpec() *v110.NexusEndpointSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateNexusEndpointResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Entry         *v110.NexusEndpointEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNexusEndpointResponse) Reset() {
	*x = CreateNexusEndpointResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNexusEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNexusEndpointResponse) ProtoMessage() {}

func (x *CreateNexusEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNexusEndpointResponse.ProtoReflect.Descriptor instead.
func (*CreateNexusEndpointResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{57}
}

func (x *CreateNexusEndpointResponse) GetEntry() *v110.NexusEndpointEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// (-- api-linter: core::0134::request-resource-required=disabled
//
//	aip.dev/not-precedent: UpdateNexusEndpoint RPC doesn't follow Google API format. --)
//
// (-- api-linter: core::0134::request-mask-required=disabled
//
//	aip.dev/not-precedent: UpdateNexusEndpoint RPC doesn't follow Google API format. --)
type UpdateNexusEndpointRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the endpoint to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Version of the endpoint, used for optimistic concurrency. Must match current version in persistence or the
	// request will fail a FAILED_PRECONDITION error.
	Version       int64                   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Spec          *v110.NexusEndpointSpec `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNexusEndpointRequest) Reset() {
	*x = UpdateNexusEndpointRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNexusEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNexusEndpointRequest) ProtoMessage() {}

func (x *UpdateNexusEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNexusEndpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateNexusEndpointRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateNexusEndpointRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNexusEndpointRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateNexusEndpointRequest) GetSpec() *v110.NexusEndpointSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type UpdateNexusEndpointResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Entry         *v110.NexusEndpointEntry `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNexusEndpointResponse) Reset() {
	*x = UpdateNexusEndpointResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNexusEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNexusEndpointResponse) ProtoMessage() {}

func (x *UpdateNexusEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNexusEndpointResponse.ProtoReflect.Descriptor instead.
func (*UpdateNexusEndpointResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{59}
}

func (x *UpdateNexusEndpointResponse) GetEntry() *v110.NexusEndpointEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

// (-- api-linter: core::0135::request-name-behavior=disabled
//
//	aip.dev/not-precedent: DeleteNexusEndpointRequest RPC doesn't follow Google API format. --)
//
// (-- api-linter: core::0135::request-name-reference=disabled
//
//	aip.dev/not-precedent: DeleteNexusEndpointRequest RPC doesn't follow Google API format. --)
type DeleteNexusEndpointRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the endpoint to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNexusEndpointRequest) Reset() {
	*x = DeleteNexusEndpointRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNexusEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNexusEndpointRequest) ProtoMessage() {}

func (x *DeleteNexusEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNexusEndpointRequest.ProtoReflect.Descriptor instead.
func (*DeleteNexusEndpointRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteNexusEndpointRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNexusEndpointResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNexusEndpointResponse) Reset() {
	*x = DeleteNexusEndpointResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNexusEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNexusEndpointResponse) ProtoMessage() {}

func (x *DeleteNexusEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNexusEndpointResponse.ProtoReflect.Descriptor instead.
func (*DeleteNexusEndpointResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{61}
}

type ListNexusEndpointsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// To get the next page, pass in `ListNexusEndpointsResponse.next_page_token` from the previous page's response. The
	// token will be empty if there's no other page.
	// Note: the last page may be empty if the total number of services registered is a multiple of the page size.
	// Mutually exclusive with wait. Specifying both will result in an invalid argument error.
	NextPageToken []byte `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The nexus_endpoints table has a monotonically increasing version number that is incremented on every change to
	// the table. This field can be used to provide the last known table version in conjuction with the `wait` field to
	// long poll on changes to the table.
	// If next_page_token is not empty and the current table version does not match this field, this request will fail
	// with a failed precondition error.
	LastKnownTableVersion int64 `protobuf:"varint,3,opt,name=last_known_table_version,json=lastKnownTableVersion,proto3" json:"last_known_table_version,omitempty"`
	// If true, this request becomes a long poll and will be unblocked once the DB version is incremented.
	// Mutually exclusive with next_page_token. Specifying both will result in an invalid argument error.
	Wait          bool `protobuf:"varint,4,opt,name=wait,proto3" json:"wait,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNexusEndpointsRequest) Reset() {
	*x = ListNexusEndpointsRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNexusEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNexusEndpointsRequest) ProtoMessage() {}

func (x *ListNexusEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNexusEndpointsRequest.ProtoReflect.Descriptor instead.
func (*ListNexusEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{62}
}

func (x *ListNexusEndpointsRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListNexusEndpointsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListNexusEndpointsRequest) GetLastKnownTableVersion() int64 {
	if x != nil {
		return x.LastKnownTableVersion
	}
	return 0
}

func (x *ListNexusEndpointsRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type ListNexusEndpointsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Token for getting the next page.
	NextPageToken []byte                     `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TableVersion  int64                      `protobuf:"varint,2,opt,name=table_version,json=tableVersion,proto3" json:"table_version,omitempty"`
	Entries       []*v110.NexusEndpointEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNexusEndpointsResponse) Reset() {
	*x = ListNexusEndpointsResponse{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNexusEndpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNexusEndpointsResponse) ProtoMessage() {}

func (x *ListNexusEndpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNexusEndpointsResponse.ProtoReflect.Descriptor instead.
func (*ListNexusEndpointsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{63}
}

func (x *ListNexusEndpointsResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *ListNexusEndpointsResponse) GetTableVersion() int64 {
	if x != nil {
		return x.TableVersion
	}
	return 0
}

func (x *ListNexusEndpointsResponse) GetEntries() []*v110.NexusEndpointEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Apply request from public API.
type UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Request       *v1.UpdateWorkerBuildIdCompatibilityRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) Reset() {
	*x = UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) ProtoMessage() {}

func (x *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{20, 0}
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest) GetRequest() *v1.UpdateWorkerBuildIdCompatibilityRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

// Remove build ids (internal only)
type UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The last known user data version, used to prevent concurrent updates.
	KnownUserDataVersion int64 `protobuf:"varint,1,opt,name=known_user_data_version,json=knownUserDataVersion,proto3" json:"known_user_data_version,omitempty"`
	// List of build ids to remove.
	BuildIds      []string `protobuf:"bytes,2,rep,name=build_ids,json=buildIds,proto3" json:"build_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) Reset() {
	*x = UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds{}
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) ProtoMessage() {}

func (x *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds.ProtoReflect.Descriptor instead.
func (*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP(), []int{20, 1}
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) GetKnownUserDataVersion() int64 {
	if x != nil {
		return x.KnownUserDataVersion
	}
	return 0
}

func (x *UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds) GetBuildIds() []string {
	if x != nil {
		return x.BuildIds
	}
	return nil
}

var File_temporal_server_api_matchingservice_v1_request_response_proto protoreflect.FileDescriptor

const file_temporal_server_api_matchingservice_v1_request_response_proto_rawDesc = "" +
	"\n" +
	"=temporal/server/api/matchingservice/v1/request_response.proto\x12&temporal.server.api.matchingservice.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$temporal/api/common/v1/message.proto\x1a(temporal/api/deployment/v1/message.proto\x1a&temporal/api/enums/v1/task_queue.proto\x1a%temporal/api/history/v1/message.proto\x1a'temporal/api/taskqueue/v1/message.proto\x1a#temporal/api/query/v1/message.proto\x1a&temporal/api/protocol/v1/message.proto\x1a*temporal/server/api/clock/v1/message.proto\x1a/temporal/server/api/deployment/v1/message.proto\x1a,temporal/server/api/history/v1/message.proto\x1a.temporal/server/api/persistence/v1/nexus.proto\x1a4temporal/server/api/persistence/v1/task_queues.proto\x1a.temporal/server/api/taskqueue/v1/message.proto\x1a6temporal/api/workflowservice/v1/request_response.proto\x1a#temporal/api/nexus/v1/message.proto\"\xeb\x01\n" +
	"\x1cPollWorkflowTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1b\n" +
	"\tpoller_id\x18\x02 \x01(\tR\bpollerId\x12`\n" +
	"\fpoll_request\x18\x03 \x01(\v2=.temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequestR\vpollRequest\x12)\n" +
	"\x10forwarded_source\x18\x04 \x01(\tR\x0fforwardedSource\"\x8e\v\n" +
	"\x1dPollWorkflowTaskQueueResponse\x12\x1d\n" +
	"\n" +
	"task_token\x18\x01 \x01(\fR\ttaskToken\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12I\n" +
	"\rworkflow_type\x18\x03 \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x129\n" +
	"\x19previous_started_event_id\x18\x04 \x01(\x03R\x16previousStartedEventId\x12(\n" +
	"\x10started_event_id\x18\x05 \x01(\x03R\x0estartedEventId\x12\x18\n" +
	"\aattempt\x18\x06 \x01(\x05R\aattempt\x12\"\n" +
	"\rnext_event_id\x18\a \x01(\x03R\vnextEventId\x12,\n" +
	"\x12backlog_count_hint\x18\b \x01(\x03R\x10backlogCountHint\x128\n" +
	"\x18sticky_execution_enabled\x18\t \x01(\bR\x16stickyExecutionEnabled\x12:\n" +
	"\x05query\x18\n" +
	" \x01(\v2$.temporal.api.query.v1.WorkflowQueryR\x05query\x12q\n" +
	"\x17transient_workflow_task\x18\v \x01(\v29.temporal.server.api.history.v1.TransientWorkflowTaskInfoR\x15transientWorkflowTask\x12g\n" +
	"\x1dworkflow_execution_task_queue\x18\f \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\x1aworkflowExecutionTaskQueue\x12!\n" +
	"\fbranch_token\x18\x0e \x01(\fR\vbranchToken\x12A\n" +
	"\x0escheduled_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12=\n" +
	"\fstarted_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12l\n" +
	"\aqueries\x18\x11 \x03(\v2R.temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.QueriesEntryR\aqueries\x12=\n" +
	"\bmessages\x18\x12 \x03(\v2!.temporal.api.protocol.v1.MessageR\bmessages\x12:\n" +
	"\ahistory\x18\x13 \x01(\v2 .temporal.api.history.v1.HistoryR\ahistory\x12&\n" +
	"\x0fnext_page_token\x18\x14 \x01(\fR\rnextPageToken\x12h\n" +
	"\x17poller_scaling_decision\x18\x15 \x01(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\x15pollerScalingDecision\x1a`\n" +
	"\fQueriesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.temporal.api.query.v1.WorkflowQueryR\x05value:\x028\x01J\x04\b\r\x10\x0e\"\xeb\x01\n" +
	"\x1cPollActivityTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1b\n" +
	"\tpoller_id\x18\x02 \x01(\tR\bpollerId\x12`\n" +
	"\fpoll_request\x18\x03 \x01(\v2=.temporal.api.workflowservice.v1.PollActivityTaskQueueRequestR\vpollRequest\x12)\n" +
	"\x10forwarded_source\x18\x04 \x01(\tR\x0fforwardedSource\"\xd0\t\n" +
	"\x1dPollActivityTaskQueueResponse\x12\x1d\n" +
	"\n" +
	"task_token\x18\x01 \x01(\fR\ttaskToken\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x12\x1f\n" +
	"\vactivity_id\x18\x03 \x01(\tR\n" +
	"activityId\x12I\n" +
	"\ractivity_type\x18\x04 \x01(\v2$.temporal.api.common.v1.ActivityTypeR\factivityType\x126\n" +
	"\x05input\x18\x05 \x01(\v2 .temporal.api.common.v1.PayloadsR\x05input\x12A\n" +
	"\x0escheduled_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\rscheduledTime\x12T\n" +
	"\x19schedule_to_close_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToCloseTimeout\x12=\n" +
	"\fstarted_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\vstartedTime\x12N\n" +
	"\x16start_to_close_timeout\x18\t \x01(\v2\x19.google.protobuf.DurationR\x13startToCloseTimeout\x12F\n" +
	"\x11heartbeat_timeout\x18\n" +
	" \x01(\v2\x19.google.protobuf.DurationR\x10heartbeatTimeout\x12\x18\n" +
	"\aattempt\x18\v \x01(\x05R\aattempt\x12_\n" +
	"\x1ecurrent_attempt_scheduled_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x1bcurrentAttemptScheduledTime\x12M\n" +
	"\x11heartbeat_details\x18\r \x01(\v2 .temporal.api.common.v1.PayloadsR\x10heartbeatDetails\x12I\n" +
	"\rworkflow_type\x18\x0e \x01(\v2$.temporal.api.common.v1.WorkflowTypeR\fworkflowType\x12-\n" +
	"\x12workflow_namespace\x18\x0f \x01(\tR\x11workflowNamespace\x126\n" +
	"\x06header\x18\x10 \x01(\v2\x1e.temporal.api.common.v1.HeaderR\x06header\x12h\n" +
	"\x17poller_scaling_decision\x18\x11 \x01(\v20.temporal.api.taskqueue.v1.PollerScalingDecisionR\x15pollerScalingDecision\x12<\n" +
	"\bpriority\x18\x12 \x01(\v2 .temporal.api.common.v1.PriorityR\bpriority\"\x87\x05\n" +
	"\x16AddWorkflowTaskRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12C\n" +
	"\n" +
	"task_queue\x18\x03 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12,\n" +
	"\x12scheduled_event_id\x18\x04 \x01(\x03R\x10scheduledEventId\x12T\n" +
	"\x19schedule_to_start_timeout\x18\x05 \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToStartTimeout\x12?\n" +
	"\x05clock\x18\t \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12c\n" +
	"\x11version_directive\x18\n" +
	" \x01(\v26.temporal.server.api.taskqueue.v1.TaskVersionDirectiveR\x10versionDirective\x12T\n" +
	"\fforward_info\x18\v \x01(\v21.temporal.server.api.taskqueue.v1.TaskForwardInfoR\vforwardInfo\x12<\n" +
	"\bpriority\x18\f \x01(\v2 .temporal.api.common.v1.PriorityR\bpriority\"E\n" +
	"\x17AddWorkflowTaskResponse\x12*\n" +
	"\x11assigned_build_id\x18\x01 \x01(\tR\x0fassignedBuildId\"\xa3\x05\n" +
	"\x16AddActivityTaskRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12C\n" +
	"\n" +
	"task_queue\x18\x04 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12,\n" +
	"\x12scheduled_event_id\x18\x05 \x01(\x03R\x10scheduledEventId\x12T\n" +
	"\x19schedule_to_start_timeout\x18\x06 \x01(\v2\x19.google.protobuf.DurationR\x16scheduleToStartTimeout\x12?\n" +
	"\x05clock\x18\t \x01(\v2).temporal.server.api.clock.v1.VectorClockR\x05clock\x12c\n" +
	"\x11version_directive\x18\n" +
	" \x01(\v26.temporal.server.api.taskqueue.v1.TaskVersionDirectiveR\x10versionDirective\x12T\n" +
	"\fforward_info\x18\v \x01(\v21.temporal.server.api.taskqueue.v1.TaskForwardInfoR\vforwardInfo\x12\x14\n" +
	"\x05stamp\x18\f \x01(\x05R\x05stamp\x12<\n" +
	"\bpriority\x18\r \x01(\v2 .temporal.api.common.v1.PriorityR\bpriorityJ\x04\b\x03\x10\x04\"E\n" +
	"\x17AddActivityTaskResponse\x12*\n" +
	"\x11assigned_build_id\x18\x01 \x01(\tR\x0fassignedBuildId\"\xd3\x03\n" +
	"\x14QueryWorkflowRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12Z\n" +
	"\rquery_request\x18\x03 \x01(\v25.temporal.api.workflowservice.v1.QueryWorkflowRequestR\fqueryRequest\x12c\n" +
	"\x11version_directive\x18\x05 \x01(\v26.temporal.server.api.taskqueue.v1.TaskVersionDirectiveR\x10versionDirective\x12T\n" +
	"\fforward_info\x18\x06 \x01(\v21.temporal.server.api.taskqueue.v1.TaskForwardInfoR\vforwardInfo\x12<\n" +
	"\bpriority\x18\a \x01(\v2 .temporal.api.common.v1.PriorityR\bpriority\"\xa9\x01\n" +
	"\x15QueryWorkflowResponse\x12C\n" +
	"\fquery_result\x18\x01 \x01(\v2 .temporal.api.common.v1.PayloadsR\vqueryResult\x12K\n" +
	"\x0equery_rejected\x18\x02 \x01(\v2$.temporal.api.query.v1.QueryRejectedR\rqueryRejected\"\x93\x02\n" +
	" RespondQueryTaskCompletedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\tR\x06taskId\x12n\n" +
	"\x11completed_request\x18\x04 \x01(\v2A.temporal.api.workflowservice.v1.RespondQueryTaskCompletedRequestR\x10completedRequest\"#\n" +
	"!RespondQueryTaskCompletedResponse\"\xf1\x01\n" +
	"\x1cCancelOutstandingPollRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12L\n" +
	"\x0ftask_queue_type\x18\x02 \x01(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\x12C\n" +
	"\n" +
	"task_queue\x18\x03 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12\x1b\n" +
	"\tpoller_id\x18\x04 \x01(\tR\bpollerId\"\x1f\n" +
	"\x1dCancelOutstandingPollResponse\"\x9b\x01\n" +
	"\x18DescribeTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\\\n" +
	"\fdesc_request\x18\x02 \x01(\v29.temporal.api.workflowservice.v1.DescribeTaskQueueRequestR\vdescRequest\"\x82\x01\n" +
	"\x19DescribeTaskQueueResponse\x12_\n" +
	"\rdesc_response\x18\x03 \x01(\v2:.temporal.api.workflowservice.v1.DescribeTaskQueueResponseR\fdescResponseJ\x04\b\x01\x10\x03\"\x94\x03\n" +
	"!DescribeTaskQueuePartitionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12f\n" +
	"\x14task_queue_partition\x18\x02 \x01(\v24.temporal.server.api.taskqueue.v1.TaskQueuePartitionR\x12taskQueuePartition\x12P\n" +
	"\bversions\x18\x03 \x01(\v24.temporal.api.taskqueue.v1.TaskQueueVersionSelectionR\bversions\x12!\n" +
	"\freport_stats\x18\x04 \x01(\bR\vreportStats\x12%\n" +
	"\x0ereport_pollers\x18\x05 \x01(\bR\rreportPollers\x12H\n" +
	"!report_internal_task_queue_status\x18\x06 \x01(\bR\x1dreportInternalTaskQueueStatus\"\xcb\x02\n" +
	"\"DescribeTaskQueuePartitionResponse\x12\x9a\x01\n" +
	"\x16versions_info_internal\x18\x01 \x03(\v2d.temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntryR\x14versionsInfoInternal\x1a\x87\x01\n" +
	"\x19VersionsInfoInternalEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12T\n" +
	"\x05value\x18\x02 \x01(\v2>.temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternalR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x1eListTaskQueuePartitionsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\fnamespace_id\x18\x03 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\"\x99\x02\n" +
	"\x1fListTaskQueuePartitionsResponse\x12z\n" +
	"\x1eactivity_task_queue_partitions\x18\x01 \x03(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\x1bactivityTaskQueuePartitions\x12z\n" +
	"\x1eworkflow_task_queue_partitions\x18\x02 \x03(\v25.temporal.api.taskqueue.v1.TaskQueuePartitionMetadataR\x1bworkflowTaskQueuePartitions\"\xb9\x05\n" +
	"'UpdateWorkerBuildIdCompatibilityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12\x96\x01\n" +
	"\x14apply_public_request\x18\x03 \x01(\v2b.temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.ApplyPublicRequestH\x00R\x12applyPublicRequest\x12\x8a\x01\n" +
	"\x10remove_build_ids\x18\x04 \x01(\v2^.temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.RemoveBuildIdsH\x00R\x0eremoveBuildIds\x129\n" +
	"\x18persist_unknown_build_id\x18\x05 \x01(\tH\x00R\x15persistUnknownBuildId\x1ax\n" +
	"\x12ApplyPublicRequest\x12b\n" +
	"\arequest\x18\x01 \x01(\v2H.temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequestR\arequest\x1ad\n" +
	"\x0eRemoveBuildIds\x125\n" +
	"\x17known_user_data_version\x18\x01 \x01(\x03R\x14knownUserDataVersion\x12\x1b\n" +
	"\tbuild_ids\x18\x02 \x03(\tR\bbuildIdsB\v\n" +
	"\toperation\"*\n" +
	"(UpdateWorkerBuildIdCompatibilityResponse\"\xcc\x01\n" +
	"\x1fGetWorkerVersioningRulesRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12\\\n" +
	"\arequest\x18\x03 \x01(\v2@.temporal.api.workflowservice.v1.GetWorkerVersioningRulesRequestH\x00R\arequestB\t\n" +
	"\acommand\"\x81\x01\n" +
	" GetWorkerVersioningRulesResponse\x12]\n" +
	"\bresponse\x18\x01 \x01(\v2A.temporal.api.workflowservice.v1.GetWorkerVersioningRulesResponseR\bresponse\"\xd2\x01\n" +
	"\"UpdateWorkerVersioningRulesRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12_\n" +
	"\arequest\x18\x03 \x01(\v2C.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequestH\x00R\arequestB\t\n" +
	"\acommand\"\x87\x01\n" +
	"#UpdateWorkerVersioningRulesResponse\x12`\n" +
	"\bresponse\x18\x01 \x01(\v2D.temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesResponseR\bresponse\"\xaa\x01\n" +
	"$GetWorkerBuildIdCompatibilityRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12_\n" +
	"\arequest\x18\x02 \x01(\v2E.temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityRequestR\arequest\"\x8b\x01\n" +
	"%GetWorkerBuildIdCompatibilityResponse\x12b\n" +
	"\bresponse\x18\x01 \x01(\v2F.temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityResponseR\bresponse\"\xb7\x02\n" +
	"\x1bGetTaskQueueUserDataRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12L\n" +
	"\x0ftask_queue_type\x18\x05 \x01(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\x12>\n" +
	"\x1clast_known_user_data_version\x18\x03 \x01(\x03R\x18lastKnownUserDataVersion\x12\"\n" +
	"\rwait_new_data\x18\x04 \x01(\bR\vwaitNewData\x12$\n" +
	"\x0eonly_if_loaded\x18\x06 \x01(\bR\fonlyIfLoaded\"\x81\x01\n" +
	"\x1cGetTaskQueueUserDataResponse\x12[\n" +
	"\tuser_data\x18\x02 \x01(\v2>.temporal.server.api.persistence.v1.VersionedTaskQueueUserDataR\buserDataJ\x04\b\x01\x10\x02\"\xeb\x04\n" +
	"\x1dSyncDeploymentUserDataRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12L\n" +
	"\x0ftask_queue_type\x18\x03 \x01(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\x12N\n" +
	"\x10task_queue_types\x18\b \x03(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\x0etaskQueueTypes\x12F\n" +
	"\n" +
	"deployment\x18\x04 \x01(\v2&.temporal.api.deployment.v1.DeploymentR\n" +
	"deployment\x12D\n" +
	"\x04data\x18\x05 \x01(\v20.temporal.server.api.deployment.v1.TaskQueueDataR\x04data\x12j\n" +
	"\x13update_version_data\x18\x06 \x01(\v28.temporal.server.api.deployment.v1.DeploymentVersionDataH\x00R\x11updateVersionData\x12c\n" +
	"\x0eforget_version\x18\a \x01(\v2:.temporal.server.api.deployment.v1.WorkerDeploymentVersionH\x00R\rforgetVersionB\v\n" +
	"\toperation\":\n" +
	"\x1eSyncDeploymentUserDataResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\"\xc5\x01\n" +
	"-ApplyTaskQueueUserDataReplicationEventRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12R\n" +
	"\tuser_data\x18\x03 \x01(\v25.temporal.server.api.persistence.v1.TaskQueueUserDataR\buserData\"0\n" +
	".ApplyTaskQueueUserDataReplicationEventResponse\"a\n" +
	"!GetBuildIdTaskQueueMappingRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x19\n" +
	"\bbuild_id\x18\x02 \x01(\tR\abuildId\"E\n" +
	"\"GetBuildIdTaskQueueMappingResponse\x12\x1f\n" +
	"\vtask_queues\x18\x01 \x03(\tR\n" +
	"taskQueues\"\xaf\x01\n" +
	"\"ForceLoadTaskQueuePartitionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12f\n" +
	"\x14task_queue_partition\x18\x02 \x01(\v24.temporal.server.api.taskqueue.v1.TaskQueuePartitionR\x12taskQueuePartition\"H\n" +
	"#ForceLoadTaskQueuePartitionResponse\x12!\n" +
	"\fwas_unloaded\x18\x01 \x01(\bR\vwasUnloaded\"\xad\x01\n" +
	"\x1bForceUnloadTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12L\n" +
	"\x0ftask_queue_type\x18\x03 \x01(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\"=\n" +
	"\x1cForceUnloadTaskQueueResponse\x12\x1d\n" +
	"\n" +
	"was_loaded\x18\x01 \x01(\bR\twasLoaded\"\xb1\x01\n" +
	"$ForceUnloadTaskQueuePartitionRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12f\n" +
	"\x14task_queue_partition\x18\x02 \x01(\v24.temporal.server.api.taskqueue.v1.TaskQueuePartitionR\x12taskQueuePartition\"F\n" +
	"%ForceUnloadTaskQueuePartitionResponse\x12\x1d\n" +
	"\n" +
	"was_loaded\x18\x01 \x01(\bR\twasLoaded\"\x93\x02\n" +
	"\x1eUpdateTaskQueueUserDataRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12[\n" +
	"\tuser_data\x18\x03 \x01(\v2>.temporal.server.api.persistence.v1.VersionedTaskQueueUserDataR\buserData\x12&\n" +
	"\x0fbuild_ids_added\x18\x04 \x03(\tR\rbuildIdsAdded\x12*\n" +
	"\x11build_ids_removed\x18\x05 \x03(\tR\x0fbuildIdsRemoved\"!\n" +
	"\x1fUpdateTaskQueueUserDataResponse\"\xb9\x01\n" +
	"!ReplicateTaskQueueUserDataRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12R\n" +
	"\tuser_data\x18\x03 \x01(\v25.temporal.server.api.persistence.v1.TaskQueueUserDataR\buserData\"$\n" +
	"\"ReplicateTaskQueueUserDataResponse\"\x86\x01\n" +
	"(CheckTaskQueueUserDataPropagationRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x03R\aversion\"+\n" +
	")CheckTaskQueueUserDataPropagationResponse\"\x92\x02\n" +
	"\x18DispatchNexusTaskRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x128\n" +
	"\arequest\x18\x03 \x01(\v2\x1e.temporal.api.nexus.v1.RequestR\arequest\x12T\n" +
	"\fforward_info\x18\x04 \x01(\v21.temporal.server.api.taskqueue.v1.TaskForwardInfoR\vforwardInfo\"\xb1\x01\n" +
	"\x19DispatchNexusTaskResponse\x12J\n" +
	"\rhandler_error\x18\x01 \x01(\v2#.temporal.api.nexus.v1.HandlerErrorH\x00R\fhandlerError\x12=\n" +
	"\bresponse\x18\x02 \x01(\v2\x1f.temporal.api.nexus.v1.ResponseH\x00R\bresponseB\t\n" +
	"\aoutcome\"\xdc\x01\n" +
	"\x19PollNexusTaskQueueRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1b\n" +
	"\tpoller_id\x18\x02 \x01(\tR\bpollerId\x12T\n" +
	"\arequest\x18\x03 \x01(\v2:.temporal.api.workflowservice.v1.PollNexusTaskQueueRequestR\arequest\x12)\n" +
	"\x10forwarded_source\x18\x04 \x01(\tR\x0fforwardedSource\"u\n" +
	"\x1aPollNexusTaskQueueResponse\x12W\n" +
	"\bresponse\x18\x01 \x01(\v2;.temporal.api.workflowservice.v1.PollNexusTaskQueueResponseR\bresponse\"\x80\x02\n" +
	" RespondNexusTaskCompletedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\tR\x06taskId\x12[\n" +
	"\arequest\x18\x04 \x01(\v2A.temporal.api.workflowservice.v1.RespondNexusTaskCompletedRequestR\arequest\"#\n" +
	"!RespondNexusTaskCompletedResponse\"\xfa\x01\n" +
	"\x1dRespondNexusTaskFailedRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12C\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\v2$.temporal.api.taskqueue.v1.TaskQueueR\ttaskQueue\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\tR\x06taskId\x12X\n" +
	"\arequest\x18\x04 \x01(\v2>.temporal.api.workflowservice.v1.RespondNexusTaskFailedRequestR\arequest\" \n" +
	"\x1eRespondNexusTaskFailedResponse\"g\n" +
	"\x1aCreateNexusEndpointRequest\x12I\n" +
	"\x04spec\x18\x01 \x01(\v25.temporal.server.api.persistence.v1.NexusEndpointSpecR\x04spec\"k\n" +
	"\x1bCreateNexusEndpointResponse\x12L\n" +
	"\x05entry\x18\x01 \x01(\v26.temporal.server.api.persistence.v1.NexusEndpointEntryR\x05entry\"\x91\x01\n" +
	"\x1aUpdateNexusEndpointRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\x12I\n" +
	"\x04spec\x18\x03 \x01(\v25.temporal.server.api.persistence.v1.NexusEndpointSpecR\x04spec\"k\n" +
	"\x1bUpdateNexusEndpointResponse\x12L\n" +
	"\x05entry\x18\x01 \x01(\v26.temporal.server.api.persistence.v1.NexusEndpointEntryR\x05entry\",\n" +
	"\x1aDeleteNexusEndpointRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1d\n" +
	"\x1bDeleteNexusEndpointResponse\"\xad\x01\n" +
	"\x19ListNexusEndpointsRequest\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x127\n" +
	"\x18last_known_table_version\x18\x03 \x01(\x03R\x15lastKnownTableVersion\x12\x12\n" +
	"\x04wait\x18\x04 \x01(\bR\x04wait\"\xbb\x01\n" +
	"\x1aListNexusEndpointsResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\x12#\n" +
	"\rtable_version\x18\x02 \x01(\x03R\ftableVersion\x12P\n" +
	"\aentries\x18\x03 \x03(\v26.temporal.server.api.persistence.v1.NexusEndpointEntryR\aentriesB>Z<go.temporal.io/server/api/matchingservice/v1;matchingserviceb\x06proto3"

var (
	file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescOnce sync.Once
	file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescData []byte
)

func file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescGZIP() []byte {
	file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_matchingservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_matchingservice_v1_request_response_proto_rawDesc)))
	})
	return file_temporal_server_api_matchingservice_v1_request_response_proto_rawDescData
}

var file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_temporal_server_api_matchingservice_v1_request_response_proto_goTypes = []any{
	(*PollWorkflowTaskQueueRequest)(nil),                               // 0: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueRequest
	(*PollWorkflowTaskQueueResponse)(nil),                              // 1: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse
	(*PollActivityTaskQueueRequest)(nil),                               // 2: temporal.server.api.matchingservice.v1.PollActivityTaskQueueRequest
	(*PollActivityTaskQueueResponse)(nil),                              // 3: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse
	(*AddWorkflowTaskRequest)(nil),                                     // 4: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest
	(*AddWorkflowTaskResponse)(nil),                                    // 5: temporal.server.api.matchingservice.v1.AddWorkflowTaskResponse
	(*AddActivityTaskRequest)(nil),                                     // 6: temporal.server.api.matchingservice.v1.AddActivityTaskRequest
	(*AddActivityTaskResponse)(nil),                                    // 7: temporal.server.api.matchingservice.v1.AddActivityTaskResponse
	(*QueryWorkflowRequest)(nil),                                       // 8: temporal.server.api.matchingservice.v1.QueryWorkflowRequest
	(*QueryWorkflowResponse)(nil),                                      // 9: temporal.server.api.matchingservice.v1.QueryWorkflowResponse
	(*RespondQueryTaskCompletedRequest)(nil),                           // 10: temporal.server.api.matchingservice.v1.RespondQueryTaskCompletedRequest
	(*RespondQueryTaskCompletedResponse)(nil),                          // 11: temporal.server.api.matchingservice.v1.RespondQueryTaskCompletedResponse
	(*CancelOutstandingPollRequest)(nil),                               // 12: temporal.server.api.matchingservice.v1.CancelOutstandingPollRequest
	(*CancelOutstandingPollResponse)(nil),                              // 13: temporal.server.api.matchingservice.v1.CancelOutstandingPollResponse
	(*DescribeTaskQueueRequest)(nil),                                   // 14: temporal.server.api.matchingservice.v1.DescribeTaskQueueRequest
	(*DescribeTaskQueueResponse)(nil),                                  // 15: temporal.server.api.matchingservice.v1.DescribeTaskQueueResponse
	(*DescribeTaskQueuePartitionRequest)(nil),                          // 16: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionRequest
	(*DescribeTaskQueuePartitionResponse)(nil),                         // 17: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse
	(*ListTaskQueuePartitionsRequest)(nil),                             // 18: temporal.server.api.matchingservice.v1.ListTaskQueuePartitionsRequest
	(*ListTaskQueuePartitionsResponse)(nil),                            // 19: temporal.server.api.matchingservice.v1.ListTaskQueuePartitionsResponse
	(*UpdateWorkerBuildIdCompatibilityRequest)(nil),                    // 20: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest
	(*UpdateWorkerBuildIdCompatibilityResponse)(nil),                   // 21: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityResponse
	(*GetWorkerVersioningRulesRequest)(nil),                            // 22: temporal.server.api.matchingservice.v1.GetWorkerVersioningRulesRequest
	(*GetWorkerVersioningRulesResponse)(nil),                           // 23: temporal.server.api.matchingservice.v1.GetWorkerVersioningRulesResponse
	(*UpdateWorkerVersioningRulesRequest)(nil),                         // 24: temporal.server.api.matchingservice.v1.UpdateWorkerVersioningRulesRequest
	(*UpdateWorkerVersioningRulesResponse)(nil),                        // 25: temporal.server.api.matchingservice.v1.UpdateWorkerVersioningRulesResponse
	(*GetWorkerBuildIdCompatibilityRequest)(nil),                       // 26: temporal.server.api.matchingservice.v1.GetWorkerBuildIdCompatibilityRequest
	(*GetWorkerBuildIdCompatibilityResponse)(nil),                      // 27: temporal.server.api.matchingservice.v1.GetWorkerBuildIdCompatibilityResponse
	(*GetTaskQueueUserDataRequest)(nil),                                // 28: temporal.server.api.matchingservice.v1.GetTaskQueueUserDataRequest
	(*GetTaskQueueUserDataResponse)(nil),                               // 29: temporal.server.api.matchingservice.v1.GetTaskQueueUserDataResponse
	(*SyncDeploymentUserDataRequest)(nil),                              // 30: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest
	(*SyncDeploymentUserDataResponse)(nil),                             // 31: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataResponse
	(*ApplyTaskQueueUserDataReplicationEventRequest)(nil),              // 32: temporal.server.api.matchingservice.v1.ApplyTaskQueueUserDataReplicationEventRequest
	(*ApplyTaskQueueUserDataReplicationEventResponse)(nil),             // 33: temporal.server.api.matchingservice.v1.ApplyTaskQueueUserDataReplicationEventResponse
	(*GetBuildIdTaskQueueMappingRequest)(nil),                          // 34: temporal.server.api.matchingservice.v1.GetBuildIdTaskQueueMappingRequest
	(*GetBuildIdTaskQueueMappingResponse)(nil),                         // 35: temporal.server.api.matchingservice.v1.GetBuildIdTaskQueueMappingResponse
	(*ForceLoadTaskQueuePartitionRequest)(nil),                         // 36: temporal.server.api.matchingservice.v1.ForceLoadTaskQueuePartitionRequest
	(*ForceLoadTaskQueuePartitionResponse)(nil),                        // 37: temporal.server.api.matchingservice.v1.ForceLoadTaskQueuePartitionResponse
	(*ForceUnloadTaskQueueRequest)(nil),                                // 38: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueueRequest
	(*ForceUnloadTaskQueueResponse)(nil),                               // 39: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueueResponse
	(*ForceUnloadTaskQueuePartitionRequest)(nil),                       // 40: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueuePartitionRequest
	(*ForceUnloadTaskQueuePartitionResponse)(nil),                      // 41: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueuePartitionResponse
	(*UpdateTaskQueueUserDataRequest)(nil),                             // 42: temporal.server.api.matchingservice.v1.UpdateTaskQueueUserDataRequest
	(*UpdateTaskQueueUserDataResponse)(nil),                            // 43: temporal.server.api.matchingservice.v1.UpdateTaskQueueUserDataResponse
	(*ReplicateTaskQueueUserDataRequest)(nil),                          // 44: temporal.server.api.matchingservice.v1.ReplicateTaskQueueUserDataRequest
	(*ReplicateTaskQueueUserDataResponse)(nil),                         // 45: temporal.server.api.matchingservice.v1.ReplicateTaskQueueUserDataResponse
	(*CheckTaskQueueUserDataPropagationRequest)(nil),                   // 46: temporal.server.api.matchingservice.v1.CheckTaskQueueUserDataPropagationRequest
	(*CheckTaskQueueUserDataPropagationResponse)(nil),                  // 47: temporal.server.api.matchingservice.v1.CheckTaskQueueUserDataPropagationResponse
	(*DispatchNexusTaskRequest)(nil),                                   // 48: temporal.server.api.matchingservice.v1.DispatchNexusTaskRequest
	(*DispatchNexusTaskResponse)(nil),                                  // 49: temporal.server.api.matchingservice.v1.DispatchNexusTaskResponse
	(*PollNexusTaskQueueRequest)(nil),                                  // 50: temporal.server.api.matchingservice.v1.PollNexusTaskQueueRequest
	(*PollNexusTaskQueueResponse)(nil),                                 // 51: temporal.server.api.matchingservice.v1.PollNexusTaskQueueResponse
	(*RespondNexusTaskCompletedRequest)(nil),                           // 52: temporal.server.api.matchingservice.v1.RespondNexusTaskCompletedRequest
	(*RespondNexusTaskCompletedResponse)(nil),                          // 53: temporal.server.api.matchingservice.v1.RespondNexusTaskCompletedResponse
	(*RespondNexusTaskFailedRequest)(nil),                              // 54: temporal.server.api.matchingservice.v1.RespondNexusTaskFailedRequest
	(*RespondNexusTaskFailedResponse)(nil),                             // 55: temporal.server.api.matchingservice.v1.RespondNexusTaskFailedResponse
	(*CreateNexusEndpointRequest)(nil),                                 // 56: temporal.server.api.matchingservice.v1.CreateNexusEndpointRequest
	(*CreateNexusEndpointResponse)(nil),                                // 57: temporal.server.api.matchingservice.v1.CreateNexusEndpointResponse
	(*UpdateNexusEndpointRequest)(nil),                                 // 58: temporal.server.api.matchingservice.v1.UpdateNexusEndpointRequest
	(*UpdateNexusEndpointResponse)(nil),                                // 59: temporal.server.api.matchingservice.v1.UpdateNexusEndpointResponse
	(*DeleteNexusEndpointRequest)(nil),                                 // 60: temporal.server.api.matchingservice.v1.DeleteNexusEndpointRequest
	(*DeleteNexusEndpointResponse)(nil),                                // 61: temporal.server.api.matchingservice.v1.DeleteNexusEndpointResponse
	(*ListNexusEndpointsRequest)(nil),                                  // 62: temporal.server.api.matchingservice.v1.ListNexusEndpointsRequest
	(*ListNexusEndpointsResponse)(nil),                                 // 63: temporal.server.api.matchingservice.v1.ListNexusEndpointsResponse
	nil,                                                                // 64: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.QueriesEntry
	nil,                                                                // 65: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry
	(*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest)(nil), // 66: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.ApplyPublicRequest
	(*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds)(nil),     // 67: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.RemoveBuildIds
	(*v1.PollWorkflowTaskQueueRequest)(nil),                            // 68: temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest
	(*v11.WorkflowExecution)(nil),                                      // 69: temporal.api.common.v1.WorkflowExecution
	(*v11.WorkflowType)(nil),                                           // 70: temporal.api.common.v1.WorkflowType
	(*v12.WorkflowQuery)(nil),                                          // 71: temporal.api.query.v1.WorkflowQuery
	(*v13.TransientWorkflowTaskInfo)(nil),                              // 72: temporal.server.api.history.v1.TransientWorkflowTaskInfo
	(*v14.TaskQueue)(nil),                                              // 73: temporal.api.taskqueue.v1.TaskQueue
	(*timestamppb.Timestamp)(nil),                                      // 74: google.protobuf.Timestamp
	(*v15.Message)(nil),                                                // 75: temporal.api.protocol.v1.Message
	(*v16.History)(nil),                                                // 76: temporal.api.history.v1.History
	(*v14.PollerScalingDecision)(nil),                                  // 77: temporal.api.taskqueue.v1.PollerScalingDecision
	(*v1.PollActivityTaskQueueRequest)(nil),                            // 78: temporal.api.workflowservice.v1.PollActivityTaskQueueRequest
	(*v11.ActivityType)(nil),                                           // 79: temporal.api.common.v1.ActivityType
	(*v11.Payloads)(nil),                                               // 80: temporal.api.common.v1.Payloads
	(*durationpb.Duration)(nil),                                        // 81: google.protobuf.Duration
	(*v11.Header)(nil),                                                 // 82: temporal.api.common.v1.Header
	(*v11.Priority)(nil),                                               // 83: temporal.api.common.v1.Priority
	(*v17.VectorClock)(nil),                                            // 84: temporal.server.api.clock.v1.VectorClock
	(*v18.TaskVersionDirective)(nil),                                   // 85: temporal.server.api.taskqueue.v1.TaskVersionDirective
	(*v18.TaskForwardInfo)(nil),                                        // 86: temporal.server.api.taskqueue.v1.TaskForwardInfo
	(*v1.QueryWorkflowRequest)(nil),                                    // 87: temporal.api.workflowservice.v1.QueryWorkflowRequest
	(*v12.QueryRejected)(nil),                                          // 88: temporal.api.query.v1.QueryRejected
	(*v1.RespondQueryTaskCompletedRequest)(nil),                        // 89: temporal.api.workflowservice.v1.RespondQueryTaskCompletedRequest
	(v19.TaskQueueType)(0),                                             // 90: temporal.api.enums.v1.TaskQueueType
	(*v1.DescribeTaskQueueRequest)(nil),                                // 91: temporal.api.workflowservice.v1.DescribeTaskQueueRequest
	(*v1.DescribeTaskQueueResponse)(nil),                               // 92: temporal.api.workflowservice.v1.DescribeTaskQueueResponse
	(*v18.TaskQueuePartition)(nil),                                     // 93: temporal.server.api.taskqueue.v1.TaskQueuePartition
	(*v14.TaskQueueVersionSelection)(nil),                              // 94: temporal.api.taskqueue.v1.TaskQueueVersionSelection
	(*v14.TaskQueuePartitionMetadata)(nil),                             // 95: temporal.api.taskqueue.v1.TaskQueuePartitionMetadata
	(*v1.GetWorkerVersioningRulesRequest)(nil),                         // 96: temporal.api.workflowservice.v1.GetWorkerVersioningRulesRequest
	(*v1.GetWorkerVersioningRulesResponse)(nil),                        // 97: temporal.api.workflowservice.v1.GetWorkerVersioningRulesResponse
	(*v1.UpdateWorkerVersioningRulesRequest)(nil),                      // 98: temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest
	(*v1.UpdateWorkerVersioningRulesResponse)(nil),                     // 99: temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesResponse
	(*v1.GetWorkerBuildIdCompatibilityRequest)(nil),                    // 100: temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityRequest
	(*v1.GetWorkerBuildIdCompatibilityResponse)(nil),                   // 101: temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityResponse
	(*v110.VersionedTaskQueueUserData)(nil),                            // 102: temporal.server.api.persistence.v1.VersionedTaskQueueUserData
	(*v111.Deployment)(nil),                                            // 103: temporal.api.deployment.v1.Deployment
	(*v112.TaskQueueData)(nil),                                         // 104: temporal.server.api.deployment.v1.TaskQueueData
	(*v112.DeploymentVersionData)(nil),                                 // 105: temporal.server.api.deployment.v1.DeploymentVersionData
	(*v112.WorkerDeploymentVersion)(nil),                               // 106: temporal.server.api.deployment.v1.WorkerDeploymentVersion
	(*v110.TaskQueueUserData)(nil),                                     // 107: temporal.server.api.persistence.v1.TaskQueueUserData
	(*v113.Request)(nil),                                               // 108: temporal.api.nexus.v1.Request
	(*v113.HandlerError)(nil),                                          // 109: temporal.api.nexus.v1.HandlerError
	(*v113.Response)(nil),                                              // 110: temporal.api.nexus.v1.Response
	(*v1.PollNexusTaskQueueRequest)(nil),                               // 111: temporal.api.workflowservice.v1.PollNexusTaskQueueRequest
	(*v1.PollNexusTaskQueueResponse)(nil),                              // 112: temporal.api.workflowservice.v1.PollNexusTaskQueueResponse
	(*v1.RespondNexusTaskCompletedRequest)(nil),                        // 113: temporal.api.workflowservice.v1.RespondNexusTaskCompletedRequest
	(*v1.RespondNexusTaskFailedRequest)(nil),                           // 114: temporal.api.workflowservice.v1.RespondNexusTaskFailedRequest
	(*v110.NexusEndpointSpec)(nil),                                     // 115: temporal.server.api.persistence.v1.NexusEndpointSpec
	(*v110.NexusEndpointEntry)(nil),                                    // 116: temporal.server.api.persistence.v1.NexusEndpointEntry
	(*v18.TaskQueueVersionInfoInternal)(nil),                           // 117: temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternal
	(*v1.UpdateWorkerBuildIdCompatibilityRequest)(nil),                 // 118: temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest
}
var file_temporal_server_api_matchingservice_v1_request_response_proto_depIdxs = []int32{
	68,  // 0: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueRequest.poll_request:type_name -> temporal.api.workflowservice.v1.PollWorkflowTaskQueueRequest
	69,  // 1: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	70,  // 2: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	71,  // 3: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.query:type_name -> temporal.api.query.v1.WorkflowQuery
	72,  // 4: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.transient_workflow_task:type_name -> temporal.server.api.history.v1.TransientWorkflowTaskInfo
	73,  // 5: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.workflow_execution_task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	74,  // 6: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.scheduled_time:type_name -> google.protobuf.Timestamp
	74,  // 7: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.started_time:type_name -> google.protobuf.Timestamp
	64,  // 8: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.queries:type_name -> temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.QueriesEntry
	75,  // 9: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.messages:type_name -> temporal.api.protocol.v1.Message
	76,  // 10: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.history:type_name -> temporal.api.history.v1.History
	77,  // 11: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.poller_scaling_decision:type_name -> temporal.api.taskqueue.v1.PollerScalingDecision
	78,  // 12: temporal.server.api.matchingservice.v1.PollActivityTaskQueueRequest.poll_request:type_name -> temporal.api.workflowservice.v1.PollActivityTaskQueueRequest
	69,  // 13: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	79,  // 14: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.activity_type:type_name -> temporal.api.common.v1.ActivityType
	80,  // 15: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.input:type_name -> temporal.api.common.v1.Payloads
	74,  // 16: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.scheduled_time:type_name -> google.protobuf.Timestamp
	81,  // 17: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.schedule_to_close_timeout:type_name -> google.protobuf.Duration
	74,  // 18: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.started_time:type_name -> google.protobuf.Timestamp
	81,  // 19: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.start_to_close_timeout:type_name -> google.protobuf.Duration
	81,  // 20: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.heartbeat_timeout:type_name -> google.protobuf.Duration
	74,  // 21: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.current_attempt_scheduled_time:type_name -> google.protobuf.Timestamp
	80,  // 22: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.heartbeat_details:type_name -> temporal.api.common.v1.Payloads
	70,  // 23: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.workflow_type:type_name -> temporal.api.common.v1.WorkflowType
	82,  // 24: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.header:type_name -> temporal.api.common.v1.Header
	77,  // 25: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.poller_scaling_decision:type_name -> temporal.api.taskqueue.v1.PollerScalingDecision
	83,  // 26: temporal.server.api.matchingservice.v1.PollActivityTaskQueueResponse.priority:type_name -> temporal.api.common.v1.Priority
	69,  // 27: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	73,  // 28: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	81,  // 29: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.schedule_to_start_timeout:type_name -> google.protobuf.Duration
	84,  // 30: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	85,  // 31: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.version_directive:type_name -> temporal.server.api.taskqueue.v1.TaskVersionDirective
	86,  // 32: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.forward_info:type_name -> temporal.server.api.taskqueue.v1.TaskForwardInfo
	83,  // 33: temporal.server.api.matchingservice.v1.AddWorkflowTaskRequest.priority:type_name -> temporal.api.common.v1.Priority
	69,  // 34: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	73,  // 35: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	81,  // 36: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.schedule_to_start_timeout:type_name -> google.protobuf.Duration
	84,  // 37: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.clock:type_name -> temporal.server.api.clock.v1.VectorClock
	85,  // 38: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.version_directive:type_name -> temporal.server.api.taskqueue.v1.TaskVersionDirective
	86,  // 39: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.forward_info:type_name -> temporal.server.api.taskqueue.v1.TaskForwardInfo
	83,  // 40: temporal.server.api.matchingservice.v1.AddActivityTaskRequest.priority:type_name -> temporal.api.common.v1.Priority
	73,  // 41: temporal.server.api.matchingservice.v1.QueryWorkflowRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	87,  // 42: temporal.server.api.matchingservice.v1.QueryWorkflowRequest.query_request:type_name -> temporal.api.workflowservice.v1.QueryWorkflowRequest
	85,  // 43: temporal.server.api.matchingservice.v1.QueryWorkflowRequest.version_directive:type_name -> temporal.server.api.taskqueue.v1.TaskVersionDirective
	86,  // 44: temporal.server.api.matchingservice.v1.QueryWorkflowRequest.forward_info:type_name -> temporal.server.api.taskqueue.v1.TaskForwardInfo
	83,  // 45: temporal.server.api.matchingservice.v1.QueryWorkflowRequest.priority:type_name -> temporal.api.common.v1.Priority
	80,  // 46: temporal.server.api.matchingservice.v1.QueryWorkflowResponse.query_result:type_name -> temporal.api.common.v1.Payloads
	88,  // 47: temporal.server.api.matchingservice.v1.QueryWorkflowResponse.query_rejected:type_name -> temporal.api.query.v1.QueryRejected
	73,  // 48: temporal.server.api.matchingservice.v1.RespondQueryTaskCompletedRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	89,  // 49: temporal.server.api.matchingservice.v1.RespondQueryTaskCompletedRequest.completed_request:type_name -> temporal.api.workflowservice.v1.RespondQueryTaskCompletedRequest
	90,  // 50: temporal.server.api.matchingservice.v1.CancelOutstandingPollRequest.task_queue_type:type_name -> temporal.api.enums.v1.TaskQueueType
	73,  // 51: temporal.server.api.matchingservice.v1.CancelOutstandingPollRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	91,  // 52: temporal.server.api.matchingservice.v1.DescribeTaskQueueRequest.desc_request:type_name -> temporal.api.workflowservice.v1.DescribeTaskQueueRequest
	92,  // 53: temporal.server.api.matchingservice.v1.DescribeTaskQueueResponse.desc_response:type_name -> temporal.api.workflowservice.v1.DescribeTaskQueueResponse
	93,  // 54: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionRequest.task_queue_partition:type_name -> temporal.server.api.taskqueue.v1.TaskQueuePartition
	94,  // 55: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionRequest.versions:type_name -> temporal.api.taskqueue.v1.TaskQueueVersionSelection
	65,  // 56: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse.versions_info_internal:type_name -> temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry
	73,  // 57: temporal.server.api.matchingservice.v1.ListTaskQueuePartitionsRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	95,  // 58: temporal.server.api.matchingservice.v1.ListTaskQueuePartitionsResponse.activity_task_queue_partitions:type_name -> temporal.api.taskqueue.v1.TaskQueuePartitionMetadata
	95,  // 59: temporal.server.api.matchingservice.v1.ListTaskQueuePartitionsResponse.workflow_task_queue_partitions:type_name -> temporal.api.taskqueue.v1.TaskQueuePartitionMetadata
	66,  // 60: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.apply_public_request:type_name -> temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.ApplyPublicRequest
	67,  // 61: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.remove_build_ids:type_name -> temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.RemoveBuildIds
	96,  // 62: temporal.server.api.matchingservice.v1.GetWorkerVersioningRulesRequest.request:type_name -> temporal.api.workflowservice.v1.GetWorkerVersioningRulesRequest
	97,  // 63: temporal.server.api.matchingservice.v1.GetWorkerVersioningRulesResponse.response:type_name -> temporal.api.workflowservice.v1.GetWorkerVersioningRulesResponse
	98,  // 64: temporal.server.api.matchingservice.v1.UpdateWorkerVersioningRulesRequest.request:type_name -> temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesRequest
	99,  // 65: temporal.server.api.matchingservice.v1.UpdateWorkerVersioningRulesResponse.response:type_name -> temporal.api.workflowservice.v1.UpdateWorkerVersioningRulesResponse
	100, // 66: temporal.server.api.matchingservice.v1.GetWorkerBuildIdCompatibilityRequest.request:type_name -> temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityRequest
	101, // 67: temporal.server.api.matchingservice.v1.GetWorkerBuildIdCompatibilityResponse.response:type_name -> temporal.api.workflowservice.v1.GetWorkerBuildIdCompatibilityResponse
	90,  // 68: temporal.server.api.matchingservice.v1.GetTaskQueueUserDataRequest.task_queue_type:type_name -> temporal.api.enums.v1.TaskQueueType
	102, // 69: temporal.server.api.matchingservice.v1.GetTaskQueueUserDataResponse.user_data:type_name -> temporal.server.api.persistence.v1.VersionedTaskQueueUserData
	90,  // 70: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.task_queue_type:type_name -> temporal.api.enums.v1.TaskQueueType
	90,  // 71: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.task_queue_types:type_name -> temporal.api.enums.v1.TaskQueueType
	103, // 72: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.deployment:type_name -> temporal.api.deployment.v1.Deployment
	104, // 73: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.data:type_name -> temporal.server.api.deployment.v1.TaskQueueData
	105, // 74: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.update_version_data:type_name -> temporal.server.api.deployment.v1.DeploymentVersionData
	106, // 75: temporal.server.api.matchingservice.v1.SyncDeploymentUserDataRequest.forget_version:type_name -> temporal.server.api.deployment.v1.WorkerDeploymentVersion
	107, // 76: temporal.server.api.matchingservice.v1.ApplyTaskQueueUserDataReplicationEventRequest.user_data:type_name -> temporal.server.api.persistence.v1.TaskQueueUserData
	93,  // 77: temporal.server.api.matchingservice.v1.ForceLoadTaskQueuePartitionRequest.task_queue_partition:type_name -> temporal.server.api.taskqueue.v1.TaskQueuePartition
	90,  // 78: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueueRequest.task_queue_type:type_name -> temporal.api.enums.v1.TaskQueueType
	93,  // 79: temporal.server.api.matchingservice.v1.ForceUnloadTaskQueuePartitionRequest.task_queue_partition:type_name -> temporal.server.api.taskqueue.v1.TaskQueuePartition
	102, // 80: temporal.server.api.matchingservice.v1.UpdateTaskQueueUserDataRequest.user_data:type_name -> temporal.server.api.persistence.v1.VersionedTaskQueueUserData
	107, // 81: temporal.server.api.matchingservice.v1.ReplicateTaskQueueUserDataRequest.user_data:type_name -> temporal.server.api.persistence.v1.TaskQueueUserData
	73,  // 82: temporal.server.api.matchingservice.v1.DispatchNexusTaskRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	108, // 83: temporal.server.api.matchingservice.v1.DispatchNexusTaskRequest.request:type_name -> temporal.api.nexus.v1.Request
	86,  // 84: temporal.server.api.matchingservice.v1.DispatchNexusTaskRequest.forward_info:type_name -> temporal.server.api.taskqueue.v1.TaskForwardInfo
	109, // 85: temporal.server.api.matchingservice.v1.DispatchNexusTaskResponse.handler_error:type_name -> temporal.api.nexus.v1.HandlerError
	110, // 86: temporal.server.api.matchingservice.v1.DispatchNexusTaskResponse.response:type_name -> temporal.api.nexus.v1.Response
	111, // 87: temporal.server.api.matchingservice.v1.PollNexusTaskQueueRequest.request:type_name -> temporal.api.workflowservice.v1.PollNexusTaskQueueRequest
	112, // 88: temporal.server.api.matchingservice.v1.PollNexusTaskQueueResponse.response:type_name -> temporal.api.workflowservice.v1.PollNexusTaskQueueResponse
	73,  // 89: temporal.server.api.matchingservice.v1.RespondNexusTaskCompletedRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	113, // 90: temporal.server.api.matchingservice.v1.RespondNexusTaskCompletedRequest.request:type_name -> temporal.api.workflowservice.v1.RespondNexusTaskCompletedRequest
	73,  // 91: temporal.server.api.matchingservice.v1.RespondNexusTaskFailedRequest.task_queue:type_name -> temporal.api.taskqueue.v1.TaskQueue
	114, // 92: temporal.server.api.matchingservice.v1.RespondNexusTaskFailedRequest.request:type_name -> temporal.api.workflowservice.v1.RespondNexusTaskFailedRequest
	115, // 93: temporal.server.api.matchingservice.v1.CreateNexusEndpointRequest.spec:type_name -> temporal.server.api.persistence.v1.NexusEndpointSpec
	116, // 94: temporal.server.api.matchingservice.v1.CreateNexusEndpointResponse.entry:type_name -> temporal.server.api.persistence.v1.NexusEndpointEntry
	115, // 95: temporal.server.api.matchingservice.v1.UpdateNexusEndpointRequest.spec:type_name -> temporal.server.api.persistence.v1.NexusEndpointSpec
	116, // 96: temporal.server.api.matchingservice.v1.UpdateNexusEndpointResponse.entry:type_name -> temporal.server.api.persistence.v1.NexusEndpointEntry
	116, // 97: temporal.server.api.matchingservice.v1.ListNexusEndpointsResponse.entries:type_name -> temporal.server.api.persistence.v1.NexusEndpointEntry
	71,  // 98: temporal.server.api.matchingservice.v1.PollWorkflowTaskQueueResponse.QueriesEntry.value:type_name -> temporal.api.query.v1.WorkflowQuery
	117, // 99: temporal.server.api.matchingservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry.value:type_name -> temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternal
	118, // 100: temporal.server.api.matchingservice.v1.UpdateWorkerBuildIdCompatibilityRequest.ApplyPublicRequest.request:type_name -> temporal.api.workflowservice.v1.UpdateWorkerBuildIdCompatibilityRequest
	101, // [101:101] is the sub-list for method output_type
	101, // [101:101] is the sub-list for method input_type
	101, // [101:101] is the sub-list for extension type_name
	101, // [101:101] is the sub-list for extension extendee
	0,   // [0:101] is the sub-list for field type_name
}

func init() { file_temporal_server_api_matchingservice_v1_request_response_proto_init() }
func file_temporal_server_api_matchingservice_v1_request_response_proto_init() {
	if File_temporal_server_api_matchingservice_v1_request_response_proto != nil {
		return
	}
	file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[20].OneofWrappers = []any{
		(*UpdateWorkerBuildIdCompatibilityRequest_ApplyPublicRequest_)(nil),
		(*UpdateWorkerBuildIdCompatibilityRequest_RemoveBuildIds_)(nil),
		(*UpdateWorkerBuildIdCompatibilityRequest_PersistUnknownBuildId)(nil),
	}
	file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[22].OneofWrappers = []any{
		(*GetWorkerVersioningRulesRequest_Request)(nil),
	}
	file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[24].OneofWrappers = []any{
		(*UpdateWorkerVersioningRulesRequest_Request)(nil),
	}
	file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[30].OneofWrappers = []any{
		(*SyncDeploymentUserDataRequest_UpdateVersionData)(nil),
		(*SyncDeploymentUserDataRequest_ForgetVersion)(nil),
	}
	file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes[49].OneofWrappers = []any{
		(*DispatchNexusTaskResponse_HandlerError)(nil),
		(*DispatchNexusTaskResponse_Response)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_matchingservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_matchingservice_v1_request_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_matchingservice_v1_request_response_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_matchingservice_v1_request_response_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_matchingservice_v1_request_response_proto_msgTypes,
	}.Build()
	File_temporal_server_api_matchingservice_v1_request_response_proto = out.File
	file_temporal_server_api_matchingservice_v1_request_response_proto_goTypes = nil
	file_temporal_server_api_matchingservice_v1_request_response_proto_depIdxs = nil
}
