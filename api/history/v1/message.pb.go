// The MIT License
//
// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/history/v1/message.proto

package history

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "go.temporal.io/api/history/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TransientWorkflowTaskInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of history events that are to be appended to the "real" workflow history.
	HistorySuffix []*v1.HistoryEvent `protobuf:"bytes,3,rep,name=history_suffix,json=historySuffix,proto3" json:"history_suffix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransientWorkflowTaskInfo) Reset() {
	*x = TransientWorkflowTaskInfo{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransientWorkflowTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransientWorkflowTaskInfo) ProtoMessage() {}

func (x *TransientWorkflowTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransientWorkflowTaskInfo.ProtoReflect.Descriptor instead.
func (*TransientWorkflowTaskInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *TransientWorkflowTaskInfo) GetHistorySuffix() []*v1.HistoryEvent {
	if x != nil {
		return x.HistorySuffix
	}
	return nil
}

// VersionHistoryItem contains signal eventId and the corresponding version.
type VersionHistoryItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       int64                  `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionHistoryItem) Reset() {
	*x = VersionHistoryItem{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionHistoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionHistoryItem) ProtoMessage() {}

func (x *VersionHistoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionHistoryItem.ProtoReflect.Descriptor instead.
func (*VersionHistoryItem) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *VersionHistoryItem) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *VersionHistoryItem) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// VersionHistory contains the version history of a branch.
type VersionHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchToken   []byte                 `protobuf:"bytes,1,opt,name=branch_token,json=branchToken,proto3" json:"branch_token,omitempty"`
	Items         []*VersionHistoryItem  `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionHistory) Reset() {
	*x = VersionHistory{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionHistory) ProtoMessage() {}

func (x *VersionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionHistory.ProtoReflect.Descriptor instead.
func (*VersionHistory) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *VersionHistory) GetBranchToken() []byte {
	if x != nil {
		return x.BranchToken
	}
	return nil
}

func (x *VersionHistory) GetItems() []*VersionHistoryItem {
	if x != nil {
		return x.Items
	}
	return nil
}

// VersionHistories contains all version histories from all branches.
type VersionHistories struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	CurrentVersionHistoryIndex int32                  `protobuf:"varint,1,opt,name=current_version_history_index,json=currentVersionHistoryIndex,proto3" json:"current_version_history_index,omitempty"`
	Histories                  []*VersionHistory      `protobuf:"bytes,2,rep,name=histories,proto3" json:"histories,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *VersionHistories) Reset() {
	*x = VersionHistories{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionHistories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionHistories) ProtoMessage() {}

func (x *VersionHistories) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionHistories.ProtoReflect.Descriptor instead.
func (*VersionHistories) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *VersionHistories) GetCurrentVersionHistoryIndex() int32 {
	if x != nil {
		return x.CurrentVersionHistoryIndex
	}
	return 0
}

func (x *VersionHistories) GetHistories() []*VersionHistory {
	if x != nil {
		return x.Histories
	}
	return nil
}

type TaskKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int64                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FireTime      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=fire_time,json=fireTime,proto3" json:"fire_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskKey) Reset() {
	*x = TaskKey{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskKey) ProtoMessage() {}

func (x *TaskKey) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskKey.ProtoReflect.Descriptor instead.
func (*TaskKey) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *TaskKey) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskKey) GetFireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FireTime
	}
	return nil
}

type TaskRange struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	InclusiveMinTaskKey *TaskKey               `protobuf:"bytes,1,opt,name=inclusive_min_task_key,json=inclusiveMinTaskKey,proto3" json:"inclusive_min_task_key,omitempty"`
	ExclusiveMaxTaskKey *TaskKey               `protobuf:"bytes,2,opt,name=exclusive_max_task_key,json=exclusiveMaxTaskKey,proto3" json:"exclusive_max_task_key,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TaskRange) Reset() {
	*x = TaskRange{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRange) ProtoMessage() {}

func (x *TaskRange) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRange.ProtoReflect.Descriptor instead.
func (*TaskRange) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *TaskRange) GetInclusiveMinTaskKey() *TaskKey {
	if x != nil {
		return x.InclusiveMinTaskKey
	}
	return nil
}

func (x *TaskRange) GetExclusiveMaxTaskKey() *TaskKey {
	if x != nil {
		return x.ExclusiveMaxTaskKey
	}
	return nil
}

// StrippedHistoryEvent is a stripped down version of HistoryEvent that only contains the event_id and version.
type StrippedHistoryEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       int64                  `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Version       int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrippedHistoryEvent) Reset() {
	*x = StrippedHistoryEvent{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrippedHistoryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrippedHistoryEvent) ProtoMessage() {}

func (x *StrippedHistoryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrippedHistoryEvent.ProtoReflect.Descriptor instead.
func (*StrippedHistoryEvent) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *StrippedHistoryEvent) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *StrippedHistoryEvent) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type StrippedHistoryEvents struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Events        []*StrippedHistoryEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StrippedHistoryEvents) Reset() {
	*x = StrippedHistoryEvents{}
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StrippedHistoryEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StrippedHistoryEvents) ProtoMessage() {}

func (x *StrippedHistoryEvents) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_history_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StrippedHistoryEvents.ProtoReflect.Descriptor instead.
func (*StrippedHistoryEvents) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_history_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *StrippedHistoryEvents) GetEvents() []*StrippedHistoryEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_temporal_server_api_history_v1_message_proto protoreflect.FileDescriptor

const file_temporal_server_api_history_v1_message_proto_rawDesc = "" +
	"\n" +
	",temporal/server/api/history/v1/message.proto\x12\x1etemporal.server.api.history.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%temporal/api/history/v1/message.proto\"u\n" +
	"\x19TransientWorkflowTaskInfo\x12L\n" +
	"\x0ehistory_suffix\x18\x03 \x03(\v2%.temporal.api.history.v1.HistoryEventR\rhistorySuffixJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"I\n" +
	"\x12VersionHistoryItem\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x03R\aeventId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"}\n" +
	"\x0eVersionHistory\x12!\n" +
	"\fbranch_token\x18\x01 \x01(\fR\vbranchToken\x12H\n" +
	"\x05items\x18\x02 \x03(\v22.temporal.server.api.history.v1.VersionHistoryItemR\x05items\"\xa3\x01\n" +
	"\x10VersionHistories\x12A\n" +
	"\x1dcurrent_version_history_index\x18\x01 \x01(\x05R\x1acurrentVersionHistoryIndex\x12L\n" +
	"\thistories\x18\x02 \x03(\v2..temporal.server.api.history.v1.VersionHistoryR\thistories\"[\n" +
	"\aTaskKey\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x03R\x06taskId\x127\n" +
	"\tfire_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\bfireTime\"\xc7\x01\n" +
	"\tTaskRange\x12\\\n" +
	"\x16inclusive_min_task_key\x18\x01 \x01(\v2'.temporal.server.api.history.v1.TaskKeyR\x13inclusiveMinTaskKey\x12\\\n" +
	"\x16exclusive_max_task_key\x18\x02 \x01(\v2'.temporal.server.api.history.v1.TaskKeyR\x13exclusiveMaxTaskKey\"K\n" +
	"\x14StrippedHistoryEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\x03R\aeventId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\"e\n" +
	"\x15StrippedHistoryEvents\x12L\n" +
	"\x06events\x18\x01 \x03(\v24.temporal.server.api.history.v1.StrippedHistoryEventR\x06eventsB.Z,go.temporal.io/server/api/history/v1;historyb\x06proto3"

var (
	file_temporal_server_api_history_v1_message_proto_rawDescOnce sync.Once
	file_temporal_server_api_history_v1_message_proto_rawDescData []byte
)

func file_temporal_server_api_history_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_server_api_history_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_history_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_history_v1_message_proto_rawDesc), len(file_temporal_server_api_history_v1_message_proto_rawDesc)))
	})
	return file_temporal_server_api_history_v1_message_proto_rawDescData
}

var file_temporal_server_api_history_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_temporal_server_api_history_v1_message_proto_goTypes = []any{
	(*TransientWorkflowTaskInfo)(nil), // 0: temporal.server.api.history.v1.TransientWorkflowTaskInfo
	(*VersionHistoryItem)(nil),        // 1: temporal.server.api.history.v1.VersionHistoryItem
	(*VersionHistory)(nil),            // 2: temporal.server.api.history.v1.VersionHistory
	(*VersionHistories)(nil),          // 3: temporal.server.api.history.v1.VersionHistories
	(*TaskKey)(nil),                   // 4: temporal.server.api.history.v1.TaskKey
	(*TaskRange)(nil),                 // 5: temporal.server.api.history.v1.TaskRange
	(*StrippedHistoryEvent)(nil),      // 6: temporal.server.api.history.v1.StrippedHistoryEvent
	(*StrippedHistoryEvents)(nil),     // 7: temporal.server.api.history.v1.StrippedHistoryEvents
	(*v1.HistoryEvent)(nil),           // 8: temporal.api.history.v1.HistoryEvent
	(*timestamppb.Timestamp)(nil),     // 9: google.protobuf.Timestamp
}
var file_temporal_server_api_history_v1_message_proto_depIdxs = []int32{
	8, // 0: temporal.server.api.history.v1.TransientWorkflowTaskInfo.history_suffix:type_name -> temporal.api.history.v1.HistoryEvent
	1, // 1: temporal.server.api.history.v1.VersionHistory.items:type_name -> temporal.server.api.history.v1.VersionHistoryItem
	2, // 2: temporal.server.api.history.v1.VersionHistories.histories:type_name -> temporal.server.api.history.v1.VersionHistory
	9, // 3: temporal.server.api.history.v1.TaskKey.fire_time:type_name -> google.protobuf.Timestamp
	4, // 4: temporal.server.api.history.v1.TaskRange.inclusive_min_task_key:type_name -> temporal.server.api.history.v1.TaskKey
	4, // 5: temporal.server.api.history.v1.TaskRange.exclusive_max_task_key:type_name -> temporal.server.api.history.v1.TaskKey
	6, // 6: temporal.server.api.history.v1.StrippedHistoryEvents.events:type_name -> temporal.server.api.history.v1.StrippedHistoryEvent
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_temporal_server_api_history_v1_message_proto_init() }
func file_temporal_server_api_history_v1_message_proto_init() {
	if File_temporal_server_api_history_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_history_v1_message_proto_rawDesc), len(file_temporal_server_api_history_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_history_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_history_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_history_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_server_api_history_v1_message_proto = out.File
	file_temporal_server_api_history_v1_message_proto_goTypes = nil
	file_temporal_server_api_history_v1_message_proto_depIdxs = nil
}
