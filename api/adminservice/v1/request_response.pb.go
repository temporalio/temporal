// The MIT License
//
// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/adminservice/v1/request_response.proto

package adminservice

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "go.temporal.io/api/common/v1"
	v16 "go.temporal.io/api/enums/v1"
	v110 "go.temporal.io/api/namespace/v1"
	v111 "go.temporal.io/api/replication/v1"
	v114 "go.temporal.io/api/taskqueue/v1"
	v19 "go.temporal.io/api/version/v1"
	v17 "go.temporal.io/api/workflow/v1"
	v18 "go.temporal.io/server/api/cluster/v1"
	v112 "go.temporal.io/server/api/common/v1"
	v14 "go.temporal.io/server/api/enums/v1"
	v11 "go.temporal.io/server/api/history/v1"
	v13 "go.temporal.io/server/api/namespace/v1"
	v12 "go.temporal.io/server/api/persistence/v1"
	v15 "go.temporal.io/server/api/replication/v1"
	v113 "go.temporal.io/server/api/taskqueue/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RebuildMutableStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution     *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildMutableStateRequest) Reset() {
	*x = RebuildMutableStateRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildMutableStateRequest) ProtoMessage() {}

func (x *RebuildMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildMutableStateRequest.ProtoReflect.Descriptor instead.
func (*RebuildMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{0}
}

func (x *RebuildMutableStateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RebuildMutableStateRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type RebuildMutableStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildMutableStateResponse) Reset() {
	*x = RebuildMutableStateResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildMutableStateResponse) ProtoMessage() {}

func (x *RebuildMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildMutableStateResponse.ProtoReflect.Descriptor instead.
func (*RebuildMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{1}
}

type ImportWorkflowExecutionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Namespace      string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution      *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	HistoryBatches []*v1.DataBlob         `protobuf:"bytes,3,rep,name=history_batches,json=historyBatches,proto3" json:"history_batches,omitempty"`
	VersionHistory *v11.VersionHistory    `protobuf:"bytes,4,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	Token          []byte                 `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ImportWorkflowExecutionRequest) Reset() {
	*x = ImportWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWorkflowExecutionRequest) ProtoMessage() {}

func (x *ImportWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*ImportWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{2}
}

func (x *ImportWorkflowExecutionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImportWorkflowExecutionRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetHistoryBatches() []*v1.DataBlob {
	if x != nil {
		return x.HistoryBatches
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetVersionHistory() *v11.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *ImportWorkflowExecutionRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ImportWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         []byte                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportWorkflowExecutionResponse) Reset() {
	*x = ImportWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWorkflowExecutionResponse) ProtoMessage() {}

func (x *ImportWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*ImportWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{3}
}

func (x *ImportWorkflowExecutionResponse) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type DescribeMutableStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution     *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeMutableStateRequest) Reset() {
	*x = DescribeMutableStateRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMutableStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMutableStateRequest) ProtoMessage() {}

func (x *DescribeMutableStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMutableStateRequest.ProtoReflect.Descriptor instead.
func (*DescribeMutableStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeMutableStateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DescribeMutableStateRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type DescribeMutableStateResponse struct {
	state                protoimpl.MessageState    `protogen:"open.v1"`
	ShardId              string                    `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	HistoryAddr          string                    `protobuf:"bytes,2,opt,name=history_addr,json=historyAddr,proto3" json:"history_addr,omitempty"`
	CacheMutableState    *v12.WorkflowMutableState `protobuf:"bytes,3,opt,name=cache_mutable_state,json=cacheMutableState,proto3" json:"cache_mutable_state,omitempty"`
	DatabaseMutableState *v12.WorkflowMutableState `protobuf:"bytes,4,opt,name=database_mutable_state,json=databaseMutableState,proto3" json:"database_mutable_state,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeMutableStateResponse) Reset() {
	*x = DescribeMutableStateResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeMutableStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeMutableStateResponse) ProtoMessage() {}

func (x *DescribeMutableStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeMutableStateResponse.ProtoReflect.Descriptor instead.
func (*DescribeMutableStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeMutableStateResponse) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *DescribeMutableStateResponse) GetHistoryAddr() string {
	if x != nil {
		return x.HistoryAddr
	}
	return ""
}

func (x *DescribeMutableStateResponse) GetCacheMutableState() *v12.WorkflowMutableState {
	if x != nil {
		return x.CacheMutableState
	}
	return nil
}

func (x *DescribeMutableStateResponse) GetDatabaseMutableState() *v12.WorkflowMutableState {
	if x != nil {
		return x.DatabaseMutableState
	}
	return nil
}

// At least one of the parameters needs to be provided.
type DescribeHistoryHostRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	//ip:port
	HostAddress       string                `protobuf:"bytes,1,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	ShardId           int32                 `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Namespace         string                `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	WorkflowExecution *v1.WorkflowExecution `protobuf:"bytes,4,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DescribeHistoryHostRequest) Reset() {
	*x = DescribeHistoryHostRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeHistoryHostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeHistoryHostRequest) ProtoMessage() {}

func (x *DescribeHistoryHostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeHistoryHostRequest.ProtoReflect.Descriptor instead.
func (*DescribeHistoryHostRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeHistoryHostRequest) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *DescribeHistoryHostRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *DescribeHistoryHostRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DescribeHistoryHostRequest) GetWorkflowExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

type DescribeHistoryHostResponse struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	ShardsNumber   int32                   `protobuf:"varint,1,opt,name=shards_number,json=shardsNumber,proto3" json:"shards_number,omitempty"`
	ShardIds       []int32                 `protobuf:"varint,2,rep,packed,name=shard_ids,json=shardIds,proto3" json:"shard_ids,omitempty"`
	NamespaceCache *v13.NamespaceCacheInfo `protobuf:"bytes,3,opt,name=namespace_cache,json=namespaceCache,proto3" json:"namespace_cache,omitempty"`
	Address        string                  `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DescribeHistoryHostResponse) Reset() {
	*x = DescribeHistoryHostResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeHistoryHostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeHistoryHostResponse) ProtoMessage() {}

func (x *DescribeHistoryHostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeHistoryHostResponse.ProtoReflect.Descriptor instead.
func (*DescribeHistoryHostResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeHistoryHostResponse) GetShardsNumber() int32 {
	if x != nil {
		return x.ShardsNumber
	}
	return 0
}

func (x *DescribeHistoryHostResponse) GetShardIds() []int32 {
	if x != nil {
		return x.ShardIds
	}
	return nil
}

func (x *DescribeHistoryHostResponse) GetNamespaceCache() *v13.NamespaceCacheInfo {
	if x != nil {
		return x.NamespaceCache
	}
	return nil
}

func (x *DescribeHistoryHostResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CloseShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseShardRequest) Reset() {
	*x = CloseShardRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardRequest) ProtoMessage() {}

func (x *CloseShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardRequest.ProtoReflect.Descriptor instead.
func (*CloseShardRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{8}
}

func (x *CloseShardRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type CloseShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseShardResponse) Reset() {
	*x = CloseShardResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShardResponse) ProtoMessage() {}

func (x *CloseShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShardResponse.ProtoReflect.Descriptor instead.
func (*CloseShardResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{9}
}

type GetShardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardRequest) Reset() {
	*x = GetShardRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardRequest) ProtoMessage() {}

func (x *GetShardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardRequest.ProtoReflect.Descriptor instead.
func (*GetShardRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{10}
}

func (x *GetShardRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

type GetShardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardInfo     *v12.ShardInfo         `protobuf:"bytes,1,opt,name=shard_info,json=shardInfo,proto3" json:"shard_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardResponse) Reset() {
	*x = GetShardResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardResponse) ProtoMessage() {}

func (x *GetShardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardResponse.ProtoReflect.Descriptor instead.
func (*GetShardResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{11}
}

func (x *GetShardResponse) GetShardInfo() *v12.ShardInfo {
	if x != nil {
		return x.ShardInfo
	}
	return nil
}

type ListHistoryTasksRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	ShardId int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// The task category. See tasks.TaskCategoryRegistry for more.
	Category      int32          `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	TaskRange     *v11.TaskRange `protobuf:"bytes,3,opt,name=task_range,json=taskRange,proto3" json:"task_range,omitempty"`
	BatchSize     int32          `protobuf:"varint,4,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	NextPageToken []byte         `protobuf:"bytes,5,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHistoryTasksRequest) Reset() {
	*x = ListHistoryTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoryTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoryTasksRequest) ProtoMessage() {}

func (x *ListHistoryTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoryTasksRequest.ProtoReflect.Descriptor instead.
func (*ListHistoryTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{12}
}

func (x *ListHistoryTasksRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *ListHistoryTasksRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *ListHistoryTasksRequest) GetTaskRange() *v11.TaskRange {
	if x != nil {
		return x.TaskRange
	}
	return nil
}

func (x *ListHistoryTasksRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *ListHistoryTasksRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListHistoryTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHistoryTasksResponse) Reset() {
	*x = ListHistoryTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHistoryTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHistoryTasksResponse) ProtoMessage() {}

func (x *ListHistoryTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHistoryTasksResponse.ProtoReflect.Descriptor instead.
func (*ListHistoryTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{13}
}

func (x *ListHistoryTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ListHistoryTasksResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	TaskId        int64                  `protobuf:"varint,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskType      v14.TaskType           `protobuf:"varint,5,opt,name=task_type,json=taskType,proto3,enum=temporal.server.api.enums.v1.TaskType" json:"task_type,omitempty"`
	FireTime      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=fire_time,json=fireTime,proto3" json:"fire_time,omitempty"`
	Version       int64                  `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{14}
}

func (x *Task) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *Task) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *Task) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *Task) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Task) GetTaskType() v14.TaskType {
	if x != nil {
		return x.TaskType
	}
	return v14.TaskType(0)
}

func (x *Task) GetFireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FireTime
	}
	return nil
}

func (x *Task) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type RemoveTaskRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	ShardId int32                  `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// The task category. See tasks.TaskCategoryRegistry for more.
	Category       int32                  `protobuf:"varint,2,opt,name=category,proto3" json:"category,omitempty"`
	TaskId         int64                  `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	VisibilityTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=visibility_time,json=visibilityTime,proto3" json:"visibility_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveTaskRequest) Reset() {
	*x = RemoveTaskRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskRequest) ProtoMessage() {}

func (x *RemoveTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskRequest.ProtoReflect.Descriptor instead.
func (*RemoveTaskRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveTaskRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *RemoveTaskRequest) GetCategory() int32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *RemoveTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *RemoveTaskRequest) GetVisibilityTime() *timestamppb.Timestamp {
	if x != nil {
		return x.VisibilityTime
	}
	return nil
}

type RemoveTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveTaskResponse) Reset() {
	*x = RemoveTaskResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTaskResponse) ProtoMessage() {}

func (x *RemoveTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTaskResponse.ProtoReflect.Descriptor instead.
func (*RemoveTaskResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{16}
}

// *
// StartEventId defines the beginning of the event to fetch. The first event is exclusive.
// EndEventId and EndEventVersion defines the end of the event to fetch. The end event is exclusive.
type GetWorkflowExecutionRawHistoryV2Request struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,9,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution         *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	StartEventId      int64                  `protobuf:"varint,3,opt,name=start_event_id,json=startEventId,proto3" json:"start_event_id,omitempty"`
	StartEventVersion int64                  `protobuf:"varint,4,opt,name=start_event_version,json=startEventVersion,proto3" json:"start_event_version,omitempty"`
	EndEventId        int64                  `protobuf:"varint,5,opt,name=end_event_id,json=endEventId,proto3" json:"end_event_id,omitempty"`
	EndEventVersion   int64                  `protobuf:"varint,6,opt,name=end_event_version,json=endEventVersion,proto3" json:"end_event_version,omitempty"`
	MaximumPageSize   int32                  `protobuf:"varint,7,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken     []byte                 `protobuf:"bytes,8,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryV2Request) Reset() {
	*x = GetWorkflowExecutionRawHistoryV2Request{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryV2Request) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryV2Request.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryV2Request) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{17}
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetStartEventId() int64 {
	if x != nil {
		return x.StartEventId
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetStartEventVersion() int64 {
	if x != nil {
		return x.StartEventVersion
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetEndEventId() int64 {
	if x != nil {
		return x.EndEventId
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetEndEventVersion() int64 {
	if x != nil {
		return x.EndEventVersion
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryV2Request) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetWorkflowExecutionRawHistoryV2Response struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NextPageToken  []byte                 `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	HistoryBatches []*v1.DataBlob         `protobuf:"bytes,2,rep,name=history_batches,json=historyBatches,proto3" json:"history_batches,omitempty"`
	VersionHistory *v11.VersionHistory    `protobuf:"bytes,3,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	HistoryNodeIds []int64                `protobuf:"varint,4,rep,packed,name=history_node_ids,json=historyNodeIds,proto3" json:"history_node_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryV2Response) Reset() {
	*x = GetWorkflowExecutionRawHistoryV2Response{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryV2Response) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryV2Response.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryV2Response) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{18}
}

func (x *GetWorkflowExecutionRawHistoryV2Response) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryV2Response) GetHistoryBatches() []*v1.DataBlob {
	if x != nil {
		return x.HistoryBatches
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryV2Response) GetVersionHistory() *v11.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryV2Response) GetHistoryNodeIds() []int64 {
	if x != nil {
		return x.HistoryNodeIds
	}
	return nil
}

type GetWorkflowExecutionRawHistoryRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution         *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	StartEventId      int64                  `protobuf:"varint,3,opt,name=start_event_id,json=startEventId,proto3" json:"start_event_id,omitempty"`
	StartEventVersion int64                  `protobuf:"varint,4,opt,name=start_event_version,json=startEventVersion,proto3" json:"start_event_version,omitempty"`
	EndEventId        int64                  `protobuf:"varint,5,opt,name=end_event_id,json=endEventId,proto3" json:"end_event_id,omitempty"`
	EndEventVersion   int64                  `protobuf:"varint,6,opt,name=end_event_version,json=endEventVersion,proto3" json:"end_event_version,omitempty"`
	MaximumPageSize   int32                  `protobuf:"varint,7,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken     []byte                 `protobuf:"bytes,8,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryRequest) Reset() {
	*x = GetWorkflowExecutionRawHistoryRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryRequest) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{19}
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetStartEventId() int64 {
	if x != nil {
		return x.StartEventId
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetStartEventVersion() int64 {
	if x != nil {
		return x.StartEventVersion
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetEndEventId() int64 {
	if x != nil {
		return x.EndEventId
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetEndEventVersion() int64 {
	if x != nil {
		return x.EndEventVersion
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *GetWorkflowExecutionRawHistoryRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetWorkflowExecutionRawHistoryResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NextPageToken  []byte                 `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	HistoryBatches []*v1.DataBlob         `protobuf:"bytes,2,rep,name=history_batches,json=historyBatches,proto3" json:"history_batches,omitempty"`
	VersionHistory *v11.VersionHistory    `protobuf:"bytes,3,opt,name=version_history,json=versionHistory,proto3" json:"version_history,omitempty"`
	HistoryNodeIds []int64                `protobuf:"varint,4,rep,packed,name=history_node_ids,json=historyNodeIds,proto3" json:"history_node_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetWorkflowExecutionRawHistoryResponse) Reset() {
	*x = GetWorkflowExecutionRawHistoryResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWorkflowExecutionRawHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkflowExecutionRawHistoryResponse) ProtoMessage() {}

func (x *GetWorkflowExecutionRawHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkflowExecutionRawHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetWorkflowExecutionRawHistoryResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{20}
}

func (x *GetWorkflowExecutionRawHistoryResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryResponse) GetHistoryBatches() []*v1.DataBlob {
	if x != nil {
		return x.HistoryBatches
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryResponse) GetVersionHistory() *v11.VersionHistory {
	if x != nil {
		return x.VersionHistory
	}
	return nil
}

func (x *GetWorkflowExecutionRawHistoryResponse) GetHistoryNodeIds() []int64 {
	if x != nil {
		return x.HistoryNodeIds
	}
	return nil
}

type GetReplicationMessagesRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Tokens        []*v15.ReplicationToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
	ClusterName   string                  `protobuf:"bytes,2,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationMessagesRequest) Reset() {
	*x = GetReplicationMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationMessagesRequest) ProtoMessage() {}

func (x *GetReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{21}
}

func (x *GetReplicationMessagesRequest) GetTokens() []*v15.ReplicationToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *GetReplicationMessagesRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetReplicationMessagesResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	ShardMessages map[int32]*v15.ReplicationMessages `protobuf:"bytes,1,rep,name=shard_messages,json=shardMessages,proto3" json:"shard_messages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationMessagesResponse) Reset() {
	*x = GetReplicationMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationMessagesResponse) ProtoMessage() {}

func (x *GetReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{22}
}

func (x *GetReplicationMessagesResponse) GetShardMessages() map[int32]*v15.ReplicationMessages {
	if x != nil {
		return x.ShardMessages
	}
	return nil
}

type GetNamespaceReplicationMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// lastRetrievedMessageId is where the next fetch should begin with.
	LastRetrievedMessageId int64 `protobuf:"varint,1,opt,name=last_retrieved_message_id,json=lastRetrievedMessageId,proto3" json:"last_retrieved_message_id,omitempty"`
	// lastProcessedMessageId is the last messageId that is processed on the passive side.
	// This can be different than lastRetrievedMessageId if passive side supports prefetching messages.
	LastProcessedMessageId int64 `protobuf:"varint,2,opt,name=last_processed_message_id,json=lastProcessedMessageId,proto3" json:"last_processed_message_id,omitempty"`
	// clusterName is the name of the pulling cluster.
	ClusterName   string `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceReplicationMessagesRequest) Reset() {
	*x = GetNamespaceReplicationMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceReplicationMessagesRequest) ProtoMessage() {}

func (x *GetNamespaceReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{23}
}

func (x *GetNamespaceReplicationMessagesRequest) GetLastRetrievedMessageId() int64 {
	if x != nil {
		return x.LastRetrievedMessageId
	}
	return 0
}

func (x *GetNamespaceReplicationMessagesRequest) GetLastProcessedMessageId() int64 {
	if x != nil {
		return x.LastProcessedMessageId
	}
	return 0
}

func (x *GetNamespaceReplicationMessagesRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetNamespaceReplicationMessagesResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Messages      *v15.ReplicationMessages `protobuf:"bytes,1,opt,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceReplicationMessagesResponse) Reset() {
	*x = GetNamespaceReplicationMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceReplicationMessagesResponse) ProtoMessage() {}

func (x *GetNamespaceReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{24}
}

func (x *GetNamespaceReplicationMessagesResponse) GetMessages() *v15.ReplicationMessages {
	if x != nil {
		return x.Messages
	}
	return nil
}

type GetDLQReplicationMessagesRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	TaskInfos     []*v15.ReplicationTaskInfo `protobuf:"bytes,1,rep,name=task_infos,json=taskInfos,proto3" json:"task_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQReplicationMessagesRequest) Reset() {
	*x = GetDLQReplicationMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQReplicationMessagesRequest) ProtoMessage() {}

func (x *GetDLQReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetDLQReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{25}
}

func (x *GetDLQReplicationMessagesRequest) GetTaskInfos() []*v15.ReplicationTaskInfo {
	if x != nil {
		return x.TaskInfos
	}
	return nil
}

type GetDLQReplicationMessagesResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReplicationTasks []*v15.ReplicationTask `protobuf:"bytes,1,rep,name=replication_tasks,json=replicationTasks,proto3" json:"replication_tasks,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetDLQReplicationMessagesResponse) Reset() {
	*x = GetDLQReplicationMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQReplicationMessagesResponse) ProtoMessage() {}

func (x *GetDLQReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetDLQReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{26}
}

func (x *GetDLQReplicationMessagesResponse) GetReplicationTasks() []*v15.ReplicationTask {
	if x != nil {
		return x.ReplicationTasks
	}
	return nil
}

// ReapplyEventsRequest is the request for reapply events API.
type ReapplyEventsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId       string                 `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowExecution *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	Events            *v1.DataBlob           `protobuf:"bytes,3,opt,name=events,proto3" json:"events,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReapplyEventsRequest) Reset() {
	*x = ReapplyEventsRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReapplyEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReapplyEventsRequest) ProtoMessage() {}

func (x *ReapplyEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReapplyEventsRequest.ProtoReflect.Descriptor instead.
func (*ReapplyEventsRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{27}
}

func (x *ReapplyEventsRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ReapplyEventsRequest) GetWorkflowExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *ReapplyEventsRequest) GetEvents() *v1.DataBlob {
	if x != nil {
		return x.Events
	}
	return nil
}

type ReapplyEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReapplyEventsResponse) Reset() {
	*x = ReapplyEventsResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReapplyEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReapplyEventsResponse) ProtoMessage() {}

func (x *ReapplyEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReapplyEventsResponse.ProtoReflect.Descriptor instead.
func (*ReapplyEventsResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{28}
}

type AddSearchAttributesRequest struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	SearchAttributes map[string]v16.IndexedValueType `protobuf:"bytes,1,rep,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=temporal.api.enums.v1.IndexedValueType"`
	IndexName        string                          `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	SkipSchemaUpdate bool                            `protobuf:"varint,3,opt,name=skip_schema_update,json=skipSchemaUpdate,proto3" json:"skip_schema_update,omitempty"`
	Namespace        string                          `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddSearchAttributesRequest) Reset() {
	*x = AddSearchAttributesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSearchAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSearchAttributesRequest) ProtoMessage() {}

func (x *AddSearchAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSearchAttributesRequest.ProtoReflect.Descriptor instead.
func (*AddSearchAttributesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{29}
}

func (x *AddSearchAttributesRequest) GetSearchAttributes() map[string]v16.IndexedValueType {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *AddSearchAttributesRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *AddSearchAttributesRequest) GetSkipSchemaUpdate() bool {
	if x != nil {
		return x.SkipSchemaUpdate
	}
	return false
}

func (x *AddSearchAttributesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type AddSearchAttributesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddSearchAttributesResponse) Reset() {
	*x = AddSearchAttributesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddSearchAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSearchAttributesResponse) ProtoMessage() {}

func (x *AddSearchAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSearchAttributesResponse.ProtoReflect.Descriptor instead.
func (*AddSearchAttributesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{30}
}

type RemoveSearchAttributesRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SearchAttributes []string               `protobuf:"bytes,1,rep,name=search_attributes,json=searchAttributes,proto3" json:"search_attributes,omitempty"`
	IndexName        string                 `protobuf:"bytes,2,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Namespace        string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RemoveSearchAttributesRequest) Reset() {
	*x = RemoveSearchAttributesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSearchAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSearchAttributesRequest) ProtoMessage() {}

func (x *RemoveSearchAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSearchAttributesRequest.ProtoReflect.Descriptor instead.
func (*RemoveSearchAttributesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{31}
}

func (x *RemoveSearchAttributesRequest) GetSearchAttributes() []string {
	if x != nil {
		return x.SearchAttributes
	}
	return nil
}

func (x *RemoveSearchAttributesRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *RemoveSearchAttributesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RemoveSearchAttributesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveSearchAttributesResponse) Reset() {
	*x = RemoveSearchAttributesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveSearchAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSearchAttributesResponse) ProtoMessage() {}

func (x *RemoveSearchAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSearchAttributesResponse.ProtoReflect.Descriptor instead.
func (*RemoveSearchAttributesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{32}
}

type GetSearchAttributesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexName     string                 `protobuf:"bytes,1,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSearchAttributesRequest) Reset() {
	*x = GetSearchAttributesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSearchAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchAttributesRequest) ProtoMessage() {}

func (x *GetSearchAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchAttributesRequest.ProtoReflect.Descriptor instead.
func (*GetSearchAttributesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{33}
}

func (x *GetSearchAttributesRequest) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *GetSearchAttributesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetSearchAttributesResponse struct {
	state            protoimpl.MessageState          `protogen:"open.v1"`
	CustomAttributes map[string]v16.IndexedValueType `protobuf:"bytes,1,rep,name=custom_attributes,json=customAttributes,proto3" json:"custom_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=temporal.api.enums.v1.IndexedValueType"`
	SystemAttributes map[string]v16.IndexedValueType `protobuf:"bytes,2,rep,name=system_attributes,json=systemAttributes,proto3" json:"system_attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=temporal.api.enums.v1.IndexedValueType"`
	Mapping          map[string]string               `protobuf:"bytes,3,rep,name=mapping,proto3" json:"mapping,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// State of the workflow that adds search attributes to the system.
	AddWorkflowExecutionInfo *v17.WorkflowExecutionInfo `protobuf:"bytes,4,opt,name=add_workflow_execution_info,json=addWorkflowExecutionInfo,proto3" json:"add_workflow_execution_info,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetSearchAttributesResponse) Reset() {
	*x = GetSearchAttributesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSearchAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSearchAttributesResponse) ProtoMessage() {}

func (x *GetSearchAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSearchAttributesResponse.ProtoReflect.Descriptor instead.
func (*GetSearchAttributesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{34}
}

func (x *GetSearchAttributesResponse) GetCustomAttributes() map[string]v16.IndexedValueType {
	if x != nil {
		return x.CustomAttributes
	}
	return nil
}

func (x *GetSearchAttributesResponse) GetSystemAttributes() map[string]v16.IndexedValueType {
	if x != nil {
		return x.SystemAttributes
	}
	return nil
}

func (x *GetSearchAttributesResponse) GetMapping() map[string]string {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *GetSearchAttributesResponse) GetAddWorkflowExecutionInfo() *v17.WorkflowExecutionInfo {
	if x != nil {
		return x.AddWorkflowExecutionInfo
	}
	return nil
}

type DescribeClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterName   string                 `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeClusterRequest) Reset() {
	*x = DescribeClusterRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeClusterRequest) ProtoMessage() {}

func (x *DescribeClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeClusterRequest.ProtoReflect.Descriptor instead.
func (*DescribeClusterRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{35}
}

func (x *DescribeClusterRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type DescribeClusterResponse struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	SupportedClients         map[string]string      `protobuf:"bytes,1,rep,name=supported_clients,json=supportedClients,proto3" json:"supported_clients,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ServerVersion            string                 `protobuf:"bytes,2,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	MembershipInfo           *v18.MembershipInfo    `protobuf:"bytes,3,opt,name=membership_info,json=membershipInfo,proto3" json:"membership_info,omitempty"`
	ClusterId                string                 `protobuf:"bytes,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	ClusterName              string                 `protobuf:"bytes,5,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	HistoryShardCount        int32                  `protobuf:"varint,6,opt,name=history_shard_count,json=historyShardCount,proto3" json:"history_shard_count,omitempty"`
	PersistenceStore         string                 `protobuf:"bytes,7,opt,name=persistence_store,json=persistenceStore,proto3" json:"persistence_store,omitempty"`
	VisibilityStore          string                 `protobuf:"bytes,8,opt,name=visibility_store,json=visibilityStore,proto3" json:"visibility_store,omitempty"`
	VersionInfo              *v19.VersionInfo       `protobuf:"bytes,9,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	FailoverVersionIncrement int64                  `protobuf:"varint,10,opt,name=failover_version_increment,json=failoverVersionIncrement,proto3" json:"failover_version_increment,omitempty"`
	InitialFailoverVersion   int64                  `protobuf:"varint,11,opt,name=initial_failover_version,json=initialFailoverVersion,proto3" json:"initial_failover_version,omitempty"`
	IsGlobalNamespaceEnabled bool                   `protobuf:"varint,12,opt,name=is_global_namespace_enabled,json=isGlobalNamespaceEnabled,proto3" json:"is_global_namespace_enabled,omitempty"`
	Tags                     map[string]string      `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	HttpAddress              string                 `protobuf:"bytes,14,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *DescribeClusterResponse) Reset() {
	*x = DescribeClusterResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeClusterResponse) ProtoMessage() {}

func (x *DescribeClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeClusterResponse.ProtoReflect.Descriptor instead.
func (*DescribeClusterResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{36}
}

func (x *DescribeClusterResponse) GetSupportedClients() map[string]string {
	if x != nil {
		return x.SupportedClients
	}
	return nil
}

func (x *DescribeClusterResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *DescribeClusterResponse) GetMembershipInfo() *v18.MembershipInfo {
	if x != nil {
		return x.MembershipInfo
	}
	return nil
}

func (x *DescribeClusterResponse) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *DescribeClusterResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *DescribeClusterResponse) GetHistoryShardCount() int32 {
	if x != nil {
		return x.HistoryShardCount
	}
	return 0
}

func (x *DescribeClusterResponse) GetPersistenceStore() string {
	if x != nil {
		return x.PersistenceStore
	}
	return ""
}

func (x *DescribeClusterResponse) GetVisibilityStore() string {
	if x != nil {
		return x.VisibilityStore
	}
	return ""
}

func (x *DescribeClusterResponse) GetVersionInfo() *v19.VersionInfo {
	if x != nil {
		return x.VersionInfo
	}
	return nil
}

func (x *DescribeClusterResponse) GetFailoverVersionIncrement() int64 {
	if x != nil {
		return x.FailoverVersionIncrement
	}
	return 0
}

func (x *DescribeClusterResponse) GetInitialFailoverVersion() int64 {
	if x != nil {
		return x.InitialFailoverVersion
	}
	return 0
}

func (x *DescribeClusterResponse) GetIsGlobalNamespaceEnabled() bool {
	if x != nil {
		return x.IsGlobalNamespaceEnabled
	}
	return false
}

func (x *DescribeClusterResponse) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DescribeClusterResponse) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

type ListClustersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersRequest) Reset() {
	*x = ListClustersRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersRequest) ProtoMessage() {}

func (x *ListClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersRequest.ProtoReflect.Descriptor instead.
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{37}
}

func (x *ListClustersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClustersRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListClustersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clusters      []*v12.ClusterMetadata `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClustersResponse) Reset() {
	*x = ListClustersResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClustersResponse) ProtoMessage() {}

func (x *ListClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClustersResponse.ProtoReflect.Descriptor instead.
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{38}
}

func (x *ListClustersResponse) GetClusters() []*v12.ClusterMetadata {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *ListClustersResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type AddOrUpdateRemoteClusterRequest struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	FrontendAddress               string                 `protobuf:"bytes,1,opt,name=frontend_address,json=frontendAddress,proto3" json:"frontend_address,omitempty"`
	EnableRemoteClusterConnection bool                   `protobuf:"varint,2,opt,name=enable_remote_cluster_connection,json=enableRemoteClusterConnection,proto3" json:"enable_remote_cluster_connection,omitempty"`
	// Deprecated: Marked as deprecated in temporal/server/api/adminservice/v1/request_response.proto.
	FrontendHttpAddress string `protobuf:"bytes,3,opt,name=frontend_http_address,json=frontendHttpAddress,proto3" json:"frontend_http_address,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AddOrUpdateRemoteClusterRequest) Reset() {
	*x = AddOrUpdateRemoteClusterRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrUpdateRemoteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateRemoteClusterRequest) ProtoMessage() {}

func (x *AddOrUpdateRemoteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateRemoteClusterRequest.ProtoReflect.Descriptor instead.
func (*AddOrUpdateRemoteClusterRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{39}
}

func (x *AddOrUpdateRemoteClusterRequest) GetFrontendAddress() string {
	if x != nil {
		return x.FrontendAddress
	}
	return ""
}

func (x *AddOrUpdateRemoteClusterRequest) GetEnableRemoteClusterConnection() bool {
	if x != nil {
		return x.EnableRemoteClusterConnection
	}
	return false
}

// Deprecated: Marked as deprecated in temporal/server/api/adminservice/v1/request_response.proto.
func (x *AddOrUpdateRemoteClusterRequest) GetFrontendHttpAddress() string {
	if x != nil {
		return x.FrontendHttpAddress
	}
	return ""
}

type AddOrUpdateRemoteClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOrUpdateRemoteClusterResponse) Reset() {
	*x = AddOrUpdateRemoteClusterResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrUpdateRemoteClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateRemoteClusterResponse) ProtoMessage() {}

func (x *AddOrUpdateRemoteClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateRemoteClusterResponse.ProtoReflect.Descriptor instead.
func (*AddOrUpdateRemoteClusterResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{40}
}

type RemoveRemoteClusterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterName   string                 `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRemoteClusterRequest) Reset() {
	*x = RemoveRemoteClusterRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRemoteClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRemoteClusterRequest) ProtoMessage() {}

func (x *RemoveRemoteClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRemoteClusterRequest.ProtoReflect.Descriptor instead.
func (*RemoveRemoteClusterRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{41}
}

func (x *RemoveRemoteClusterRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type RemoveRemoteClusterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRemoteClusterResponse) Reset() {
	*x = RemoveRemoteClusterResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRemoteClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRemoteClusterResponse) ProtoMessage() {}

func (x *RemoveRemoteClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRemoteClusterResponse.ProtoReflect.Descriptor instead.
func (*RemoveRemoteClusterResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{42}
}

type ListClusterMembersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "within" is used to indicate a time range. --)
	LastHeartbeatWithin *durationpb.Duration  `protobuf:"bytes,1,opt,name=last_heartbeat_within,json=lastHeartbeatWithin,proto3" json:"last_heartbeat_within,omitempty"`
	RpcAddress          string                `protobuf:"bytes,2,opt,name=rpc_address,json=rpcAddress,proto3" json:"rpc_address,omitempty"`
	HostId              string                `protobuf:"bytes,3,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	Role                v14.ClusterMemberRole `protobuf:"varint,4,opt,name=role,proto3,enum=temporal.server.api.enums.v1.ClusterMemberRole" json:"role,omitempty"`
	// (-- api-linter: core::0140::prepositions=disabled
	//
	//	aip.dev/not-precedent: "after" is used to indicate a time range. --)
	SessionStartedAfterTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=session_started_after_time,json=sessionStartedAfterTime,proto3" json:"session_started_after_time,omitempty"`
	PageSize                int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken           []byte                 `protobuf:"bytes,7,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListClusterMembersRequest) Reset() {
	*x = ListClusterMembersRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMembersRequest) ProtoMessage() {}

func (x *ListClusterMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMembersRequest.ProtoReflect.Descriptor instead.
func (*ListClusterMembersRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{43}
}

func (x *ListClusterMembersRequest) GetLastHeartbeatWithin() *durationpb.Duration {
	if x != nil {
		return x.LastHeartbeatWithin
	}
	return nil
}

func (x *ListClusterMembersRequest) GetRpcAddress() string {
	if x != nil {
		return x.RpcAddress
	}
	return ""
}

func (x *ListClusterMembersRequest) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *ListClusterMembersRequest) GetRole() v14.ClusterMemberRole {
	if x != nil {
		return x.Role
	}
	return v14.ClusterMemberRole(0)
}

func (x *ListClusterMembersRequest) GetSessionStartedAfterTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SessionStartedAfterTime
	}
	return nil
}

func (x *ListClusterMembersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClusterMembersRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListClusterMembersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActiveMembers []*v18.ClusterMember   `protobuf:"bytes,1,rep,name=active_members,json=activeMembers,proto3" json:"active_members,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClusterMembersResponse) Reset() {
	*x = ListClusterMembersResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClusterMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClusterMembersResponse) ProtoMessage() {}

func (x *ListClusterMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClusterMembersResponse.ProtoReflect.Descriptor instead.
func (*ListClusterMembersResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{44}
}

func (x *ListClusterMembersResponse) GetActiveMembers() []*v18.ClusterMember {
	if x != nil {
		return x.ActiveMembers
	}
	return nil
}

func (x *ListClusterMembersResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetDLQMessagesRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	Type                  v14.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                   `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                  `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                   `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	MaximumPageSize       int32                   `protobuf:"varint,5,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken         []byte                  `protobuf:"bytes,6,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetDLQMessagesRequest) Reset() {
	*x = GetDLQMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQMessagesRequest) ProtoMessage() {}

func (x *GetDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{45}
}

func (x *GetDLQMessagesRequest) GetType() v14.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v14.DeadLetterQueueType(0)
}

func (x *GetDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *GetDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *GetDLQMessagesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetDLQMessagesResponse struct {
	state                protoimpl.MessageState     `protogen:"open.v1"`
	Type                 v14.DeadLetterQueueType    `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ReplicationTasks     []*v15.ReplicationTask     `protobuf:"bytes,2,rep,name=replication_tasks,json=replicationTasks,proto3" json:"replication_tasks,omitempty"`
	NextPageToken        []byte                     `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	ReplicationTasksInfo []*v15.ReplicationTaskInfo `protobuf:"bytes,4,rep,name=replication_tasks_info,json=replicationTasksInfo,proto3" json:"replication_tasks_info,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetDLQMessagesResponse) Reset() {
	*x = GetDLQMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQMessagesResponse) ProtoMessage() {}

func (x *GetDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{46}
}

func (x *GetDLQMessagesResponse) GetType() v14.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v14.DeadLetterQueueType(0)
}

func (x *GetDLQMessagesResponse) GetReplicationTasks() []*v15.ReplicationTask {
	if x != nil {
		return x.ReplicationTasks
	}
	return nil
}

func (x *GetDLQMessagesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

func (x *GetDLQMessagesResponse) GetReplicationTasksInfo() []*v15.ReplicationTaskInfo {
	if x != nil {
		return x.ReplicationTasksInfo
	}
	return nil
}

type PurgeDLQMessagesRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	Type                  v14.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                   `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                  `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                   `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PurgeDLQMessagesRequest) Reset() {
	*x = PurgeDLQMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQMessagesRequest) ProtoMessage() {}

func (x *PurgeDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*PurgeDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{47}
}

func (x *PurgeDLQMessagesRequest) GetType() v14.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v14.DeadLetterQueueType(0)
}

func (x *PurgeDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *PurgeDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *PurgeDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

type PurgeDLQMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeDLQMessagesResponse) Reset() {
	*x = PurgeDLQMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQMessagesResponse) ProtoMessage() {}

func (x *PurgeDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*PurgeDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{48}
}

type MergeDLQMessagesRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	Type                  v14.DeadLetterQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=temporal.server.api.enums.v1.DeadLetterQueueType" json:"type,omitempty"`
	ShardId               int32                   `protobuf:"varint,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	SourceCluster         string                  `protobuf:"bytes,3,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	InclusiveEndMessageId int64                   `protobuf:"varint,4,opt,name=inclusive_end_message_id,json=inclusiveEndMessageId,proto3" json:"inclusive_end_message_id,omitempty"`
	MaximumPageSize       int32                   `protobuf:"varint,5,opt,name=maximum_page_size,json=maximumPageSize,proto3" json:"maximum_page_size,omitempty"`
	NextPageToken         []byte                  `protobuf:"bytes,6,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MergeDLQMessagesRequest) Reset() {
	*x = MergeDLQMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQMessagesRequest) ProtoMessage() {}

func (x *MergeDLQMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQMessagesRequest.ProtoReflect.Descriptor instead.
func (*MergeDLQMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{49}
}

func (x *MergeDLQMessagesRequest) GetType() v14.DeadLetterQueueType {
	if x != nil {
		return x.Type
	}
	return v14.DeadLetterQueueType(0)
}

func (x *MergeDLQMessagesRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetSourceCluster() string {
	if x != nil {
		return x.SourceCluster
	}
	return ""
}

func (x *MergeDLQMessagesRequest) GetInclusiveEndMessageId() int64 {
	if x != nil {
		return x.InclusiveEndMessageId
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetMaximumPageSize() int32 {
	if x != nil {
		return x.MaximumPageSize
	}
	return 0
}

func (x *MergeDLQMessagesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type MergeDLQMessagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextPageToken []byte                 `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeDLQMessagesResponse) Reset() {
	*x = MergeDLQMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQMessagesResponse) ProtoMessage() {}

func (x *MergeDLQMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQMessagesResponse.ProtoReflect.Descriptor instead.
func (*MergeDLQMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{50}
}

func (x *MergeDLQMessagesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type RefreshWorkflowTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,3,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution     *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshWorkflowTasksRequest) Reset() {
	*x = RefreshWorkflowTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshWorkflowTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWorkflowTasksRequest) ProtoMessage() {}

func (x *RefreshWorkflowTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWorkflowTasksRequest.ProtoReflect.Descriptor instead.
func (*RefreshWorkflowTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{51}
}

func (x *RefreshWorkflowTasksRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RefreshWorkflowTasksRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type RefreshWorkflowTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshWorkflowTasksResponse) Reset() {
	*x = RefreshWorkflowTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshWorkflowTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshWorkflowTasksResponse) ProtoMessage() {}

func (x *RefreshWorkflowTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshWorkflowTasksResponse.ProtoReflect.Descriptor instead.
func (*RefreshWorkflowTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{52}
}

type ResendReplicationTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceId   string                 `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	WorkflowId    string                 `protobuf:"bytes,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	RemoteCluster string                 `protobuf:"bytes,4,opt,name=remote_cluster,json=remoteCluster,proto3" json:"remote_cluster,omitempty"`
	StartEventId  int64                  `protobuf:"varint,5,opt,name=start_event_id,json=startEventId,proto3" json:"start_event_id,omitempty"`
	StartVersion  int64                  `protobuf:"varint,6,opt,name=start_version,json=startVersion,proto3" json:"start_version,omitempty"`
	EndEventId    int64                  `protobuf:"varint,7,opt,name=end_event_id,json=endEventId,proto3" json:"end_event_id,omitempty"`
	EndVersion    int64                  `protobuf:"varint,8,opt,name=end_version,json=endVersion,proto3" json:"end_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendReplicationTasksRequest) Reset() {
	*x = ResendReplicationTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendReplicationTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendReplicationTasksRequest) ProtoMessage() {}

func (x *ResendReplicationTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendReplicationTasksRequest.ProtoReflect.Descriptor instead.
func (*ResendReplicationTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{53}
}

func (x *ResendReplicationTasksRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *ResendReplicationTasksRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *ResendReplicationTasksRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ResendReplicationTasksRequest) GetRemoteCluster() string {
	if x != nil {
		return x.RemoteCluster
	}
	return ""
}

func (x *ResendReplicationTasksRequest) GetStartEventId() int64 {
	if x != nil {
		return x.StartEventId
	}
	return 0
}

func (x *ResendReplicationTasksRequest) GetStartVersion() int64 {
	if x != nil {
		return x.StartVersion
	}
	return 0
}

func (x *ResendReplicationTasksRequest) GetEndEventId() int64 {
	if x != nil {
		return x.EndEventId
	}
	return 0
}

func (x *ResendReplicationTasksRequest) GetEndVersion() int64 {
	if x != nil {
		return x.EndVersion
	}
	return 0
}

type ResendReplicationTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResendReplicationTasksResponse) Reset() {
	*x = ResendReplicationTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResendReplicationTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendReplicationTasksResponse) ProtoMessage() {}

func (x *ResendReplicationTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendReplicationTasksResponse.ProtoReflect.Descriptor instead.
func (*ResendReplicationTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{54}
}

type GetTaskQueueTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TaskQueue     string                 `protobuf:"bytes,2,opt,name=task_queue,json=taskQueue,proto3" json:"task_queue,omitempty"`
	TaskQueueType v16.TaskQueueType      `protobuf:"varint,3,opt,name=task_queue_type,json=taskQueueType,proto3,enum=temporal.api.enums.v1.TaskQueueType" json:"task_queue_type,omitempty"`
	MinTaskId     int64                  `protobuf:"varint,4,opt,name=min_task_id,json=minTaskId,proto3" json:"min_task_id,omitempty"`
	MaxTaskId     int64                  `protobuf:"varint,5,opt,name=max_task_id,json=maxTaskId,proto3" json:"max_task_id,omitempty"`
	BatchSize     int32                  `protobuf:"varint,6,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,7,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskQueueTasksRequest) Reset() {
	*x = GetTaskQueueTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskQueueTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskQueueTasksRequest) ProtoMessage() {}

func (x *GetTaskQueueTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskQueueTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTaskQueueTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{55}
}

func (x *GetTaskQueueTasksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetTaskQueueTasksRequest) GetTaskQueue() string {
	if x != nil {
		return x.TaskQueue
	}
	return ""
}

func (x *GetTaskQueueTasksRequest) GetTaskQueueType() v16.TaskQueueType {
	if x != nil {
		return x.TaskQueueType
	}
	return v16.TaskQueueType(0)
}

func (x *GetTaskQueueTasksRequest) GetMinTaskId() int64 {
	if x != nil {
		return x.MinTaskId
	}
	return 0
}

func (x *GetTaskQueueTasksRequest) GetMaxTaskId() int64 {
	if x != nil {
		return x.MaxTaskId
	}
	return 0
}

func (x *GetTaskQueueTasksRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *GetTaskQueueTasksRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetTaskQueueTasksResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Tasks         []*v12.AllocatedTaskInfo `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	NextPageToken []byte                   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskQueueTasksResponse) Reset() {
	*x = GetTaskQueueTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskQueueTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskQueueTasksResponse) ProtoMessage() {}

func (x *GetTaskQueueTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskQueueTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTaskQueueTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{56}
}

func (x *GetTaskQueueTasksResponse) GetTasks() []*v12.AllocatedTaskInfo {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetTaskQueueTasksResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type DeleteWorkflowExecutionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution     *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowExecutionRequest) Reset() {
	*x = DeleteWorkflowExecutionRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowExecutionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowExecutionRequest) ProtoMessage() {}

func (x *DeleteWorkflowExecutionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowExecutionRequest.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowExecutionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{57}
}

func (x *DeleteWorkflowExecutionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteWorkflowExecutionRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type DeleteWorkflowExecutionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Warnings      []string               `protobuf:"bytes,1,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWorkflowExecutionResponse) Reset() {
	*x = DeleteWorkflowExecutionResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkflowExecutionResponse) ProtoMessage() {}

func (x *DeleteWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*DeleteWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteWorkflowExecutionResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type StreamWorkflowReplicationMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attributes:
	//
	//	*StreamWorkflowReplicationMessagesRequest_SyncReplicationState
	Attributes    isStreamWorkflowReplicationMessagesRequest_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWorkflowReplicationMessagesRequest) Reset() {
	*x = StreamWorkflowReplicationMessagesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWorkflowReplicationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkflowReplicationMessagesRequest) ProtoMessage() {}

func (x *StreamWorkflowReplicationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkflowReplicationMessagesRequest.ProtoReflect.Descriptor instead.
func (*StreamWorkflowReplicationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{59}
}

func (x *StreamWorkflowReplicationMessagesRequest) GetAttributes() isStreamWorkflowReplicationMessagesRequest_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StreamWorkflowReplicationMessagesRequest) GetSyncReplicationState() *v15.SyncReplicationState {
	if x != nil {
		if x, ok := x.Attributes.(*StreamWorkflowReplicationMessagesRequest_SyncReplicationState); ok {
			return x.SyncReplicationState
		}
	}
	return nil
}

type isStreamWorkflowReplicationMessagesRequest_Attributes interface {
	isStreamWorkflowReplicationMessagesRequest_Attributes()
}

type StreamWorkflowReplicationMessagesRequest_SyncReplicationState struct {
	SyncReplicationState *v15.SyncReplicationState `protobuf:"bytes,1,opt,name=sync_replication_state,json=syncReplicationState,proto3,oneof"`
}

func (*StreamWorkflowReplicationMessagesRequest_SyncReplicationState) isStreamWorkflowReplicationMessagesRequest_Attributes() {
}

type StreamWorkflowReplicationMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attributes:
	//
	//	*StreamWorkflowReplicationMessagesResponse_Messages
	Attributes    isStreamWorkflowReplicationMessagesResponse_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamWorkflowReplicationMessagesResponse) Reset() {
	*x = StreamWorkflowReplicationMessagesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamWorkflowReplicationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkflowReplicationMessagesResponse) ProtoMessage() {}

func (x *StreamWorkflowReplicationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkflowReplicationMessagesResponse.ProtoReflect.Descriptor instead.
func (*StreamWorkflowReplicationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{60}
}

func (x *StreamWorkflowReplicationMessagesResponse) GetAttributes() isStreamWorkflowReplicationMessagesResponse_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *StreamWorkflowReplicationMessagesResponse) GetMessages() *v15.WorkflowReplicationMessages {
	if x != nil {
		if x, ok := x.Attributes.(*StreamWorkflowReplicationMessagesResponse_Messages); ok {
			return x.Messages
		}
	}
	return nil
}

type isStreamWorkflowReplicationMessagesResponse_Attributes interface {
	isStreamWorkflowReplicationMessagesResponse_Attributes()
}

type StreamWorkflowReplicationMessagesResponse_Messages struct {
	Messages *v15.WorkflowReplicationMessages `protobuf:"bytes,1,opt,name=messages,proto3,oneof"`
}

func (*StreamWorkflowReplicationMessagesResponse_Messages) isStreamWorkflowReplicationMessagesResponse_Attributes() {
}

type GetNamespaceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Attributes:
	//
	//	*GetNamespaceRequest_Namespace
	//	*GetNamespaceRequest_Id
	Attributes    isGetNamespaceRequest_Attributes `protobuf_oneof:"attributes"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceRequest) Reset() {
	*x = GetNamespaceRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceRequest) ProtoMessage() {}

func (x *GetNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{61}
}

func (x *GetNamespaceRequest) GetAttributes() isGetNamespaceRequest_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GetNamespaceRequest) GetNamespace() string {
	if x != nil {
		if x, ok := x.Attributes.(*GetNamespaceRequest_Namespace); ok {
			return x.Namespace
		}
	}
	return ""
}

func (x *GetNamespaceRequest) GetId() string {
	if x != nil {
		if x, ok := x.Attributes.(*GetNamespaceRequest_Id); ok {
			return x.Id
		}
	}
	return ""
}

type isGetNamespaceRequest_Attributes interface {
	isGetNamespaceRequest_Attributes()
}

type GetNamespaceRequest_Namespace struct {
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3,oneof"`
}

type GetNamespaceRequest_Id struct {
	Id string `protobuf:"bytes,2,opt,name=id,proto3,oneof"`
}

func (*GetNamespaceRequest_Namespace) isGetNamespaceRequest_Attributes() {}

func (*GetNamespaceRequest_Id) isGetNamespaceRequest_Attributes() {}

type GetNamespaceResponse struct {
	state             protoimpl.MessageState           `protogen:"open.v1"`
	Info              *v110.NamespaceInfo              `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Config            *v110.NamespaceConfig            `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	ReplicationConfig *v111.NamespaceReplicationConfig `protobuf:"bytes,5,opt,name=replication_config,json=replicationConfig,proto3" json:"replication_config,omitempty"`
	ConfigVersion     int64                            `protobuf:"varint,6,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	FailoverVersion   int64                            `protobuf:"varint,7,opt,name=failover_version,json=failoverVersion,proto3" json:"failover_version,omitempty"`
	FailoverHistory   []*v111.FailoverStatus           `protobuf:"bytes,8,rep,name=failover_history,json=failoverHistory,proto3" json:"failover_history,omitempty"`
	IsGlobalNamespace bool                             `protobuf:"varint,9,opt,name=is_global_namespace,json=isGlobalNamespace,proto3" json:"is_global_namespace,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNamespaceResponse) Reset() {
	*x = GetNamespaceResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceResponse) ProtoMessage() {}

func (x *GetNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{62}
}

func (x *GetNamespaceResponse) GetInfo() *v110.NamespaceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetNamespaceResponse) GetConfig() *v110.NamespaceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetNamespaceResponse) GetReplicationConfig() *v111.NamespaceReplicationConfig {
	if x != nil {
		return x.ReplicationConfig
	}
	return nil
}

func (x *GetNamespaceResponse) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *GetNamespaceResponse) GetFailoverVersion() int64 {
	if x != nil {
		return x.FailoverVersion
	}
	return 0
}

func (x *GetNamespaceResponse) GetFailoverHistory() []*v111.FailoverStatus {
	if x != nil {
		return x.FailoverHistory
	}
	return nil
}

func (x *GetNamespaceResponse) GetIsGlobalNamespace() bool {
	if x != nil {
		return x.IsGlobalNamespace
	}
	return false
}

type GetDLQTasksRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	DlqKey *v112.HistoryDLQKey    `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	// page_size must be positive. Up to this many tasks will be returned.
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQTasksRequest) Reset() {
	*x = GetDLQTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQTasksRequest) ProtoMessage() {}

func (x *GetDLQTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQTasksRequest.ProtoReflect.Descriptor instead.
func (*GetDLQTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{63}
}

func (x *GetDLQTasksRequest) GetDlqKey() *v112.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *GetDLQTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetDLQTasksRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type GetDLQTasksResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	DlqTasks []*v112.HistoryDLQTask `protobuf:"bytes,1,rep,name=dlq_tasks,json=dlqTasks,proto3" json:"dlq_tasks,omitempty"`
	// next_page_token is empty if there are no more results. However, the converse is not true. If there are no more
	// results, this field may still be non-empty. This is to avoid having to do a count query to determine whether
	// there are more results.
	NextPageToken []byte `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDLQTasksResponse) Reset() {
	*x = GetDLQTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDLQTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDLQTasksResponse) ProtoMessage() {}

func (x *GetDLQTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDLQTasksResponse.ProtoReflect.Descriptor instead.
func (*GetDLQTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{64}
}

func (x *GetDLQTasksResponse) GetDlqTasks() []*v112.HistoryDLQTask {
	if x != nil {
		return x.DlqTasks
	}
	return nil
}

func (x *GetDLQTasksResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type PurgeDLQTasksRequest struct {
	state                    protoimpl.MessageState       `protogen:"open.v1"`
	DlqKey                   *v112.HistoryDLQKey          `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	InclusiveMaxTaskMetadata *v112.HistoryDLQTaskMetadata `protobuf:"bytes,2,opt,name=inclusive_max_task_metadata,json=inclusiveMaxTaskMetadata,proto3" json:"inclusive_max_task_metadata,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PurgeDLQTasksRequest) Reset() {
	*x = PurgeDLQTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQTasksRequest) ProtoMessage() {}

func (x *PurgeDLQTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQTasksRequest.ProtoReflect.Descriptor instead.
func (*PurgeDLQTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{65}
}

func (x *PurgeDLQTasksRequest) GetDlqKey() *v112.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *PurgeDLQTasksRequest) GetInclusiveMaxTaskMetadata() *v112.HistoryDLQTaskMetadata {
	if x != nil {
		return x.InclusiveMaxTaskMetadata
	}
	return nil
}

type PurgeDLQTasksResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// job_token is a token that can be used to query the status of the purge operation.
	JobToken      []byte `protobuf:"bytes,1,opt,name=job_token,json=jobToken,proto3" json:"job_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgeDLQTasksResponse) Reset() {
	*x = PurgeDLQTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeDLQTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeDLQTasksResponse) ProtoMessage() {}

func (x *PurgeDLQTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeDLQTasksResponse.ProtoReflect.Descriptor instead.
func (*PurgeDLQTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{66}
}

func (x *PurgeDLQTasksResponse) GetJobToken() []byte {
	if x != nil {
		return x.JobToken
	}
	return nil
}

// DLQJobToken identifies a DLQ job. This proto is for internal use only and clients should not use it.
type DLQJobToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId    string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	RunId         string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DLQJobToken) Reset() {
	*x = DLQJobToken{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DLQJobToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DLQJobToken) ProtoMessage() {}

func (x *DLQJobToken) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DLQJobToken.ProtoReflect.Descriptor instead.
func (*DLQJobToken) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{67}
}

func (x *DLQJobToken) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *DLQJobToken) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type MergeDLQTasksRequest struct {
	state                    protoimpl.MessageState       `protogen:"open.v1"`
	DlqKey                   *v112.HistoryDLQKey          `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	InclusiveMaxTaskMetadata *v112.HistoryDLQTaskMetadata `protobuf:"bytes,2,opt,name=inclusive_max_task_metadata,json=inclusiveMaxTaskMetadata,proto3" json:"inclusive_max_task_metadata,omitempty"`
	// batch_size controls how many tasks to merge at a time. The default can be found in the dlq package of the server.
	// - If this is negative, an error will be returned.
	// - If this is 0, the default will be used.
	// - If this is greater than the maximum allowed batch size, an error will be returned.
	// - Otherwise, the specified batch size will be used.
	BatchSize     int32 `protobuf:"varint,3,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeDLQTasksRequest) Reset() {
	*x = MergeDLQTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQTasksRequest) ProtoMessage() {}

func (x *MergeDLQTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQTasksRequest.ProtoReflect.Descriptor instead.
func (*MergeDLQTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{68}
}

func (x *MergeDLQTasksRequest) GetDlqKey() *v112.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *MergeDLQTasksRequest) GetInclusiveMaxTaskMetadata() *v112.HistoryDLQTaskMetadata {
	if x != nil {
		return x.InclusiveMaxTaskMetadata
	}
	return nil
}

func (x *MergeDLQTasksRequest) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type MergeDLQTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobToken      []byte                 `protobuf:"bytes,1,opt,name=job_token,json=jobToken,proto3" json:"job_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeDLQTasksResponse) Reset() {
	*x = MergeDLQTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeDLQTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeDLQTasksResponse) ProtoMessage() {}

func (x *MergeDLQTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeDLQTasksResponse.ProtoReflect.Descriptor instead.
func (*MergeDLQTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{69}
}

func (x *MergeDLQTasksResponse) GetJobToken() []byte {
	if x != nil {
		return x.JobToken
	}
	return nil
}

type DescribeDLQJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Job token of MergeDLQTasks or PurgeDLQTasks job.
	JobToken      []byte `protobuf:"bytes,1,opt,name=job_token,json=jobToken,proto3" json:"job_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeDLQJobRequest) Reset() {
	*x = DescribeDLQJobRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeDLQJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDLQJobRequest) ProtoMessage() {}

func (x *DescribeDLQJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDLQJobRequest.ProtoReflect.Descriptor instead.
func (*DescribeDLQJobRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{70}
}

func (x *DescribeDLQJobRequest) GetJobToken() []byte {
	if x != nil {
		return x.JobToken
	}
	return nil
}

type DescribeDLQJobResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DlqKey         *v112.HistoryDLQKey    `protobuf:"bytes,1,opt,name=dlq_key,json=dlqKey,proto3" json:"dlq_key,omitempty"`
	OperationType  v14.DLQOperationType   `protobuf:"varint,2,opt,name=operation_type,json=operationType,proto3,enum=temporal.server.api.enums.v1.DLQOperationType" json:"operation_type,omitempty"`
	OperationState v14.DLQOperationState  `protobuf:"varint,3,opt,name=operation_state,json=operationState,proto3,enum=temporal.server.api.enums.v1.DLQOperationState" json:"operation_state,omitempty"`
	StartTime      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// max_message_id is the ID of the last message(inclusive) to be processed as part of this job.
	MaxMessageId int64 `protobuf:"varint,6,opt,name=max_message_id,json=maxMessageId,proto3" json:"max_message_id,omitempty"`
	// last_processed_message_id is the ID of the last message that has been processed.
	// For PurgeDLQTasks job, it the ID of the last message that was purged.
	// For MergeDLQTasks job, it is the ID of the last message that was re-enqueued and removed from the DLQ.
	LastProcessedMessageId int64 `protobuf:"varint,7,opt,name=last_processed_message_id,json=lastProcessedMessageId,proto3" json:"last_processed_message_id,omitempty"`
	// messages_processed is the total number of messages that are re-enqueued and deleted from the DLQ so far by the DLQ job.
	MessagesProcessed int64 `protobuf:"varint,8,opt,name=messages_processed,json=messagesProcessed,proto3" json:"messages_processed,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DescribeDLQJobResponse) Reset() {
	*x = DescribeDLQJobResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeDLQJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDLQJobResponse) ProtoMessage() {}

func (x *DescribeDLQJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDLQJobResponse.ProtoReflect.Descriptor instead.
func (*DescribeDLQJobResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{71}
}

func (x *DescribeDLQJobResponse) GetDlqKey() *v112.HistoryDLQKey {
	if x != nil {
		return x.DlqKey
	}
	return nil
}

func (x *DescribeDLQJobResponse) GetOperationType() v14.DLQOperationType {
	if x != nil {
		return x.OperationType
	}
	return v14.DLQOperationType(0)
}

func (x *DescribeDLQJobResponse) GetOperationState() v14.DLQOperationState {
	if x != nil {
		return x.OperationState
	}
	return v14.DLQOperationState(0)
}

func (x *DescribeDLQJobResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *DescribeDLQJobResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *DescribeDLQJobResponse) GetMaxMessageId() int64 {
	if x != nil {
		return x.MaxMessageId
	}
	return 0
}

func (x *DescribeDLQJobResponse) GetLastProcessedMessageId() int64 {
	if x != nil {
		return x.LastProcessedMessageId
	}
	return 0
}

func (x *DescribeDLQJobResponse) GetMessagesProcessed() int64 {
	if x != nil {
		return x.MessagesProcessed
	}
	return 0
}

type CancelDLQJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Job token of MergeDLQTasks or PurgeDLQTasks job to cancel.
	JobToken []byte `protobuf:"bytes,1,opt,name=job_token,json=jobToken,proto3" json:"job_token,omitempty"`
	// The reason for cancellation.
	Reason        string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelDLQJobRequest) Reset() {
	*x = CancelDLQJobRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelDLQJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDLQJobRequest) ProtoMessage() {}

func (x *CancelDLQJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDLQJobRequest.ProtoReflect.Descriptor instead.
func (*CancelDLQJobRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{72}
}

func (x *CancelDLQJobRequest) GetJobToken() []byte {
	if x != nil {
		return x.JobToken
	}
	return nil
}

func (x *CancelDLQJobRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type CancelDLQJobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// This is true if the workflow was successfully terminated by this request and false if
	// the workflow was already completed or terminated.
	Canceled      bool `protobuf:"varint,1,opt,name=canceled,proto3" json:"canceled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelDLQJobResponse) Reset() {
	*x = CancelDLQJobResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelDLQJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelDLQJobResponse) ProtoMessage() {}

func (x *CancelDLQJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelDLQJobResponse.ProtoReflect.Descriptor instead.
func (*CancelDLQJobResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{73}
}

func (x *CancelDLQJobResponse) GetCanceled() bool {
	if x != nil {
		return x.Canceled
	}
	return false
}

// This is a direct copy of the same proto in the history service. We can't import it, though because of a circular
// dependency. In addition, we can't extract a common request proto because the shard_id needs to be present in the top
// proto layer, so we duplicate it. It shouldn't be a big deal because this proto is not very big.
type AddTasksRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	ShardId       int32                   `protobuf:"varint,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Tasks         []*AddTasksRequest_Task `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksRequest) Reset() {
	*x = AddTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksRequest) ProtoMessage() {}

func (x *AddTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksRequest.ProtoReflect.Descriptor instead.
func (*AddTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{74}
}

func (x *AddTasksRequest) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *AddTasksRequest) GetTasks() []*AddTasksRequest_Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type AddTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksResponse) Reset() {
	*x = AddTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksResponse) ProtoMessage() {}

func (x *AddTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksResponse.ProtoReflect.Descriptor instead.
func (*AddTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{75}
}

type ListQueuesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueType     int32                  `protobuf:"varint,1,opt,name=queue_type,json=queueType,proto3" json:"queue_type,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPageToken []byte                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesRequest) Reset() {
	*x = ListQueuesRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesRequest) ProtoMessage() {}

func (x *ListQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesRequest.ProtoReflect.Descriptor instead.
func (*ListQueuesRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{76}
}

func (x *ListQueuesRequest) GetQueueType() int32 {
	if x != nil {
		return x.QueueType
	}
	return 0
}

func (x *ListQueuesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListQueuesRequest) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type ListQueuesResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Queues        []*ListQueuesResponse_QueueInfo `protobuf:"bytes,1,rep,name=queues,proto3" json:"queues,omitempty"`
	NextPageToken []byte                          `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesResponse) Reset() {
	*x = ListQueuesResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse) ProtoMessage() {}

func (x *ListQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{77}
}

func (x *ListQueuesResponse) GetQueues() []*ListQueuesResponse_QueueInfo {
	if x != nil {
		return x.Queues
	}
	return nil
}

func (x *ListQueuesResponse) GetNextPageToken() []byte {
	if x != nil {
		return x.NextPageToken
	}
	return nil
}

type DeepHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeepHealthCheckRequest) Reset() {
	*x = DeepHealthCheckRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckRequest) ProtoMessage() {}

func (x *DeepHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{78}
}

type DeepHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         v14.HealthState        `protobuf:"varint,1,opt,name=state,proto3,enum=temporal.server.api.enums.v1.HealthState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeepHealthCheckResponse) Reset() {
	*x = DeepHealthCheckResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeepHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckResponse) ProtoMessage() {}

func (x *DeepHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{79}
}

func (x *DeepHealthCheckResponse) GetState() v14.HealthState {
	if x != nil {
		return x.State
	}
	return v14.HealthState(0)
}

type SyncWorkflowStateRequest struct {
	state               protoimpl.MessageState   `protogen:"open.v1"`
	NamespaceId         string                   `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Execution           *v1.WorkflowExecution    `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	VersionedTransition *v12.VersionedTransition `protobuf:"bytes,3,opt,name=versioned_transition,json=versionedTransition,proto3" json:"versioned_transition,omitempty"`
	VersionHistories    *v11.VersionHistories    `protobuf:"bytes,4,opt,name=version_histories,json=versionHistories,proto3" json:"version_histories,omitempty"`
	TargetClusterId     int32                    `protobuf:"varint,5,opt,name=target_cluster_id,json=targetClusterId,proto3" json:"target_cluster_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SyncWorkflowStateRequest) Reset() {
	*x = SyncWorkflowStateRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncWorkflowStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWorkflowStateRequest) ProtoMessage() {}

func (x *SyncWorkflowStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWorkflowStateRequest.ProtoReflect.Descriptor instead.
func (*SyncWorkflowStateRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{80}
}

func (x *SyncWorkflowStateRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *SyncWorkflowStateRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetVersionedTransition() *v12.VersionedTransition {
	if x != nil {
		return x.VersionedTransition
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetVersionHistories() *v11.VersionHistories {
	if x != nil {
		return x.VersionHistories
	}
	return nil
}

func (x *SyncWorkflowStateRequest) GetTargetClusterId() int32 {
	if x != nil {
		return x.TargetClusterId
	}
	return 0
}

type SyncWorkflowStateResponse struct {
	state                       protoimpl.MessageState           `protogen:"open.v1"`
	VersionedTransitionArtifact *v15.VersionedTransitionArtifact `protobuf:"bytes,5,opt,name=versioned_transition_artifact,json=versionedTransitionArtifact,proto3" json:"versioned_transition_artifact,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SyncWorkflowStateResponse) Reset() {
	*x = SyncWorkflowStateResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncWorkflowStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWorkflowStateResponse) ProtoMessage() {}

func (x *SyncWorkflowStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWorkflowStateResponse.ProtoReflect.Descriptor instead.
func (*SyncWorkflowStateResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{81}
}

func (x *SyncWorkflowStateResponse) GetVersionedTransitionArtifact() *v15.VersionedTransitionArtifact {
	if x != nil {
		return x.VersionedTransitionArtifact
	}
	return nil
}

type GenerateLastHistoryReplicationTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Execution     *v1.WorkflowExecution  `protobuf:"bytes,2,opt,name=execution,proto3" json:"execution,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateLastHistoryReplicationTasksRequest) Reset() {
	*x = GenerateLastHistoryReplicationTasksRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLastHistoryReplicationTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLastHistoryReplicationTasksRequest) ProtoMessage() {}

func (x *GenerateLastHistoryReplicationTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLastHistoryReplicationTasksRequest.ProtoReflect.Descriptor instead.
func (*GenerateLastHistoryReplicationTasksRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{82}
}

func (x *GenerateLastHistoryReplicationTasksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GenerateLastHistoryReplicationTasksRequest) GetExecution() *v1.WorkflowExecution {
	if x != nil {
		return x.Execution
	}
	return nil
}

type GenerateLastHistoryReplicationTasksResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	StateTransitionCount int64                  `protobuf:"varint,1,opt,name=state_transition_count,json=stateTransitionCount,proto3" json:"state_transition_count,omitempty"`
	HistoryLength        int64                  `protobuf:"varint,2,opt,name=history_length,json=historyLength,proto3" json:"history_length,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GenerateLastHistoryReplicationTasksResponse) Reset() {
	*x = GenerateLastHistoryReplicationTasksResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateLastHistoryReplicationTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateLastHistoryReplicationTasksResponse) ProtoMessage() {}

func (x *GenerateLastHistoryReplicationTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateLastHistoryReplicationTasksResponse.ProtoReflect.Descriptor instead.
func (*GenerateLastHistoryReplicationTasksResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{83}
}

func (x *GenerateLastHistoryReplicationTasksResponse) GetStateTransitionCount() int64 {
	if x != nil {
		return x.StateTransitionCount
	}
	return 0
}

func (x *GenerateLastHistoryReplicationTasksResponse) GetHistoryLength() int64 {
	if x != nil {
		return x.HistoryLength
	}
	return 0
}

type DescribeTaskQueuePartitionRequest struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	Namespace          string                   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TaskQueuePartition *v113.TaskQueuePartition `protobuf:"bytes,2,opt,name=task_queue_partition,json=taskQueuePartition,proto3" json:"task_queue_partition,omitempty"`
	// Absent means unversioned queue. Ignored for sticky partitions.
	BuildIds      *v114.TaskQueueVersionSelection `protobuf:"bytes,3,opt,name=build_ids,json=buildIds,proto3" json:"build_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescribeTaskQueuePartitionRequest) Reset() {
	*x = DescribeTaskQueuePartitionRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueuePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueuePartitionRequest) ProtoMessage() {}

func (x *DescribeTaskQueuePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueuePartitionRequest.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueuePartitionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{84}
}

func (x *DescribeTaskQueuePartitionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DescribeTaskQueuePartitionRequest) GetTaskQueuePartition() *v113.TaskQueuePartition {
	if x != nil {
		return x.TaskQueuePartition
	}
	return nil
}

func (x *DescribeTaskQueuePartitionRequest) GetBuildIds() *v114.TaskQueueVersionSelection {
	if x != nil {
		return x.BuildIds
	}
	return nil
}

type InternalTaskQueueStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ReadLevel        int64                  `protobuf:"varint,1,opt,name=read_level,json=readLevel,proto3" json:"read_level,omitempty"`
	AckLevel         int64                  `protobuf:"varint,2,opt,name=ack_level,json=ackLevel,proto3" json:"ack_level,omitempty"`
	TaskIdBlock      *v114.TaskIdBlock      `protobuf:"bytes,3,opt,name=task_id_block,json=taskIdBlock,proto3" json:"task_id_block,omitempty"`
	ReadBufferLength int64                  `protobuf:"varint,4,opt,name=read_buffer_length,json=readBufferLength,proto3" json:"read_buffer_length,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InternalTaskQueueStatus) Reset() {
	*x = InternalTaskQueueStatus{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalTaskQueueStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalTaskQueueStatus) ProtoMessage() {}

func (x *InternalTaskQueueStatus) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalTaskQueueStatus.ProtoReflect.Descriptor instead.
func (*InternalTaskQueueStatus) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{85}
}

func (x *InternalTaskQueueStatus) GetReadLevel() int64 {
	if x != nil {
		return x.ReadLevel
	}
	return 0
}

func (x *InternalTaskQueueStatus) GetAckLevel() int64 {
	if x != nil {
		return x.AckLevel
	}
	return 0
}

func (x *InternalTaskQueueStatus) GetTaskIdBlock() *v114.TaskIdBlock {
	if x != nil {
		return x.TaskIdBlock
	}
	return nil
}

func (x *InternalTaskQueueStatus) GetReadBufferLength() int64 {
	if x != nil {
		return x.ReadBufferLength
	}
	return 0
}

type DescribeTaskQueuePartitionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// contains k-v pairs of the type: buildID -> TaskQueueVersionInfoInternal
	VersionsInfoInternal map[string]*v113.TaskQueueVersionInfoInternal `protobuf:"bytes,1,rep,name=versions_info_internal,json=versionsInfoInternal,proto3" json:"versions_info_internal,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DescribeTaskQueuePartitionResponse) Reset() {
	*x = DescribeTaskQueuePartitionResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescribeTaskQueuePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeTaskQueuePartitionResponse) ProtoMessage() {}

func (x *DescribeTaskQueuePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeTaskQueuePartitionResponse.ProtoReflect.Descriptor instead.
func (*DescribeTaskQueuePartitionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{86}
}

func (x *DescribeTaskQueuePartitionResponse) GetVersionsInfoInternal() map[string]*v113.TaskQueueVersionInfoInternal {
	if x != nil {
		return x.VersionsInfoInternal
	}
	return nil
}

type ForceUnloadTaskQueuePartitionRequest struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	Namespace          string                   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	TaskQueuePartition *v113.TaskQueuePartition `protobuf:"bytes,2,opt,name=task_queue_partition,json=taskQueuePartition,proto3" json:"task_queue_partition,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueuePartitionRequest) Reset() {
	*x = ForceUnloadTaskQueuePartitionRequest{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueuePartitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueuePartitionRequest) ProtoMessage() {}

func (x *ForceUnloadTaskQueuePartitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueuePartitionRequest.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueuePartitionRequest) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{87}
}

func (x *ForceUnloadTaskQueuePartitionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ForceUnloadTaskQueuePartitionRequest) GetTaskQueuePartition() *v113.TaskQueuePartition {
	if x != nil {
		return x.TaskQueuePartition
	}
	return nil
}

type ForceUnloadTaskQueuePartitionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WasLoaded     bool                   `protobuf:"varint,1,opt,name=was_loaded,json=wasLoaded,proto3" json:"was_loaded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForceUnloadTaskQueuePartitionResponse) Reset() {
	*x = ForceUnloadTaskQueuePartitionResponse{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForceUnloadTaskQueuePartitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForceUnloadTaskQueuePartitionResponse) ProtoMessage() {}

func (x *ForceUnloadTaskQueuePartitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForceUnloadTaskQueuePartitionResponse.ProtoReflect.Descriptor instead.
func (*ForceUnloadTaskQueuePartitionResponse) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{88}
}

func (x *ForceUnloadTaskQueuePartitionResponse) GetWasLoaded() bool {
	if x != nil {
		return x.WasLoaded
	}
	return false
}

type AddTasksRequest_Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int32                  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Blob          *v1.DataBlob           `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksRequest_Task) Reset() {
	*x = AddTasksRequest_Task{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksRequest_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksRequest_Task) ProtoMessage() {}

func (x *AddTasksRequest_Task) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksRequest_Task.ProtoReflect.Descriptor instead.
func (*AddTasksRequest_Task) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{74, 0}
}

func (x *AddTasksRequest_Task) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *AddTasksRequest_Task) GetBlob() *v1.DataBlob {
	if x != nil {
		return x.Blob
	}
	return nil
}

type ListQueuesResponse_QueueInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueueName     string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	MessageCount  int64                  `protobuf:"varint,2,opt,name=message_count,json=messageCount,proto3" json:"message_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListQueuesResponse_QueueInfo) Reset() {
	*x = ListQueuesResponse_QueueInfo{}
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListQueuesResponse_QueueInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQueuesResponse_QueueInfo) ProtoMessage() {}

func (x *ListQueuesResponse_QueueInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQueuesResponse_QueueInfo.ProtoReflect.Descriptor instead.
func (*ListQueuesResponse_QueueInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP(), []int{77, 0}
}

func (x *ListQueuesResponse_QueueInfo) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ListQueuesResponse_QueueInfo) GetMessageCount() int64 {
	if x != nil {
		return x.MessageCount
	}
	return 0
}

var File_temporal_server_api_adminservice_v1_request_response_proto protoreflect.FileDescriptor

const file_temporal_server_api_adminservice_v1_request_response_proto_rawDesc = "" +
	"\n" +
	":temporal/server/api/adminservice/v1/request_response.proto\x12#temporal.server.api.adminservice.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\"temporal/api/enums/v1/common.proto\x1a&temporal/api/enums/v1/task_queue.proto\x1a$temporal/api/common/v1/message.proto\x1a%temporal/api/version/v1/message.proto\x1a&temporal/api/workflow/v1/message.proto\x1a'temporal/api/namespace/v1/message.proto\x1a)temporal/api/replication/v1/message.proto\x1a'temporal/api/taskqueue/v1/message.proto\x1a,temporal/server/api/cluster/v1/message.proto\x1a'temporal/server/api/common/v1/dlq.proto\x1a)temporal/server/api/enums/v1/common.proto\x1a*temporal/server/api/enums/v1/cluster.proto\x1a'temporal/server/api/enums/v1/task.proto\x1a&temporal/server/api/enums/v1/dlq.proto\x1a,temporal/server/api/history/v1/message.proto\x1a.temporal/server/api/namespace/v1/message.proto\x1a0temporal/server/api/replication/v1/message.proto\x1a9temporal/server/api/persistence/v1/cluster_metadata.proto\x1a3temporal/server/api/persistence/v1/executions.proto\x1a?temporal/server/api/persistence/v1/workflow_mutable_state.proto\x1a.temporal/server/api/persistence/v1/tasks.proto\x1a,temporal/server/api/persistence/v1/hsm.proto\x1a.temporal/server/api/taskqueue/v1/message.proto\"\x83\x01\n" +
	"\x1aRebuildMutableStateRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"\x1d\n" +
	"\x1bRebuildMutableStateResponse\"\xc1\x02\n" +
	"\x1eImportWorkflowExecutionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12I\n" +
	"\x0fhistory_batches\x18\x03 \x03(\v2 .temporal.api.common.v1.DataBlobR\x0ehistoryBatches\x12W\n" +
	"\x0fversion_history\x18\x04 \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x12\x14\n" +
	"\x05token\x18\x05 \x01(\fR\x05token\"7\n" +
	"\x1fImportWorkflowExecutionResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\fR\x05token\"\x84\x01\n" +
	"\x1bDescribeMutableStateRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"\xb6\x02\n" +
	"\x1cDescribeMutableStateResponse\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12!\n" +
	"\fhistory_addr\x18\x02 \x01(\tR\vhistoryAddr\x12h\n" +
	"\x13cache_mutable_state\x18\x03 \x01(\v28.temporal.server.api.persistence.v1.WorkflowMutableStateR\x11cacheMutableState\x12n\n" +
	"\x16database_mutable_state\x18\x04 \x01(\v28.temporal.server.api.persistence.v1.WorkflowMutableStateR\x14databaseMutableState\"\xd2\x01\n" +
	"\x1aDescribeHistoryHostRequest\x12!\n" +
	"\fhost_address\x18\x01 \x01(\tR\vhostAddress\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12X\n" +
	"\x12workflow_execution\x18\x04 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\"\xde\x01\n" +
	"\x1bDescribeHistoryHostResponse\x12#\n" +
	"\rshards_number\x18\x01 \x01(\x05R\fshardsNumber\x12\x1b\n" +
	"\tshard_ids\x18\x02 \x03(\x05R\bshardIds\x12]\n" +
	"\x0fnamespace_cache\x18\x03 \x01(\v24.temporal.server.api.namespace.v1.NamespaceCacheInfoR\x0enamespaceCache\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddressJ\x04\b\x04\x10\x05\".\n" +
	"\x11CloseShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\"\x14\n" +
	"\x12CloseShardResponse\",\n" +
	"\x0fGetShardRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\"`\n" +
	"\x10GetShardResponse\x12L\n" +
	"\n" +
	"shard_info\x18\x01 \x01(\v2-.temporal.server.api.persistence.v1.ShardInfoR\tshardInfo\"\xe1\x01\n" +
	"\x17ListHistoryTasksRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\x05R\bcategory\x12H\n" +
	"\n" +
	"task_range\x18\x03 \x01(\v2).temporal.server.api.history.v1.TaskRangeR\ttaskRange\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x04 \x01(\x05R\tbatchSize\x12&\n" +
	"\x0fnext_page_token\x18\x05 \x01(\fR\rnextPageToken\"\x83\x01\n" +
	"\x18ListHistoryTasksResponse\x12?\n" +
	"\x05tasks\x18\x01 \x03(\v2).temporal.server.api.adminservice.v1.TaskR\x05tasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\x92\x02\n" +
	"\x04Task\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12\x17\n" +
	"\atask_id\x18\x04 \x01(\x03R\x06taskId\x12C\n" +
	"\ttask_type\x18\x05 \x01(\x0e2&.temporal.server.api.enums.v1.TaskTypeR\btaskType\x127\n" +
	"\tfire_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bfireTime\x12\x18\n" +
	"\aversion\x18\a \x01(\x03R\aversion\"\xa8\x01\n" +
	"\x11RemoveTaskRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\x05R\bcategory\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\x03R\x06taskId\x12C\n" +
	"\x0fvisibility_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0evisibilityTime\"\x14\n" +
	"\x12RemoveTaskResponse\"\x93\x03\n" +
	"'GetWorkflowExecutionRawHistoryV2Request\x12!\n" +
	"\fnamespace_id\x18\t \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x12.\n" +
	"\x13start_event_version\x18\x04 \x01(\x03R\x11startEventVersion\x12 \n" +
	"\fend_event_id\x18\x05 \x01(\x03R\n" +
	"endEventId\x12*\n" +
	"\x11end_event_version\x18\x06 \x01(\x03R\x0fendEventVersion\x12*\n" +
	"\x11maximum_page_size\x18\a \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\b \x01(\fR\rnextPageTokenJ\x04\b\x01\x10\x02\"\xa0\x02\n" +
	"(GetWorkflowExecutionRawHistoryV2Response\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\x12I\n" +
	"\x0fhistory_batches\x18\x02 \x03(\v2 .temporal.api.common.v1.DataBlobR\x0ehistoryBatches\x12W\n" +
	"\x0fversion_history\x18\x03 \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x12(\n" +
	"\x10history_node_ids\x18\x04 \x03(\x03R\x0ehistoryNodeIds\"\x8b\x03\n" +
	"%GetWorkflowExecutionRawHistoryRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12$\n" +
	"\x0estart_event_id\x18\x03 \x01(\x03R\fstartEventId\x12.\n" +
	"\x13start_event_version\x18\x04 \x01(\x03R\x11startEventVersion\x12 \n" +
	"\fend_event_id\x18\x05 \x01(\x03R\n" +
	"endEventId\x12*\n" +
	"\x11end_event_version\x18\x06 \x01(\x03R\x0fendEventVersion\x12*\n" +
	"\x11maximum_page_size\x18\a \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\b \x01(\fR\rnextPageToken\"\x9e\x02\n" +
	"&GetWorkflowExecutionRawHistoryResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\x12I\n" +
	"\x0fhistory_batches\x18\x02 \x03(\v2 .temporal.api.common.v1.DataBlobR\x0ehistoryBatches\x12W\n" +
	"\x0fversion_history\x18\x03 \x01(\v2..temporal.server.api.history.v1.VersionHistoryR\x0eversionHistory\x12(\n" +
	"\x10history_node_ids\x18\x04 \x03(\x03R\x0ehistoryNodeIds\"\x90\x01\n" +
	"\x1dGetReplicationMessagesRequest\x12L\n" +
	"\x06tokens\x18\x01 \x03(\v24.temporal.server.api.replication.v1.ReplicationTokenR\x06tokens\x12!\n" +
	"\fcluster_name\x18\x02 \x01(\tR\vclusterName\"\x9a\x02\n" +
	"\x1eGetReplicationMessagesResponse\x12}\n" +
	"\x0eshard_messages\x18\x01 \x03(\v2V.temporal.server.api.adminservice.v1.GetReplicationMessagesResponse.ShardMessagesEntryR\rshardMessages\x1ay\n" +
	"\x12ShardMessagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12M\n" +
	"\x05value\x18\x02 \x01(\v27.temporal.server.api.replication.v1.ReplicationMessagesR\x05value:\x028\x01\"\xc1\x01\n" +
	"&GetNamespaceReplicationMessagesRequest\x129\n" +
	"\x19last_retrieved_message_id\x18\x01 \x01(\x03R\x16lastRetrievedMessageId\x129\n" +
	"\x19last_processed_message_id\x18\x02 \x01(\x03R\x16lastProcessedMessageId\x12!\n" +
	"\fcluster_name\x18\x03 \x01(\tR\vclusterName\"~\n" +
	"'GetNamespaceReplicationMessagesResponse\x12S\n" +
	"\bmessages\x18\x01 \x01(\v27.temporal.server.api.replication.v1.ReplicationMessagesR\bmessages\"z\n" +
	" GetDLQReplicationMessagesRequest\x12V\n" +
	"\n" +
	"task_infos\x18\x01 \x03(\v27.temporal.server.api.replication.v1.ReplicationTaskInfoR\ttaskInfos\"\x85\x01\n" +
	"!GetDLQReplicationMessagesResponse\x12`\n" +
	"\x11replication_tasks\x18\x01 \x03(\v23.temporal.server.api.replication.v1.ReplicationTaskR\x10replicationTasks\"\xd3\x01\n" +
	"\x14ReapplyEventsRequest\x12!\n" +
	"\fnamespace_id\x18\x04 \x01(\tR\vnamespaceId\x12X\n" +
	"\x12workflow_execution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\x11workflowExecution\x128\n" +
	"\x06events\x18\x03 \x01(\v2 .temporal.api.common.v1.DataBlobR\x06eventsJ\x04\b\x01\x10\x02\"\x17\n" +
	"\x15ReapplyEventsResponse\"\xfa\x02\n" +
	"\x1aAddSearchAttributesRequest\x12\x82\x01\n" +
	"\x11search_attributes\x18\x01 \x03(\v2U.temporal.server.api.adminservice.v1.AddSearchAttributesRequest.SearchAttributesEntryR\x10searchAttributes\x12\x1d\n" +
	"\n" +
	"index_name\x18\x02 \x01(\tR\tindexName\x12,\n" +
	"\x12skip_schema_update\x18\x03 \x01(\bR\x10skipSchemaUpdate\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x1al\n" +
	"\x15SearchAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\x0e2'.temporal.api.enums.v1.IndexedValueTypeR\x05value:\x028\x01\"\x1d\n" +
	"\x1bAddSearchAttributesResponse\"\x89\x01\n" +
	"\x1dRemoveSearchAttributesRequest\x12+\n" +
	"\x11search_attributes\x18\x01 \x03(\tR\x10searchAttributes\x12\x1d\n" +
	"\n" +
	"index_name\x18\x02 \x01(\tR\tindexName\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\" \n" +
	"\x1eRemoveSearchAttributesResponse\"Y\n" +
	"\x1aGetSearchAttributesRequest\x12\x1d\n" +
	"\n" +
	"index_name\x18\x01 \x01(\tR\tindexName\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\x9a\x06\n" +
	"\x1bGetSearchAttributesResponse\x12\x83\x01\n" +
	"\x11custom_attributes\x18\x01 \x03(\v2V.temporal.server.api.adminservice.v1.GetSearchAttributesResponse.CustomAttributesEntryR\x10customAttributes\x12\x83\x01\n" +
	"\x11system_attributes\x18\x02 \x03(\v2V.temporal.server.api.adminservice.v1.GetSearchAttributesResponse.SystemAttributesEntryR\x10systemAttributes\x12g\n" +
	"\amapping\x18\x03 \x03(\v2M.temporal.server.api.adminservice.v1.GetSearchAttributesResponse.MappingEntryR\amapping\x12n\n" +
	"\x1badd_workflow_execution_info\x18\x04 \x01(\v2/.temporal.api.workflow.v1.WorkflowExecutionInfoR\x18addWorkflowExecutionInfo\x1al\n" +
	"\x15CustomAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\x0e2'.temporal.api.enums.v1.IndexedValueTypeR\x05value:\x028\x01\x1al\n" +
	"\x15SystemAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\x0e2'.temporal.api.enums.v1.IndexedValueTypeR\x05value:\x028\x01\x1a:\n" +
	"\fMappingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\";\n" +
	"\x16DescribeClusterRequest\x12!\n" +
	"\fcluster_name\x18\x01 \x01(\tR\vclusterName\"\xe1\a\n" +
	"\x17DescribeClusterResponse\x12\x7f\n" +
	"\x11supported_clients\x18\x01 \x03(\v2R.temporal.server.api.adminservice.v1.DescribeClusterResponse.SupportedClientsEntryR\x10supportedClients\x12%\n" +
	"\x0eserver_version\x18\x02 \x01(\tR\rserverVersion\x12W\n" +
	"\x0fmembership_info\x18\x03 \x01(\v2..temporal.server.api.cluster.v1.MembershipInfoR\x0emembershipInfo\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x04 \x01(\tR\tclusterId\x12!\n" +
	"\fcluster_name\x18\x05 \x01(\tR\vclusterName\x12.\n" +
	"\x13history_shard_count\x18\x06 \x01(\x05R\x11historyShardCount\x12+\n" +
	"\x11persistence_store\x18\a \x01(\tR\x10persistenceStore\x12)\n" +
	"\x10visibility_store\x18\b \x01(\tR\x0fvisibilityStore\x12G\n" +
	"\fversion_info\x18\t \x01(\v2$.temporal.api.version.v1.VersionInfoR\vversionInfo\x12<\n" +
	"\x1afailover_version_increment\x18\n" +
	" \x01(\x03R\x18failoverVersionIncrement\x128\n" +
	"\x18initial_failover_version\x18\v \x01(\x03R\x16initialFailoverVersion\x12=\n" +
	"\x1bis_global_namespace_enabled\x18\f \x01(\bR\x18isGlobalNamespaceEnabled\x12Z\n" +
	"\x04tags\x18\r \x03(\v2F.temporal.server.api.adminservice.v1.DescribeClusterResponse.TagsEntryR\x04tags\x12!\n" +
	"\fhttp_address\x18\x0e \x01(\tR\vhttpAddress\x1aC\n" +
	"\x15SupportedClientsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x13ListClustersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\x8f\x01\n" +
	"\x14ListClustersResponse\x12O\n" +
	"\bclusters\x18\x01 \x03(\v23.temporal.server.api.persistence.v1.ClusterMetadataR\bclusters\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\xcd\x01\n" +
	"\x1fAddOrUpdateRemoteClusterRequest\x12)\n" +
	"\x10frontend_address\x18\x01 \x01(\tR\x0ffrontendAddress\x12G\n" +
	" enable_remote_cluster_connection\x18\x02 \x01(\bR\x1denableRemoteClusterConnection\x126\n" +
	"\x15frontend_http_address\x18\x03 \x01(\tB\x02\x18\x01R\x13frontendHttpAddress\"\"\n" +
	" AddOrUpdateRemoteClusterResponse\"?\n" +
	"\x1aRemoveRemoteClusterRequest\x12!\n" +
	"\fcluster_name\x18\x01 \x01(\tR\vclusterName\"\x1d\n" +
	"\x1bRemoveRemoteClusterResponse\"\x87\x03\n" +
	"\x19ListClusterMembersRequest\x12M\n" +
	"\x15last_heartbeat_within\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x13lastHeartbeatWithin\x12\x1f\n" +
	"\vrpc_address\x18\x02 \x01(\tR\n" +
	"rpcAddress\x12\x17\n" +
	"\ahost_id\x18\x03 \x01(\tR\x06hostId\x12C\n" +
	"\x04role\x18\x04 \x01(\x0e2/.temporal.server.api.enums.v1.ClusterMemberRoleR\x04role\x12W\n" +
	"\x1asession_started_after_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x17sessionStartedAfterTime\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\a \x01(\fR\rnextPageToken\"\x9a\x01\n" +
	"\x1aListClusterMembersResponse\x12T\n" +
	"\x0eactive_members\x18\x01 \x03(\v2-.temporal.server.api.cluster.v1.ClusterMemberR\ractiveMembers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\xad\x02\n" +
	"\x15GetDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId\x12*\n" +
	"\x11maximum_page_size\x18\x05 \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\x06 \x01(\fR\rnextPageToken\"\xd8\x02\n" +
	"\x16GetDLQMessagesResponse\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12`\n" +
	"\x11replication_tasks\x18\x02 \x03(\v23.temporal.server.api.replication.v1.ReplicationTaskR\x10replicationTasks\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken\x12m\n" +
	"\x16replication_tasks_info\x18\x04 \x03(\v27.temporal.server.api.replication.v1.ReplicationTaskInfoR\x14replicationTasksInfo\"\xdb\x01\n" +
	"\x17PurgeDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId\"\x1a\n" +
	"\x18PurgeDLQMessagesResponse\"\xaf\x02\n" +
	"\x17MergeDLQMessagesRequest\x12E\n" +
	"\x04type\x18\x01 \x01(\x0e21.temporal.server.api.enums.v1.DeadLetterQueueTypeR\x04type\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\x05R\ashardId\x12%\n" +
	"\x0esource_cluster\x18\x03 \x01(\tR\rsourceCluster\x127\n" +
	"\x18inclusive_end_message_id\x18\x04 \x01(\x03R\x15inclusiveEndMessageId\x12*\n" +
	"\x11maximum_page_size\x18\x05 \x01(\x05R\x0fmaximumPageSize\x12&\n" +
	"\x0fnext_page_token\x18\x06 \x01(\fR\rnextPageToken\"B\n" +
	"\x18MergeDLQMessagesResponse\x12&\n" +
	"\x0fnext_page_token\x18\x01 \x01(\fR\rnextPageToken\"\x8f\x01\n" +
	"\x1bRefreshWorkflowTasksRequest\x12!\n" +
	"\fnamespace_id\x18\x03 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecutionJ\x04\b\x01\x10\x02\"\x1e\n" +
	"\x1cRefreshWorkflowTasksResponse\"\xaf\x02\n" +
	"\x1dResendReplicationTasksRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12\x1f\n" +
	"\vworkflow_id\x18\x02 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12%\n" +
	"\x0eremote_cluster\x18\x04 \x01(\tR\rremoteCluster\x12$\n" +
	"\x0estart_event_id\x18\x05 \x01(\x03R\fstartEventId\x12#\n" +
	"\rstart_version\x18\x06 \x01(\x03R\fstartVersion\x12 \n" +
	"\fend_event_id\x18\a \x01(\x03R\n" +
	"endEventId\x12\x1f\n" +
	"\vend_version\x18\b \x01(\x03R\n" +
	"endVersion\" \n" +
	"\x1eResendReplicationTasksResponse\"\xac\x02\n" +
	"\x18GetTaskQueueTasksRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x1d\n" +
	"\n" +
	"task_queue\x18\x02 \x01(\tR\ttaskQueue\x12L\n" +
	"\x0ftask_queue_type\x18\x03 \x01(\x0e2$.temporal.api.enums.v1.TaskQueueTypeR\rtaskQueueType\x12\x1e\n" +
	"\vmin_task_id\x18\x04 \x01(\x03R\tminTaskId\x12\x1e\n" +
	"\vmax_task_id\x18\x05 \x01(\x03R\tmaxTaskId\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x06 \x01(\x05R\tbatchSize\x12&\n" +
	"\x0fnext_page_token\x18\a \x01(\fR\rnextPageToken\"\x90\x01\n" +
	"\x19GetTaskQueueTasksResponse\x12K\n" +
	"\x05tasks\x18\x01 \x03(\v25.temporal.server.api.persistence.v1.AllocatedTaskInfoR\x05tasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\x87\x01\n" +
	"\x1eDeleteWorkflowExecutionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"=\n" +
	"\x1fDeleteWorkflowExecutionResponse\x12\x1a\n" +
	"\bwarnings\x18\x01 \x03(\tR\bwarnings\"\xaa\x01\n" +
	"(StreamWorkflowReplicationMessagesRequest\x12p\n" +
	"\x16sync_replication_state\x18\x01 \x01(\v28.temporal.server.api.replication.v1.SyncReplicationStateH\x00R\x14syncReplicationStateB\f\n" +
	"\n" +
	"attributes\"\x98\x01\n" +
	")StreamWorkflowReplicationMessagesResponse\x12]\n" +
	"\bmessages\x18\x01 \x01(\v2?.temporal.server.api.replication.v1.WorkflowReplicationMessagesH\x00R\bmessagesB\f\n" +
	"\n" +
	"attributes\"U\n" +
	"\x13GetNamespaceRequest\x12\x1e\n" +
	"\tnamespace\x18\x01 \x01(\tH\x00R\tnamespace\x12\x10\n" +
	"\x02id\x18\x02 \x01(\tH\x00R\x02idB\f\n" +
	"\n" +
	"attributes\"\xda\x03\n" +
	"\x14GetNamespaceResponse\x12<\n" +
	"\x04info\x18\x03 \x01(\v2(.temporal.api.namespace.v1.NamespaceInfoR\x04info\x12B\n" +
	"\x06config\x18\x04 \x01(\v2*.temporal.api.namespace.v1.NamespaceConfigR\x06config\x12f\n" +
	"\x12replication_config\x18\x05 \x01(\v27.temporal.api.replication.v1.NamespaceReplicationConfigR\x11replicationConfig\x12%\n" +
	"\x0econfig_version\x18\x06 \x01(\x03R\rconfigVersion\x12)\n" +
	"\x10failover_version\x18\a \x01(\x03R\x0ffailoverVersion\x12V\n" +
	"\x10failover_history\x18\b \x03(\v2+.temporal.api.replication.v1.FailoverStatusR\x0ffailoverHistory\x12.\n" +
	"\x13is_global_namespace\x18\t \x01(\bR\x11isGlobalNamespace\"\xa0\x01\n" +
	"\x12GetDLQTasksRequest\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken\"\x89\x01\n" +
	"\x13GetDLQTasksResponse\x12J\n" +
	"\tdlq_tasks\x18\x01 \x03(\v2-.temporal.server.api.common.v1.HistoryDLQTaskR\bdlqTasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\"\xd3\x01\n" +
	"\x14PurgeDLQTasksRequest\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12t\n" +
	"\x1binclusive_max_task_metadata\x18\x02 \x01(\v25.temporal.server.api.common.v1.HistoryDLQTaskMetadataR\x18inclusiveMaxTaskMetadata\"4\n" +
	"\x15PurgeDLQTasksResponse\x12\x1b\n" +
	"\tjob_token\x18\x01 \x01(\fR\bjobToken\"E\n" +
	"\vDLQJobToken\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\"\xf2\x01\n" +
	"\x14MergeDLQTasksRequest\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12t\n" +
	"\x1binclusive_max_task_metadata\x18\x02 \x01(\v25.temporal.server.api.common.v1.HistoryDLQTaskMetadataR\x18inclusiveMaxTaskMetadata\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x03 \x01(\x05R\tbatchSize\"4\n" +
	"\x15MergeDLQTasksResponse\x12\x1b\n" +
	"\tjob_token\x18\x01 \x01(\fR\bjobToken\"4\n" +
	"\x15DescribeDLQJobRequest\x12\x1b\n" +
	"\tjob_token\x18\x01 \x01(\fR\bjobToken\"\x92\x04\n" +
	"\x16DescribeDLQJobResponse\x12E\n" +
	"\adlq_key\x18\x01 \x01(\v2,.temporal.server.api.common.v1.HistoryDLQKeyR\x06dlqKey\x12U\n" +
	"\x0eoperation_type\x18\x02 \x01(\x0e2..temporal.server.api.enums.v1.DLQOperationTypeR\roperationType\x12X\n" +
	"\x0foperation_state\x18\x03 \x01(\x0e2/.temporal.server.api.enums.v1.DLQOperationStateR\x0eoperationState\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12$\n" +
	"\x0emax_message_id\x18\x06 \x01(\x03R\fmaxMessageId\x129\n" +
	"\x19last_processed_message_id\x18\a \x01(\x03R\x16lastProcessedMessageId\x12-\n" +
	"\x12messages_processed\x18\b \x01(\x03R\x11messagesProcessed\"J\n" +
	"\x13CancelDLQJobRequest\x12\x1b\n" +
	"\tjob_token\x18\x01 \x01(\fR\bjobToken\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"2\n" +
	"\x14CancelDLQJobResponse\x12\x1a\n" +
	"\bcanceled\x18\x01 \x01(\bR\bcanceled\"\xdc\x01\n" +
	"\x0fAddTasksRequest\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\x05R\ashardId\x12O\n" +
	"\x05tasks\x18\x02 \x03(\v29.temporal.server.api.adminservice.v1.AddTasksRequest.TaskR\x05tasks\x1a]\n" +
	"\x04Task\x12\x1f\n" +
	"\vcategory_id\x18\x01 \x01(\x05R\n" +
	"categoryId\x124\n" +
	"\x04blob\x18\x02 \x01(\v2 .temporal.api.common.v1.DataBlobR\x04blob\"\x12\n" +
	"\x10AddTasksResponse\"w\n" +
	"\x11ListQueuesRequest\x12\x1d\n" +
	"\n" +
	"queue_type\x18\x01 \x01(\x05R\tqueueType\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12&\n" +
	"\x0fnext_page_token\x18\x03 \x01(\fR\rnextPageToken\"\xe8\x01\n" +
	"\x12ListQueuesResponse\x12Y\n" +
	"\x06queues\x18\x01 \x03(\v2A.temporal.server.api.adminservice.v1.ListQueuesResponse.QueueInfoR\x06queues\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\fR\rnextPageToken\x1aO\n" +
	"\tQueueInfo\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12#\n" +
	"\rmessage_count\x18\x02 \x01(\x03R\fmessageCount\"\x18\n" +
	"\x16DeepHealthCheckRequest\"Z\n" +
	"\x17DeepHealthCheckResponse\x12?\n" +
	"\x05state\x18\x01 \x01(\x0e2).temporal.server.api.enums.v1.HealthStateR\x05state\"\xfd\x02\n" +
	"\x18SyncWorkflowStateRequest\x12!\n" +
	"\fnamespace_id\x18\x01 \x01(\tR\vnamespaceId\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\x12j\n" +
	"\x14versioned_transition\x18\x03 \x01(\v27.temporal.server.api.persistence.v1.VersionedTransitionR\x13versionedTransition\x12]\n" +
	"\x11version_histories\x18\x04 \x01(\v20.temporal.server.api.history.v1.VersionHistoriesR\x10versionHistories\x12*\n" +
	"\x11target_cluster_id\x18\x05 \x01(\x05R\x0ftargetClusterId\"\xb9\x01\n" +
	"\x19SyncWorkflowStateResponse\x12\x83\x01\n" +
	"\x1dversioned_transition_artifact\x18\x05 \x01(\v2?.temporal.server.api.replication.v1.VersionedTransitionArtifactR\x1bversionedTransitionArtifactJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03J\x04\b\x03\x10\x04J\x04\b\x04\x10\x05\"\x93\x01\n" +
	"*GenerateLastHistoryReplicationTasksRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12G\n" +
	"\texecution\x18\x02 \x01(\v2).temporal.api.common.v1.WorkflowExecutionR\texecution\"\x8a\x01\n" +
	"+GenerateLastHistoryReplicationTasksResponse\x124\n" +
	"\x16state_transition_count\x18\x01 \x01(\x03R\x14stateTransitionCount\x12%\n" +
	"\x0ehistory_length\x18\x02 \x01(\x03R\rhistoryLength\"\xfc\x01\n" +
	"!DescribeTaskQueuePartitionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12f\n" +
	"\x14task_queue_partition\x18\x02 \x01(\v24.temporal.server.api.taskqueue.v1.TaskQueuePartitionR\x12taskQueuePartition\x12Q\n" +
	"\tbuild_ids\x18\x03 \x01(\v24.temporal.api.taskqueue.v1.TaskQueueVersionSelectionR\bbuildIds\"\xcf\x01\n" +
	"\x17InternalTaskQueueStatus\x12\x1d\n" +
	"\n" +
	"read_level\x18\x01 \x01(\x03R\treadLevel\x12\x1b\n" +
	"\tack_level\x18\x02 \x01(\x03R\backLevel\x12J\n" +
	"\rtask_id_block\x18\x03 \x01(\v2&.temporal.api.taskqueue.v1.TaskIdBlockR\vtaskIdBlock\x12,\n" +
	"\x12read_buffer_length\x18\x04 \x01(\x03R\x10readBufferLength\"\xc8\x02\n" +
	"\"DescribeTaskQueuePartitionResponse\x12\x97\x01\n" +
	"\x16versions_info_internal\x18\x01 \x03(\v2a.temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntryR\x14versionsInfoInternal\x1a\x87\x01\n" +
	"\x19VersionsInfoInternalEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12T\n" +
	"\x05value\x18\x02 \x01(\v2>.temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternalR\x05value:\x028\x01\"\xac\x01\n" +
	"$ForceUnloadTaskQueuePartitionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12f\n" +
	"\x14task_queue_partition\x18\x02 \x01(\v24.temporal.server.api.taskqueue.v1.TaskQueuePartitionR\x12taskQueuePartition\"F\n" +
	"%ForceUnloadTaskQueuePartitionResponse\x12\x1d\n" +
	"\n" +
	"was_loaded\x18\x01 \x01(\bR\twasLoadedB8Z6go.temporal.io/server/api/adminservice/v1;adminserviceb\x06proto3"

var (
	file_temporal_server_api_adminservice_v1_request_response_proto_rawDescOnce sync.Once
	file_temporal_server_api_adminservice_v1_request_response_proto_rawDescData []byte
)

func file_temporal_server_api_adminservice_v1_request_response_proto_rawDescGZIP() []byte {
	file_temporal_server_api_adminservice_v1_request_response_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_adminservice_v1_request_response_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_adminservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_adminservice_v1_request_response_proto_rawDesc)))
	})
	return file_temporal_server_api_adminservice_v1_request_response_proto_rawDescData
}

var file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes = make([]protoimpl.MessageInfo, 99)
var file_temporal_server_api_adminservice_v1_request_response_proto_goTypes = []any{
	(*RebuildMutableStateRequest)(nil),                  // 0: temporal.server.api.adminservice.v1.RebuildMutableStateRequest
	(*RebuildMutableStateResponse)(nil),                 // 1: temporal.server.api.adminservice.v1.RebuildMutableStateResponse
	(*ImportWorkflowExecutionRequest)(nil),              // 2: temporal.server.api.adminservice.v1.ImportWorkflowExecutionRequest
	(*ImportWorkflowExecutionResponse)(nil),             // 3: temporal.server.api.adminservice.v1.ImportWorkflowExecutionResponse
	(*DescribeMutableStateRequest)(nil),                 // 4: temporal.server.api.adminservice.v1.DescribeMutableStateRequest
	(*DescribeMutableStateResponse)(nil),                // 5: temporal.server.api.adminservice.v1.DescribeMutableStateResponse
	(*DescribeHistoryHostRequest)(nil),                  // 6: temporal.server.api.adminservice.v1.DescribeHistoryHostRequest
	(*DescribeHistoryHostResponse)(nil),                 // 7: temporal.server.api.adminservice.v1.DescribeHistoryHostResponse
	(*CloseShardRequest)(nil),                           // 8: temporal.server.api.adminservice.v1.CloseShardRequest
	(*CloseShardResponse)(nil),                          // 9: temporal.server.api.adminservice.v1.CloseShardResponse
	(*GetShardRequest)(nil),                             // 10: temporal.server.api.adminservice.v1.GetShardRequest
	(*GetShardResponse)(nil),                            // 11: temporal.server.api.adminservice.v1.GetShardResponse
	(*ListHistoryTasksRequest)(nil),                     // 12: temporal.server.api.adminservice.v1.ListHistoryTasksRequest
	(*ListHistoryTasksResponse)(nil),                    // 13: temporal.server.api.adminservice.v1.ListHistoryTasksResponse
	(*Task)(nil),                                        // 14: temporal.server.api.adminservice.v1.Task
	(*RemoveTaskRequest)(nil),                           // 15: temporal.server.api.adminservice.v1.RemoveTaskRequest
	(*RemoveTaskResponse)(nil),                          // 16: temporal.server.api.adminservice.v1.RemoveTaskResponse
	(*GetWorkflowExecutionRawHistoryV2Request)(nil),     // 17: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Request
	(*GetWorkflowExecutionRawHistoryV2Response)(nil),    // 18: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Response
	(*GetWorkflowExecutionRawHistoryRequest)(nil),       // 19: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryRequest
	(*GetWorkflowExecutionRawHistoryResponse)(nil),      // 20: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponse
	(*GetReplicationMessagesRequest)(nil),               // 21: temporal.server.api.adminservice.v1.GetReplicationMessagesRequest
	(*GetReplicationMessagesResponse)(nil),              // 22: temporal.server.api.adminservice.v1.GetReplicationMessagesResponse
	(*GetNamespaceReplicationMessagesRequest)(nil),      // 23: temporal.server.api.adminservice.v1.GetNamespaceReplicationMessagesRequest
	(*GetNamespaceReplicationMessagesResponse)(nil),     // 24: temporal.server.api.adminservice.v1.GetNamespaceReplicationMessagesResponse
	(*GetDLQReplicationMessagesRequest)(nil),            // 25: temporal.server.api.adminservice.v1.GetDLQReplicationMessagesRequest
	(*GetDLQReplicationMessagesResponse)(nil),           // 26: temporal.server.api.adminservice.v1.GetDLQReplicationMessagesResponse
	(*ReapplyEventsRequest)(nil),                        // 27: temporal.server.api.adminservice.v1.ReapplyEventsRequest
	(*ReapplyEventsResponse)(nil),                       // 28: temporal.server.api.adminservice.v1.ReapplyEventsResponse
	(*AddSearchAttributesRequest)(nil),                  // 29: temporal.server.api.adminservice.v1.AddSearchAttributesRequest
	(*AddSearchAttributesResponse)(nil),                 // 30: temporal.server.api.adminservice.v1.AddSearchAttributesResponse
	(*RemoveSearchAttributesRequest)(nil),               // 31: temporal.server.api.adminservice.v1.RemoveSearchAttributesRequest
	(*RemoveSearchAttributesResponse)(nil),              // 32: temporal.server.api.adminservice.v1.RemoveSearchAttributesResponse
	(*GetSearchAttributesRequest)(nil),                  // 33: temporal.server.api.adminservice.v1.GetSearchAttributesRequest
	(*GetSearchAttributesResponse)(nil),                 // 34: temporal.server.api.adminservice.v1.GetSearchAttributesResponse
	(*DescribeClusterRequest)(nil),                      // 35: temporal.server.api.adminservice.v1.DescribeClusterRequest
	(*DescribeClusterResponse)(nil),                     // 36: temporal.server.api.adminservice.v1.DescribeClusterResponse
	(*ListClustersRequest)(nil),                         // 37: temporal.server.api.adminservice.v1.ListClustersRequest
	(*ListClustersResponse)(nil),                        // 38: temporal.server.api.adminservice.v1.ListClustersResponse
	(*AddOrUpdateRemoteClusterRequest)(nil),             // 39: temporal.server.api.adminservice.v1.AddOrUpdateRemoteClusterRequest
	(*AddOrUpdateRemoteClusterResponse)(nil),            // 40: temporal.server.api.adminservice.v1.AddOrUpdateRemoteClusterResponse
	(*RemoveRemoteClusterRequest)(nil),                  // 41: temporal.server.api.adminservice.v1.RemoveRemoteClusterRequest
	(*RemoveRemoteClusterResponse)(nil),                 // 42: temporal.server.api.adminservice.v1.RemoveRemoteClusterResponse
	(*ListClusterMembersRequest)(nil),                   // 43: temporal.server.api.adminservice.v1.ListClusterMembersRequest
	(*ListClusterMembersResponse)(nil),                  // 44: temporal.server.api.adminservice.v1.ListClusterMembersResponse
	(*GetDLQMessagesRequest)(nil),                       // 45: temporal.server.api.adminservice.v1.GetDLQMessagesRequest
	(*GetDLQMessagesResponse)(nil),                      // 46: temporal.server.api.adminservice.v1.GetDLQMessagesResponse
	(*PurgeDLQMessagesRequest)(nil),                     // 47: temporal.server.api.adminservice.v1.PurgeDLQMessagesRequest
	(*PurgeDLQMessagesResponse)(nil),                    // 48: temporal.server.api.adminservice.v1.PurgeDLQMessagesResponse
	(*MergeDLQMessagesRequest)(nil),                     // 49: temporal.server.api.adminservice.v1.MergeDLQMessagesRequest
	(*MergeDLQMessagesResponse)(nil),                    // 50: temporal.server.api.adminservice.v1.MergeDLQMessagesResponse
	(*RefreshWorkflowTasksRequest)(nil),                 // 51: temporal.server.api.adminservice.v1.RefreshWorkflowTasksRequest
	(*RefreshWorkflowTasksResponse)(nil),                // 52: temporal.server.api.adminservice.v1.RefreshWorkflowTasksResponse
	(*ResendReplicationTasksRequest)(nil),               // 53: temporal.server.api.adminservice.v1.ResendReplicationTasksRequest
	(*ResendReplicationTasksResponse)(nil),              // 54: temporal.server.api.adminservice.v1.ResendReplicationTasksResponse
	(*GetTaskQueueTasksRequest)(nil),                    // 55: temporal.server.api.adminservice.v1.GetTaskQueueTasksRequest
	(*GetTaskQueueTasksResponse)(nil),                   // 56: temporal.server.api.adminservice.v1.GetTaskQueueTasksResponse
	(*DeleteWorkflowExecutionRequest)(nil),              // 57: temporal.server.api.adminservice.v1.DeleteWorkflowExecutionRequest
	(*DeleteWorkflowExecutionResponse)(nil),             // 58: temporal.server.api.adminservice.v1.DeleteWorkflowExecutionResponse
	(*StreamWorkflowReplicationMessagesRequest)(nil),    // 59: temporal.server.api.adminservice.v1.StreamWorkflowReplicationMessagesRequest
	(*StreamWorkflowReplicationMessagesResponse)(nil),   // 60: temporal.server.api.adminservice.v1.StreamWorkflowReplicationMessagesResponse
	(*GetNamespaceRequest)(nil),                         // 61: temporal.server.api.adminservice.v1.GetNamespaceRequest
	(*GetNamespaceResponse)(nil),                        // 62: temporal.server.api.adminservice.v1.GetNamespaceResponse
	(*GetDLQTasksRequest)(nil),                          // 63: temporal.server.api.adminservice.v1.GetDLQTasksRequest
	(*GetDLQTasksResponse)(nil),                         // 64: temporal.server.api.adminservice.v1.GetDLQTasksResponse
	(*PurgeDLQTasksRequest)(nil),                        // 65: temporal.server.api.adminservice.v1.PurgeDLQTasksRequest
	(*PurgeDLQTasksResponse)(nil),                       // 66: temporal.server.api.adminservice.v1.PurgeDLQTasksResponse
	(*DLQJobToken)(nil),                                 // 67: temporal.server.api.adminservice.v1.DLQJobToken
	(*MergeDLQTasksRequest)(nil),                        // 68: temporal.server.api.adminservice.v1.MergeDLQTasksRequest
	(*MergeDLQTasksResponse)(nil),                       // 69: temporal.server.api.adminservice.v1.MergeDLQTasksResponse
	(*DescribeDLQJobRequest)(nil),                       // 70: temporal.server.api.adminservice.v1.DescribeDLQJobRequest
	(*DescribeDLQJobResponse)(nil),                      // 71: temporal.server.api.adminservice.v1.DescribeDLQJobResponse
	(*CancelDLQJobRequest)(nil),                         // 72: temporal.server.api.adminservice.v1.CancelDLQJobRequest
	(*CancelDLQJobResponse)(nil),                        // 73: temporal.server.api.adminservice.v1.CancelDLQJobResponse
	(*AddTasksRequest)(nil),                             // 74: temporal.server.api.adminservice.v1.AddTasksRequest
	(*AddTasksResponse)(nil),                            // 75: temporal.server.api.adminservice.v1.AddTasksResponse
	(*ListQueuesRequest)(nil),                           // 76: temporal.server.api.adminservice.v1.ListQueuesRequest
	(*ListQueuesResponse)(nil),                          // 77: temporal.server.api.adminservice.v1.ListQueuesResponse
	(*DeepHealthCheckRequest)(nil),                      // 78: temporal.server.api.adminservice.v1.DeepHealthCheckRequest
	(*DeepHealthCheckResponse)(nil),                     // 79: temporal.server.api.adminservice.v1.DeepHealthCheckResponse
	(*SyncWorkflowStateRequest)(nil),                    // 80: temporal.server.api.adminservice.v1.SyncWorkflowStateRequest
	(*SyncWorkflowStateResponse)(nil),                   // 81: temporal.server.api.adminservice.v1.SyncWorkflowStateResponse
	(*GenerateLastHistoryReplicationTasksRequest)(nil),  // 82: temporal.server.api.adminservice.v1.GenerateLastHistoryReplicationTasksRequest
	(*GenerateLastHistoryReplicationTasksResponse)(nil), // 83: temporal.server.api.adminservice.v1.GenerateLastHistoryReplicationTasksResponse
	(*DescribeTaskQueuePartitionRequest)(nil),           // 84: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionRequest
	(*InternalTaskQueueStatus)(nil),                     // 85: temporal.server.api.adminservice.v1.InternalTaskQueueStatus
	(*DescribeTaskQueuePartitionResponse)(nil),          // 86: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse
	(*ForceUnloadTaskQueuePartitionRequest)(nil),        // 87: temporal.server.api.adminservice.v1.ForceUnloadTaskQueuePartitionRequest
	(*ForceUnloadTaskQueuePartitionResponse)(nil),       // 88: temporal.server.api.adminservice.v1.ForceUnloadTaskQueuePartitionResponse
	nil,                                       // 89: temporal.server.api.adminservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry
	nil,                                       // 90: temporal.server.api.adminservice.v1.AddSearchAttributesRequest.SearchAttributesEntry
	nil,                                       // 91: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.CustomAttributesEntry
	nil,                                       // 92: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.SystemAttributesEntry
	nil,                                       // 93: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.MappingEntry
	nil,                                       // 94: temporal.server.api.adminservice.v1.DescribeClusterResponse.SupportedClientsEntry
	nil,                                       // 95: temporal.server.api.adminservice.v1.DescribeClusterResponse.TagsEntry
	(*AddTasksRequest_Task)(nil),              // 96: temporal.server.api.adminservice.v1.AddTasksRequest.Task
	(*ListQueuesResponse_QueueInfo)(nil),      // 97: temporal.server.api.adminservice.v1.ListQueuesResponse.QueueInfo
	nil,                                       // 98: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry
	(*v1.WorkflowExecution)(nil),              // 99: temporal.api.common.v1.WorkflowExecution
	(*v1.DataBlob)(nil),                       // 100: temporal.api.common.v1.DataBlob
	(*v11.VersionHistory)(nil),                // 101: temporal.server.api.history.v1.VersionHistory
	(*v12.WorkflowMutableState)(nil),          // 102: temporal.server.api.persistence.v1.WorkflowMutableState
	(*v13.NamespaceCacheInfo)(nil),            // 103: temporal.server.api.namespace.v1.NamespaceCacheInfo
	(*v12.ShardInfo)(nil),                     // 104: temporal.server.api.persistence.v1.ShardInfo
	(*v11.TaskRange)(nil),                     // 105: temporal.server.api.history.v1.TaskRange
	(v14.TaskType)(0),                         // 106: temporal.server.api.enums.v1.TaskType
	(*timestamppb.Timestamp)(nil),             // 107: google.protobuf.Timestamp
	(*v15.ReplicationToken)(nil),              // 108: temporal.server.api.replication.v1.ReplicationToken
	(*v15.ReplicationMessages)(nil),           // 109: temporal.server.api.replication.v1.ReplicationMessages
	(*v15.ReplicationTaskInfo)(nil),           // 110: temporal.server.api.replication.v1.ReplicationTaskInfo
	(*v15.ReplicationTask)(nil),               // 111: temporal.server.api.replication.v1.ReplicationTask
	(*v17.WorkflowExecutionInfo)(nil),         // 112: temporal.api.workflow.v1.WorkflowExecutionInfo
	(*v18.MembershipInfo)(nil),                // 113: temporal.server.api.cluster.v1.MembershipInfo
	(*v19.VersionInfo)(nil),                   // 114: temporal.api.version.v1.VersionInfo
	(*v12.ClusterMetadata)(nil),               // 115: temporal.server.api.persistence.v1.ClusterMetadata
	(*durationpb.Duration)(nil),               // 116: google.protobuf.Duration
	(v14.ClusterMemberRole)(0),                // 117: temporal.server.api.enums.v1.ClusterMemberRole
	(*v18.ClusterMember)(nil),                 // 118: temporal.server.api.cluster.v1.ClusterMember
	(v14.DeadLetterQueueType)(0),              // 119: temporal.server.api.enums.v1.DeadLetterQueueType
	(v16.TaskQueueType)(0),                    // 120: temporal.api.enums.v1.TaskQueueType
	(*v12.AllocatedTaskInfo)(nil),             // 121: temporal.server.api.persistence.v1.AllocatedTaskInfo
	(*v15.SyncReplicationState)(nil),          // 122: temporal.server.api.replication.v1.SyncReplicationState
	(*v15.WorkflowReplicationMessages)(nil),   // 123: temporal.server.api.replication.v1.WorkflowReplicationMessages
	(*v110.NamespaceInfo)(nil),                // 124: temporal.api.namespace.v1.NamespaceInfo
	(*v110.NamespaceConfig)(nil),              // 125: temporal.api.namespace.v1.NamespaceConfig
	(*v111.NamespaceReplicationConfig)(nil),   // 126: temporal.api.replication.v1.NamespaceReplicationConfig
	(*v111.FailoverStatus)(nil),               // 127: temporal.api.replication.v1.FailoverStatus
	(*v112.HistoryDLQKey)(nil),                // 128: temporal.server.api.common.v1.HistoryDLQKey
	(*v112.HistoryDLQTask)(nil),               // 129: temporal.server.api.common.v1.HistoryDLQTask
	(*v112.HistoryDLQTaskMetadata)(nil),       // 130: temporal.server.api.common.v1.HistoryDLQTaskMetadata
	(v14.DLQOperationType)(0),                 // 131: temporal.server.api.enums.v1.DLQOperationType
	(v14.DLQOperationState)(0),                // 132: temporal.server.api.enums.v1.DLQOperationState
	(v14.HealthState)(0),                      // 133: temporal.server.api.enums.v1.HealthState
	(*v12.VersionedTransition)(nil),           // 134: temporal.server.api.persistence.v1.VersionedTransition
	(*v11.VersionHistories)(nil),              // 135: temporal.server.api.history.v1.VersionHistories
	(*v15.VersionedTransitionArtifact)(nil),   // 136: temporal.server.api.replication.v1.VersionedTransitionArtifact
	(*v113.TaskQueuePartition)(nil),           // 137: temporal.server.api.taskqueue.v1.TaskQueuePartition
	(*v114.TaskQueueVersionSelection)(nil),    // 138: temporal.api.taskqueue.v1.TaskQueueVersionSelection
	(*v114.TaskIdBlock)(nil),                  // 139: temporal.api.taskqueue.v1.TaskIdBlock
	(v16.IndexedValueType)(0),                 // 140: temporal.api.enums.v1.IndexedValueType
	(*v113.TaskQueueVersionInfoInternal)(nil), // 141: temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternal
}
var file_temporal_server_api_adminservice_v1_request_response_proto_depIdxs = []int32{
	99,  // 0: temporal.server.api.adminservice.v1.RebuildMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	99,  // 1: temporal.server.api.adminservice.v1.ImportWorkflowExecutionRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	100, // 2: temporal.server.api.adminservice.v1.ImportWorkflowExecutionRequest.history_batches:type_name -> temporal.api.common.v1.DataBlob
	101, // 3: temporal.server.api.adminservice.v1.ImportWorkflowExecutionRequest.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	99,  // 4: temporal.server.api.adminservice.v1.DescribeMutableStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	102, // 5: temporal.server.api.adminservice.v1.DescribeMutableStateResponse.cache_mutable_state:type_name -> temporal.server.api.persistence.v1.WorkflowMutableState
	102, // 6: temporal.server.api.adminservice.v1.DescribeMutableStateResponse.database_mutable_state:type_name -> temporal.server.api.persistence.v1.WorkflowMutableState
	99,  // 7: temporal.server.api.adminservice.v1.DescribeHistoryHostRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	103, // 8: temporal.server.api.adminservice.v1.DescribeHistoryHostResponse.namespace_cache:type_name -> temporal.server.api.namespace.v1.NamespaceCacheInfo
	104, // 9: temporal.server.api.adminservice.v1.GetShardResponse.shard_info:type_name -> temporal.server.api.persistence.v1.ShardInfo
	105, // 10: temporal.server.api.adminservice.v1.ListHistoryTasksRequest.task_range:type_name -> temporal.server.api.history.v1.TaskRange
	14,  // 11: temporal.server.api.adminservice.v1.ListHistoryTasksResponse.tasks:type_name -> temporal.server.api.adminservice.v1.Task
	106, // 12: temporal.server.api.adminservice.v1.Task.task_type:type_name -> temporal.server.api.enums.v1.TaskType
	107, // 13: temporal.server.api.adminservice.v1.Task.fire_time:type_name -> google.protobuf.Timestamp
	107, // 14: temporal.server.api.adminservice.v1.RemoveTaskRequest.visibility_time:type_name -> google.protobuf.Timestamp
	99,  // 15: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Request.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	100, // 16: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Response.history_batches:type_name -> temporal.api.common.v1.DataBlob
	101, // 17: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryV2Response.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	99,  // 18: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	100, // 19: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponse.history_batches:type_name -> temporal.api.common.v1.DataBlob
	101, // 20: temporal.server.api.adminservice.v1.GetWorkflowExecutionRawHistoryResponse.version_history:type_name -> temporal.server.api.history.v1.VersionHistory
	108, // 21: temporal.server.api.adminservice.v1.GetReplicationMessagesRequest.tokens:type_name -> temporal.server.api.replication.v1.ReplicationToken
	89,  // 22: temporal.server.api.adminservice.v1.GetReplicationMessagesResponse.shard_messages:type_name -> temporal.server.api.adminservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry
	109, // 23: temporal.server.api.adminservice.v1.GetNamespaceReplicationMessagesResponse.messages:type_name -> temporal.server.api.replication.v1.ReplicationMessages
	110, // 24: temporal.server.api.adminservice.v1.GetDLQReplicationMessagesRequest.task_infos:type_name -> temporal.server.api.replication.v1.ReplicationTaskInfo
	111, // 25: temporal.server.api.adminservice.v1.GetDLQReplicationMessagesResponse.replication_tasks:type_name -> temporal.server.api.replication.v1.ReplicationTask
	99,  // 26: temporal.server.api.adminservice.v1.ReapplyEventsRequest.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	100, // 27: temporal.server.api.adminservice.v1.ReapplyEventsRequest.events:type_name -> temporal.api.common.v1.DataBlob
	90,  // 28: temporal.server.api.adminservice.v1.AddSearchAttributesRequest.search_attributes:type_name -> temporal.server.api.adminservice.v1.AddSearchAttributesRequest.SearchAttributesEntry
	91,  // 29: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.custom_attributes:type_name -> temporal.server.api.adminservice.v1.GetSearchAttributesResponse.CustomAttributesEntry
	92,  // 30: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.system_attributes:type_name -> temporal.server.api.adminservice.v1.GetSearchAttributesResponse.SystemAttributesEntry
	93,  // 31: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.mapping:type_name -> temporal.server.api.adminservice.v1.GetSearchAttributesResponse.MappingEntry
	112, // 32: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.add_workflow_execution_info:type_name -> temporal.api.workflow.v1.WorkflowExecutionInfo
	94,  // 33: temporal.server.api.adminservice.v1.DescribeClusterResponse.supported_clients:type_name -> temporal.server.api.adminservice.v1.DescribeClusterResponse.SupportedClientsEntry
	113, // 34: temporal.server.api.adminservice.v1.DescribeClusterResponse.membership_info:type_name -> temporal.server.api.cluster.v1.MembershipInfo
	114, // 35: temporal.server.api.adminservice.v1.DescribeClusterResponse.version_info:type_name -> temporal.api.version.v1.VersionInfo
	95,  // 36: temporal.server.api.adminservice.v1.DescribeClusterResponse.tags:type_name -> temporal.server.api.adminservice.v1.DescribeClusterResponse.TagsEntry
	115, // 37: temporal.server.api.adminservice.v1.ListClustersResponse.clusters:type_name -> temporal.server.api.persistence.v1.ClusterMetadata
	116, // 38: temporal.server.api.adminservice.v1.ListClusterMembersRequest.last_heartbeat_within:type_name -> google.protobuf.Duration
	117, // 39: temporal.server.api.adminservice.v1.ListClusterMembersRequest.role:type_name -> temporal.server.api.enums.v1.ClusterMemberRole
	107, // 40: temporal.server.api.adminservice.v1.ListClusterMembersRequest.session_started_after_time:type_name -> google.protobuf.Timestamp
	118, // 41: temporal.server.api.adminservice.v1.ListClusterMembersResponse.active_members:type_name -> temporal.server.api.cluster.v1.ClusterMember
	119, // 42: temporal.server.api.adminservice.v1.GetDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	119, // 43: temporal.server.api.adminservice.v1.GetDLQMessagesResponse.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	111, // 44: temporal.server.api.adminservice.v1.GetDLQMessagesResponse.replication_tasks:type_name -> temporal.server.api.replication.v1.ReplicationTask
	110, // 45: temporal.server.api.adminservice.v1.GetDLQMessagesResponse.replication_tasks_info:type_name -> temporal.server.api.replication.v1.ReplicationTaskInfo
	119, // 46: temporal.server.api.adminservice.v1.PurgeDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	119, // 47: temporal.server.api.adminservice.v1.MergeDLQMessagesRequest.type:type_name -> temporal.server.api.enums.v1.DeadLetterQueueType
	99,  // 48: temporal.server.api.adminservice.v1.RefreshWorkflowTasksRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	120, // 49: temporal.server.api.adminservice.v1.GetTaskQueueTasksRequest.task_queue_type:type_name -> temporal.api.enums.v1.TaskQueueType
	121, // 50: temporal.server.api.adminservice.v1.GetTaskQueueTasksResponse.tasks:type_name -> temporal.server.api.persistence.v1.AllocatedTaskInfo
	99,  // 51: temporal.server.api.adminservice.v1.DeleteWorkflowExecutionRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	122, // 52: temporal.server.api.adminservice.v1.StreamWorkflowReplicationMessagesRequest.sync_replication_state:type_name -> temporal.server.api.replication.v1.SyncReplicationState
	123, // 53: temporal.server.api.adminservice.v1.StreamWorkflowReplicationMessagesResponse.messages:type_name -> temporal.server.api.replication.v1.WorkflowReplicationMessages
	124, // 54: temporal.server.api.adminservice.v1.GetNamespaceResponse.info:type_name -> temporal.api.namespace.v1.NamespaceInfo
	125, // 55: temporal.server.api.adminservice.v1.GetNamespaceResponse.config:type_name -> temporal.api.namespace.v1.NamespaceConfig
	126, // 56: temporal.server.api.adminservice.v1.GetNamespaceResponse.replication_config:type_name -> temporal.api.replication.v1.NamespaceReplicationConfig
	127, // 57: temporal.server.api.adminservice.v1.GetNamespaceResponse.failover_history:type_name -> temporal.api.replication.v1.FailoverStatus
	128, // 58: temporal.server.api.adminservice.v1.GetDLQTasksRequest.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	129, // 59: temporal.server.api.adminservice.v1.GetDLQTasksResponse.dlq_tasks:type_name -> temporal.server.api.common.v1.HistoryDLQTask
	128, // 60: temporal.server.api.adminservice.v1.PurgeDLQTasksRequest.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	130, // 61: temporal.server.api.adminservice.v1.PurgeDLQTasksRequest.inclusive_max_task_metadata:type_name -> temporal.server.api.common.v1.HistoryDLQTaskMetadata
	128, // 62: temporal.server.api.adminservice.v1.MergeDLQTasksRequest.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	130, // 63: temporal.server.api.adminservice.v1.MergeDLQTasksRequest.inclusive_max_task_metadata:type_name -> temporal.server.api.common.v1.HistoryDLQTaskMetadata
	128, // 64: temporal.server.api.adminservice.v1.DescribeDLQJobResponse.dlq_key:type_name -> temporal.server.api.common.v1.HistoryDLQKey
	131, // 65: temporal.server.api.adminservice.v1.DescribeDLQJobResponse.operation_type:type_name -> temporal.server.api.enums.v1.DLQOperationType
	132, // 66: temporal.server.api.adminservice.v1.DescribeDLQJobResponse.operation_state:type_name -> temporal.server.api.enums.v1.DLQOperationState
	107, // 67: temporal.server.api.adminservice.v1.DescribeDLQJobResponse.start_time:type_name -> google.protobuf.Timestamp
	107, // 68: temporal.server.api.adminservice.v1.DescribeDLQJobResponse.end_time:type_name -> google.protobuf.Timestamp
	96,  // 69: temporal.server.api.adminservice.v1.AddTasksRequest.tasks:type_name -> temporal.server.api.adminservice.v1.AddTasksRequest.Task
	97,  // 70: temporal.server.api.adminservice.v1.ListQueuesResponse.queues:type_name -> temporal.server.api.adminservice.v1.ListQueuesResponse.QueueInfo
	133, // 71: temporal.server.api.adminservice.v1.DeepHealthCheckResponse.state:type_name -> temporal.server.api.enums.v1.HealthState
	99,  // 72: temporal.server.api.adminservice.v1.SyncWorkflowStateRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	134, // 73: temporal.server.api.adminservice.v1.SyncWorkflowStateRequest.versioned_transition:type_name -> temporal.server.api.persistence.v1.VersionedTransition
	135, // 74: temporal.server.api.adminservice.v1.SyncWorkflowStateRequest.version_histories:type_name -> temporal.server.api.history.v1.VersionHistories
	136, // 75: temporal.server.api.adminservice.v1.SyncWorkflowStateResponse.versioned_transition_artifact:type_name -> temporal.server.api.replication.v1.VersionedTransitionArtifact
	99,  // 76: temporal.server.api.adminservice.v1.GenerateLastHistoryReplicationTasksRequest.execution:type_name -> temporal.api.common.v1.WorkflowExecution
	137, // 77: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionRequest.task_queue_partition:type_name -> temporal.server.api.taskqueue.v1.TaskQueuePartition
	138, // 78: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionRequest.build_ids:type_name -> temporal.api.taskqueue.v1.TaskQueueVersionSelection
	139, // 79: temporal.server.api.adminservice.v1.InternalTaskQueueStatus.task_id_block:type_name -> temporal.api.taskqueue.v1.TaskIdBlock
	98,  // 80: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse.versions_info_internal:type_name -> temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry
	137, // 81: temporal.server.api.adminservice.v1.ForceUnloadTaskQueuePartitionRequest.task_queue_partition:type_name -> temporal.server.api.taskqueue.v1.TaskQueuePartition
	109, // 82: temporal.server.api.adminservice.v1.GetReplicationMessagesResponse.ShardMessagesEntry.value:type_name -> temporal.server.api.replication.v1.ReplicationMessages
	140, // 83: temporal.server.api.adminservice.v1.AddSearchAttributesRequest.SearchAttributesEntry.value:type_name -> temporal.api.enums.v1.IndexedValueType
	140, // 84: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.CustomAttributesEntry.value:type_name -> temporal.api.enums.v1.IndexedValueType
	140, // 85: temporal.server.api.adminservice.v1.GetSearchAttributesResponse.SystemAttributesEntry.value:type_name -> temporal.api.enums.v1.IndexedValueType
	100, // 86: temporal.server.api.adminservice.v1.AddTasksRequest.Task.blob:type_name -> temporal.api.common.v1.DataBlob
	141, // 87: temporal.server.api.adminservice.v1.DescribeTaskQueuePartitionResponse.VersionsInfoInternalEntry.value:type_name -> temporal.server.api.taskqueue.v1.TaskQueueVersionInfoInternal
	88,  // [88:88] is the sub-list for method output_type
	88,  // [88:88] is the sub-list for method input_type
	88,  // [88:88] is the sub-list for extension type_name
	88,  // [88:88] is the sub-list for extension extendee
	0,   // [0:88] is the sub-list for field type_name
}

func init() { file_temporal_server_api_adminservice_v1_request_response_proto_init() }
func file_temporal_server_api_adminservice_v1_request_response_proto_init() {
	if File_temporal_server_api_adminservice_v1_request_response_proto != nil {
		return
	}
	file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[59].OneofWrappers = []any{
		(*StreamWorkflowReplicationMessagesRequest_SyncReplicationState)(nil),
	}
	file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[60].OneofWrappers = []any{
		(*StreamWorkflowReplicationMessagesResponse_Messages)(nil),
	}
	file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes[61].OneofWrappers = []any{
		(*GetNamespaceRequest_Namespace)(nil),
		(*GetNamespaceRequest_Id)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_adminservice_v1_request_response_proto_rawDesc), len(file_temporal_server_api_adminservice_v1_request_response_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   99,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_adminservice_v1_request_response_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_adminservice_v1_request_response_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_adminservice_v1_request_response_proto_msgTypes,
	}.Build()
	File_temporal_server_api_adminservice_v1_request_response_proto = out.File
	file_temporal_server_api_adminservice_v1_request_response_proto_goTypes = nil
	file_temporal_server_api_adminservice_v1_request_response_proto_depIdxs = nil
}
