// The MIT License
//
// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/enums/v1/replication.proto

package enums

import (
	reflect "reflect"
	"strconv"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReplicationTaskType int32

const (
	REPLICATION_TASK_TYPE_UNSPECIFIED                      ReplicationTaskType = 0
	REPLICATION_TASK_TYPE_NAMESPACE_TASK                   ReplicationTaskType = 1
	REPLICATION_TASK_TYPE_HISTORY_TASK                     ReplicationTaskType = 2
	REPLICATION_TASK_TYPE_SYNC_SHARD_STATUS_TASK           ReplicationTaskType = 3
	REPLICATION_TASK_TYPE_SYNC_ACTIVITY_TASK               ReplicationTaskType = 4
	REPLICATION_TASK_TYPE_HISTORY_METADATA_TASK            ReplicationTaskType = 5
	REPLICATION_TASK_TYPE_HISTORY_V2_TASK                  ReplicationTaskType = 6
	REPLICATION_TASK_TYPE_SYNC_WORKFLOW_STATE_TASK         ReplicationTaskType = 7
	REPLICATION_TASK_TYPE_TASK_QUEUE_USER_DATA             ReplicationTaskType = 8
	REPLICATION_TASK_TYPE_SYNC_HSM_TASK                    ReplicationTaskType = 9
	REPLICATION_TASK_TYPE_BACKFILL_HISTORY_TASK            ReplicationTaskType = 10
	REPLICATION_TASK_TYPE_VERIFY_VERSIONED_TRANSITION_TASK ReplicationTaskType = 11
	REPLICATION_TASK_TYPE_SYNC_VERSIONED_TRANSITION_TASK   ReplicationTaskType = 12
)

// Enum value maps for ReplicationTaskType.
var (
	ReplicationTaskType_name = map[int32]string{
		0:  "REPLICATION_TASK_TYPE_UNSPECIFIED",
		1:  "REPLICATION_TASK_TYPE_NAMESPACE_TASK",
		2:  "REPLICATION_TASK_TYPE_HISTORY_TASK",
		3:  "REPLICATION_TASK_TYPE_SYNC_SHARD_STATUS_TASK",
		4:  "REPLICATION_TASK_TYPE_SYNC_ACTIVITY_TASK",
		5:  "REPLICATION_TASK_TYPE_HISTORY_METADATA_TASK",
		6:  "REPLICATION_TASK_TYPE_HISTORY_V2_TASK",
		7:  "REPLICATION_TASK_TYPE_SYNC_WORKFLOW_STATE_TASK",
		8:  "REPLICATION_TASK_TYPE_TASK_QUEUE_USER_DATA",
		9:  "REPLICATION_TASK_TYPE_SYNC_HSM_TASK",
		10: "REPLICATION_TASK_TYPE_BACKFILL_HISTORY_TASK",
		11: "REPLICATION_TASK_TYPE_VERIFY_VERSIONED_TRANSITION_TASK",
		12: "REPLICATION_TASK_TYPE_SYNC_VERSIONED_TRANSITION_TASK",
	}
	ReplicationTaskType_value = map[string]int32{
		"REPLICATION_TASK_TYPE_UNSPECIFIED":                      0,
		"REPLICATION_TASK_TYPE_NAMESPACE_TASK":                   1,
		"REPLICATION_TASK_TYPE_HISTORY_TASK":                     2,
		"REPLICATION_TASK_TYPE_SYNC_SHARD_STATUS_TASK":           3,
		"REPLICATION_TASK_TYPE_SYNC_ACTIVITY_TASK":               4,
		"REPLICATION_TASK_TYPE_HISTORY_METADATA_TASK":            5,
		"REPLICATION_TASK_TYPE_HISTORY_V2_TASK":                  6,
		"REPLICATION_TASK_TYPE_SYNC_WORKFLOW_STATE_TASK":         7,
		"REPLICATION_TASK_TYPE_TASK_QUEUE_USER_DATA":             8,
		"REPLICATION_TASK_TYPE_SYNC_HSM_TASK":                    9,
		"REPLICATION_TASK_TYPE_BACKFILL_HISTORY_TASK":            10,
		"REPLICATION_TASK_TYPE_VERIFY_VERSIONED_TRANSITION_TASK": 11,
		"REPLICATION_TASK_TYPE_SYNC_VERSIONED_TRANSITION_TASK":   12,
	}
)

func (x ReplicationTaskType) Enum() *ReplicationTaskType {
	p := new(ReplicationTaskType)
	*p = x
	return p
}

func (x ReplicationTaskType) String() string {
	switch x {
	case REPLICATION_TASK_TYPE_UNSPECIFIED:
		return "Unspecified"
	case REPLICATION_TASK_TYPE_NAMESPACE_TASK:
		return "NamespaceTask"
	case REPLICATION_TASK_TYPE_HISTORY_TASK:
		return "HistoryTask"
	case REPLICATION_TASK_TYPE_SYNC_SHARD_STATUS_TASK:
		return "SyncShardStatusTask"
	case REPLICATION_TASK_TYPE_SYNC_ACTIVITY_TASK:
		return "SyncActivityTask"
	case REPLICATION_TASK_TYPE_HISTORY_METADATA_TASK:
		return "HistoryMetadataTask"
	case REPLICATION_TASK_TYPE_HISTORY_V2_TASK:
		return "HistoryV2Task"
	case REPLICATION_TASK_TYPE_SYNC_WORKFLOW_STATE_TASK:

		// Deprecated: Use ReplicationTaskType.Descriptor instead.
		return "SyncWorkflowStateTask"
	case REPLICATION_TASK_TYPE_TASK_QUEUE_USER_DATA:
		return "TaskQueueUserData"
	case REPLICATION_TASK_TYPE_SYNC_HSM_TASK:
		return "SyncHsmTask"
	case REPLICATION_TASK_TYPE_BACKFILL_HISTORY_TASK:
		return "BackfillHistoryTask"
	case REPLICATION_TASK_TYPE_VERIFY_VERSIONED_TRANSITION_TASK:
		return "VerifyVersionedTransitionTask"
	case REPLICATION_TASK_TYPE_SYNC_VERSIONED_TRANSITION_TASK:
		return "SyncVersionedTransitionTask"
	default:
		return strconv.

			// Enum value maps for NamespaceOperation.
			Itoa(int(x))
	}

}

func (ReplicationTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_temporal_server_api_enums_v1_replication_proto_enumTypes[0].Descriptor()
}

func (ReplicationTaskType) Type() protoreflect.EnumType {
	return &file_temporal_server_api_enums_v1_replication_proto_enumTypes[0]
}

func (x ReplicationTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

func (ReplicationTaskType) EnumDescriptor() ([]byte, []int) {
	return file_temporal_server_api_enums_v1_replication_proto_rawDescGZIP(), []int{0}
}

type NamespaceOperation int32

const (
	NAMESPACE_OPERATION_UNSPECIFIED NamespaceOperation = 0
	NAMESPACE_OPERATION_CREATE      NamespaceOperation = 1
	NAMESPACE_OPERATION_UPDATE      NamespaceOperation = 2
)

var (
	NamespaceOperation_name = map[int32]string{
		0: "NAMESPACE_OPERATION_UNSPECIFIED",
		1: "NAMESPACE_OPERATION_CREATE",
		2: "NAMESPACE_OPERATION_UPDATE",
	}
	NamespaceOperation_value = map[string]int32{
		"NAMESPACE_OPERATION_UNSPECIFIED": 0,
		"NAMESPACE_OPERATION_CREATE":      1,
		"NAMESPACE_OPERATION_UPDATE":      2,
	}
)

func (x NamespaceOperation) Enum() *NamespaceOperation {
	p := new(NamespaceOperation)
	*p = x
	return p
}

func (x NamespaceOperation) String() string {
	switch x {
	case NAMESPACE_OPERATION_UNSPECIFIED:
		return "Unspecified"
	case NAMESPACE_OPERATION_CREATE:
		return "Create"
	case NAMESPACE_OPERATION_UPDATE:
		return "Update"
	default:
		return strconv.Itoa(int(x))
	}

}

func (NamespaceOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_temporal_server_api_enums_v1_replication_proto_enumTypes[1].Descriptor()
}

func (NamespaceOperation) Type() protoreflect.EnumType {
	return &file_temporal_server_api_enums_v1_replication_proto_enumTypes[1]
}

func (x NamespaceOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NamespaceOperation.Descriptor instead.
func (NamespaceOperation) EnumDescriptor() ([]byte, []int) {
	return file_temporal_server_api_enums_v1_replication_proto_rawDescGZIP(), []int{1}
}

type ReplicationFlowControlCommand int32

const (
	REPLICATION_FLOW_CONTROL_COMMAND_UNSPECIFIED ReplicationFlowControlCommand = 0
	REPLICATION_FLOW_CONTROL_COMMAND_RESUME      ReplicationFlowControlCommand = 1
	REPLICATION_FLOW_CONTROL_COMMAND_PAUSE       ReplicationFlowControlCommand = 2
)

// Enum value maps for ReplicationFlowControlCommand.
var (
	ReplicationFlowControlCommand_name = map[int32]string{
		0: "REPLICATION_FLOW_CONTROL_COMMAND_UNSPECIFIED",
		1: "REPLICATION_FLOW_CONTROL_COMMAND_RESUME",
		2: "REPLICATION_FLOW_CONTROL_COMMAND_PAUSE",
	}
	ReplicationFlowControlCommand_value = map[string]int32{
		"REPLICATION_FLOW_CONTROL_COMMAND_UNSPECIFIED": 0,
		"REPLICATION_FLOW_CONTROL_COMMAND_RESUME":      1,
		"REPLICATION_FLOW_CONTROL_COMMAND_PAUSE":       2,
	}
)

func (x ReplicationFlowControlCommand) Enum() *ReplicationFlowControlCommand {
	p := new(ReplicationFlowControlCommand)
	*p = x
	return p
}

func (x ReplicationFlowControlCommand) String() string {
	switch x {
	case REPLICATION_FLOW_CONTROL_COMMAND_UNSPECIFIED:
		return "Unspecified"
	case REPLICATION_FLOW_CONTROL_COMMAND_RESUME:
		return "Resume"
	case REPLICATION_FLOW_CONTROL_COMMAND_PAUSE:
		return "Pause"
	default:
		return strconv.Itoa(int(x))
	}

}

func (ReplicationFlowControlCommand) Descriptor() protoreflect.EnumDescriptor {
	return file_temporal_server_api_enums_v1_replication_proto_enumTypes[2].Descriptor()
}

func (ReplicationFlowControlCommand) Type() protoreflect.EnumType {
	return &file_temporal_server_api_enums_v1_replication_proto_enumTypes[2]
}

func (x ReplicationFlowControlCommand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplicationFlowControlCommand.Descriptor instead.
func (ReplicationFlowControlCommand) EnumDescriptor() ([]byte, []int) {
	return file_temporal_server_api_enums_v1_replication_proto_rawDescGZIP(), []int{2}
}

var File_temporal_server_api_enums_v1_replication_proto protoreflect.FileDescriptor

const file_temporal_server_api_enums_v1_replication_proto_rawDesc = "" +
	"\n" +
	".temporal/server/api/enums/v1/replication.proto\x12\x1ctemporal.server.api.enums.v1*\xfe\x04\n" +
	"\x13ReplicationTaskType\x12%\n" +
	"!REPLICATION_TASK_TYPE_UNSPECIFIED\x10\x00\x12(\n" +
	"$REPLICATION_TASK_TYPE_NAMESPACE_TASK\x10\x01\x12&\n" +
	"\"REPLICATION_TASK_TYPE_HISTORY_TASK\x10\x02\x120\n" +
	",REPLICATION_TASK_TYPE_SYNC_SHARD_STATUS_TASK\x10\x03\x12,\n" +
	"(REPLICATION_TASK_TYPE_SYNC_ACTIVITY_TASK\x10\x04\x12/\n" +
	"+REPLICATION_TASK_TYPE_HISTORY_METADATA_TASK\x10\x05\x12)\n" +
	"%REPLICATION_TASK_TYPE_HISTORY_V2_TASK\x10\x06\x122\n" +
	".REPLICATION_TASK_TYPE_SYNC_WORKFLOW_STATE_TASK\x10\a\x12.\n" +
	"*REPLICATION_TASK_TYPE_TASK_QUEUE_USER_DATA\x10\b\x12'\n" +
	"#REPLICATION_TASK_TYPE_SYNC_HSM_TASK\x10\t\x12/\n" +
	"+REPLICATION_TASK_TYPE_BACKFILL_HISTORY_TASK\x10\n" +
	"\x12:\n" +
	"6REPLICATION_TASK_TYPE_VERIFY_VERSIONED_TRANSITION_TASK\x10\v\x128\n" +
	"4REPLICATION_TASK_TYPE_SYNC_VERSIONED_TRANSITION_TASK\x10\f*y\n" +
	"\x12NamespaceOperation\x12#\n" +
	"\x1fNAMESPACE_OPERATION_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aNAMESPACE_OPERATION_CREATE\x10\x01\x12\x1e\n" +
	"\x1aNAMESPACE_OPERATION_UPDATE\x10\x02*\xaa\x01\n" +
	"\x1dReplicationFlowControlCommand\x120\n" +
	",REPLICATION_FLOW_CONTROL_COMMAND_UNSPECIFIED\x10\x00\x12+\n" +
	"'REPLICATION_FLOW_CONTROL_COMMAND_RESUME\x10\x01\x12*\n" +
	"&REPLICATION_FLOW_CONTROL_COMMAND_PAUSE\x10\x02B*Z(go.temporal.io/server/api/enums/v1;enumsb\x06proto3"

var (
	file_temporal_server_api_enums_v1_replication_proto_rawDescOnce sync.Once
	file_temporal_server_api_enums_v1_replication_proto_rawDescData []byte
)

func file_temporal_server_api_enums_v1_replication_proto_rawDescGZIP() []byte {
	file_temporal_server_api_enums_v1_replication_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_enums_v1_replication_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_enums_v1_replication_proto_rawDesc), len(file_temporal_server_api_enums_v1_replication_proto_rawDesc)))
	})
	return file_temporal_server_api_enums_v1_replication_proto_rawDescData
}

var file_temporal_server_api_enums_v1_replication_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_temporal_server_api_enums_v1_replication_proto_goTypes = []any{
	(ReplicationTaskType)(0),           // 0: temporal.server.api.enums.v1.ReplicationTaskType
	(NamespaceOperation)(0),            // 1: temporal.server.api.enums.v1.NamespaceOperation
	(ReplicationFlowControlCommand)(0), // 2: temporal.server.api.enums.v1.ReplicationFlowControlCommand
}
var file_temporal_server_api_enums_v1_replication_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_temporal_server_api_enums_v1_replication_proto_init() }
func file_temporal_server_api_enums_v1_replication_proto_init() {
	if File_temporal_server_api_enums_v1_replication_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_enums_v1_replication_proto_rawDesc), len(file_temporal_server_api_enums_v1_replication_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_enums_v1_replication_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_enums_v1_replication_proto_depIdxs,
		EnumInfos:         file_temporal_server_api_enums_v1_replication_proto_enumTypes,
	}.Build()
	File_temporal_server_api_enums_v1_replication_proto = out.File
	file_temporal_server_api_enums_v1_replication_proto_goTypes = nil
	file_temporal_server_api_enums_v1_replication_proto_depIdxs = nil
}
