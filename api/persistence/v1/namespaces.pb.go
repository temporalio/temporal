// The MIT License
//
// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/server/api/persistence/v1/namespaces.proto

package persistence

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	v1 "go.temporal.io/api/enums/v1"
	v11 "go.temporal.io/api/namespace/v1"
	v12 "go.temporal.io/api/rules/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// detail column
type NamespaceDetail struct {
	state                       protoimpl.MessageState      `protogen:"open.v1"`
	Info                        *NamespaceInfo              `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	Config                      *NamespaceConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	ReplicationConfig           *NamespaceReplicationConfig `protobuf:"bytes,3,opt,name=replication_config,json=replicationConfig,proto3" json:"replication_config,omitempty"`
	ConfigVersion               int64                       `protobuf:"varint,4,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	FailoverNotificationVersion int64                       `protobuf:"varint,5,opt,name=failover_notification_version,json=failoverNotificationVersion,proto3" json:"failover_notification_version,omitempty"`
	FailoverVersion             int64                       `protobuf:"varint,6,opt,name=failover_version,json=failoverVersion,proto3" json:"failover_version,omitempty"`
	FailoverEndTime             *timestamppb.Timestamp      `protobuf:"bytes,7,opt,name=failover_end_time,json=failoverEndTime,proto3" json:"failover_end_time,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *NamespaceDetail) Reset() {
	*x = NamespaceDetail{}
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceDetail) ProtoMessage() {}

func (x *NamespaceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceDetail.ProtoReflect.Descriptor instead.
func (*NamespaceDetail) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP(), []int{0}
}

func (x *NamespaceDetail) GetInfo() *NamespaceInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *NamespaceDetail) GetConfig() *NamespaceConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *NamespaceDetail) GetReplicationConfig() *NamespaceReplicationConfig {
	if x != nil {
		return x.ReplicationConfig
	}
	return nil
}

func (x *NamespaceDetail) GetConfigVersion() int64 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *NamespaceDetail) GetFailoverNotificationVersion() int64 {
	if x != nil {
		return x.FailoverNotificationVersion
	}
	return 0
}

func (x *NamespaceDetail) GetFailoverVersion() int64 {
	if x != nil {
		return x.FailoverVersion
	}
	return 0
}

func (x *NamespaceDetail) GetFailoverEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FailoverEndTime
	}
	return nil
}

type NamespaceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State         v1.NamespaceState      `protobuf:"varint,2,opt,name=state,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"state,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Owner         string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	Data          map[string]string      `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceInfo) Reset() {
	*x = NamespaceInfo{}
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceInfo) ProtoMessage() {}

func (x *NamespaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceInfo.ProtoReflect.Descriptor instead.
func (*NamespaceInfo) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP(), []int{1}
}

func (x *NamespaceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NamespaceInfo) GetState() v1.NamespaceState {
	if x != nil {
		return x.State
	}
	return v1.NamespaceState(0)
}

func (x *NamespaceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NamespaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *NamespaceInfo) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *NamespaceInfo) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type NamespaceConfig struct {
	state                        protoimpl.MessageState       `protogen:"open.v1"`
	Retention                    *durationpb.Duration         `protobuf:"bytes,1,opt,name=retention,proto3" json:"retention,omitempty"`
	ArchivalBucket               string                       `protobuf:"bytes,2,opt,name=archival_bucket,json=archivalBucket,proto3" json:"archival_bucket,omitempty"`
	BadBinaries                  *v11.BadBinaries             `protobuf:"bytes,3,opt,name=bad_binaries,json=badBinaries,proto3" json:"bad_binaries,omitempty"`
	HistoryArchivalState         v1.ArchivalState             `protobuf:"varint,4,opt,name=history_archival_state,json=historyArchivalState,proto3,enum=temporal.api.enums.v1.ArchivalState" json:"history_archival_state,omitempty"`
	HistoryArchivalUri           string                       `protobuf:"bytes,5,opt,name=history_archival_uri,json=historyArchivalUri,proto3" json:"history_archival_uri,omitempty"`
	VisibilityArchivalState      v1.ArchivalState             `protobuf:"varint,6,opt,name=visibility_archival_state,json=visibilityArchivalState,proto3,enum=temporal.api.enums.v1.ArchivalState" json:"visibility_archival_state,omitempty"`
	VisibilityArchivalUri        string                       `protobuf:"bytes,7,opt,name=visibility_archival_uri,json=visibilityArchivalUri,proto3" json:"visibility_archival_uri,omitempty"`
	CustomSearchAttributeAliases map[string]string            `protobuf:"bytes,8,rep,name=custom_search_attribute_aliases,json=customSearchAttributeAliases,proto3" json:"custom_search_attribute_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WorkflowRules                map[string]*v12.WorkflowRule `protobuf:"bytes,9,rep,name=workflow_rules,json=workflowRules,proto3" json:"workflow_rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *NamespaceConfig) Reset() {
	*x = NamespaceConfig{}
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceConfig) ProtoMessage() {}

func (x *NamespaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceConfig.ProtoReflect.Descriptor instead.
func (*NamespaceConfig) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceConfig) GetRetention() *durationpb.Duration {
	if x != nil {
		return x.Retention
	}
	return nil
}

func (x *NamespaceConfig) GetArchivalBucket() string {
	if x != nil {
		return x.ArchivalBucket
	}
	return ""
}

func (x *NamespaceConfig) GetBadBinaries() *v11.BadBinaries {
	if x != nil {
		return x.BadBinaries
	}
	return nil
}

func (x *NamespaceConfig) GetHistoryArchivalState() v1.ArchivalState {
	if x != nil {
		return x.HistoryArchivalState
	}
	return v1.ArchivalState(0)
}

func (x *NamespaceConfig) GetHistoryArchivalUri() string {
	if x != nil {
		return x.HistoryArchivalUri
	}
	return ""
}

func (x *NamespaceConfig) GetVisibilityArchivalState() v1.ArchivalState {
	if x != nil {
		return x.VisibilityArchivalState
	}
	return v1.ArchivalState(0)
}

func (x *NamespaceConfig) GetVisibilityArchivalUri() string {
	if x != nil {
		return x.VisibilityArchivalUri
	}
	return ""
}

func (x *NamespaceConfig) GetCustomSearchAttributeAliases() map[string]string {
	if x != nil {
		return x.CustomSearchAttributeAliases
	}
	return nil
}

func (x *NamespaceConfig) GetWorkflowRules() map[string]*v12.WorkflowRule {
	if x != nil {
		return x.WorkflowRules
	}
	return nil
}

type NamespaceReplicationConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActiveClusterName string                 `protobuf:"bytes,1,opt,name=active_cluster_name,json=activeClusterName,proto3" json:"active_cluster_name,omitempty"`
	Clusters          []string               `protobuf:"bytes,2,rep,name=clusters,proto3" json:"clusters,omitempty"`
	State             v1.ReplicationState    `protobuf:"varint,3,opt,name=state,proto3,enum=temporal.api.enums.v1.ReplicationState" json:"state,omitempty"`
	FailoverHistory   []*FailoverStatus      `protobuf:"bytes,8,rep,name=failover_history,json=failoverHistory,proto3" json:"failover_history,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NamespaceReplicationConfig) Reset() {
	*x = NamespaceReplicationConfig{}
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceReplicationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceReplicationConfig) ProtoMessage() {}

func (x *NamespaceReplicationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceReplicationConfig.ProtoReflect.Descriptor instead.
func (*NamespaceReplicationConfig) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP(), []int{3}
}

func (x *NamespaceReplicationConfig) GetActiveClusterName() string {
	if x != nil {
		return x.ActiveClusterName
	}
	return ""
}

func (x *NamespaceReplicationConfig) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *NamespaceReplicationConfig) GetState() v1.ReplicationState {
	if x != nil {
		return x.State
	}
	return v1.ReplicationState(0)
}

func (x *NamespaceReplicationConfig) GetFailoverHistory() []*FailoverStatus {
	if x != nil {
		return x.FailoverHistory
	}
	return nil
}

// Represents a historical replication status of a Namespace
type FailoverStatus struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FailoverTime    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=failover_time,json=failoverTime,proto3" json:"failover_time,omitempty"`
	FailoverVersion int64                  `protobuf:"varint,2,opt,name=failover_version,json=failoverVersion,proto3" json:"failover_version,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FailoverStatus) Reset() {
	*x = FailoverStatus{}
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailoverStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailoverStatus) ProtoMessage() {}

func (x *FailoverStatus) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailoverStatus.ProtoReflect.Descriptor instead.
func (*FailoverStatus) Descriptor() ([]byte, []int) {
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP(), []int{4}
}

func (x *FailoverStatus) GetFailoverTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FailoverTime
	}
	return nil
}

func (x *FailoverStatus) GetFailoverVersion() int64 {
	if x != nil {
		return x.FailoverVersion
	}
	return 0
}

var File_temporal_server_api_persistence_v1_namespaces_proto protoreflect.FileDescriptor

const file_temporal_server_api_persistence_v1_namespaces_proto_rawDesc = "" +
	"\n" +
	"3temporal/server/api/persistence/v1/namespaces.proto\x12\"temporal.server.api.persistence.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a%temporal/api/enums/v1/namespace.proto\x1a'temporal/api/namespace/v1/message.proto\x1a#temporal/api/rules/v1/message.proto\"\xf2\x03\n" +
	"\x0fNamespaceDetail\x12E\n" +
	"\x04info\x18\x01 \x01(\v21.temporal.server.api.persistence.v1.NamespaceInfoR\x04info\x12K\n" +
	"\x06config\x18\x02 \x01(\v23.temporal.server.api.persistence.v1.NamespaceConfigR\x06config\x12m\n" +
	"\x12replication_config\x18\x03 \x01(\v2>.temporal.server.api.persistence.v1.NamespaceReplicationConfigR\x11replicationConfig\x12%\n" +
	"\x0econfig_version\x18\x04 \x01(\x03R\rconfigVersion\x12B\n" +
	"\x1dfailover_notification_version\x18\x05 \x01(\x03R\x1bfailoverNotificationVersion\x12)\n" +
	"\x10failover_version\x18\x06 \x01(\x03R\x0ffailoverVersion\x12F\n" +
	"\x11failover_end_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x0ffailoverEndTime\"\xb2\x02\n" +
	"\rNamespaceInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12;\n" +
	"\x05state\x18\x02 \x01(\x0e2%.temporal.api.enums.v1.NamespaceStateR\x05state\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05owner\x18\x05 \x01(\tR\x05owner\x12O\n" +
	"\x04data\x18\x06 \x03(\v2;.temporal.server.api.persistence.v1.NamespaceInfo.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\a\n" +
	"\x0fNamespaceConfig\x127\n" +
	"\tretention\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\tretention\x12'\n" +
	"\x0farchival_bucket\x18\x02 \x01(\tR\x0earchivalBucket\x12I\n" +
	"\fbad_binaries\x18\x03 \x01(\v2&.temporal.api.namespace.v1.BadBinariesR\vbadBinaries\x12Z\n" +
	"\x16history_archival_state\x18\x04 \x01(\x0e2$.temporal.api.enums.v1.ArchivalStateR\x14historyArchivalState\x120\n" +
	"\x14history_archival_uri\x18\x05 \x01(\tR\x12historyArchivalUri\x12`\n" +
	"\x19visibility_archival_state\x18\x06 \x01(\x0e2$.temporal.api.enums.v1.ArchivalStateR\x17visibilityArchivalState\x126\n" +
	"\x17visibility_archival_uri\x18\a \x01(\tR\x15visibilityArchivalUri\x12\x9c\x01\n" +
	"\x1fcustom_search_attribute_aliases\x18\b \x03(\v2U.temporal.server.api.persistence.v1.NamespaceConfig.CustomSearchAttributeAliasesEntryR\x1ccustomSearchAttributeAliases\x12m\n" +
	"\x0eworkflow_rules\x18\t \x03(\v2F.temporal.server.api.persistence.v1.NamespaceConfig.WorkflowRulesEntryR\rworkflowRules\x1aO\n" +
	"!CustomSearchAttributeAliasesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ae\n" +
	"\x12WorkflowRulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.temporal.api.rules.v1.WorkflowRuleR\x05value:\x028\x01\"\x86\x02\n" +
	"\x1aNamespaceReplicationConfig\x12.\n" +
	"\x13active_cluster_name\x18\x01 \x01(\tR\x11activeClusterName\x12\x1a\n" +
	"\bclusters\x18\x02 \x03(\tR\bclusters\x12=\n" +
	"\x05state\x18\x03 \x01(\x0e2'.temporal.api.enums.v1.ReplicationStateR\x05state\x12]\n" +
	"\x10failover_history\x18\b \x03(\v22.temporal.server.api.persistence.v1.FailoverStatusR\x0ffailoverHistory\"|\n" +
	"\x0eFailoverStatus\x12?\n" +
	"\rfailover_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ffailoverTime\x12)\n" +
	"\x10failover_version\x18\x02 \x01(\x03R\x0ffailoverVersionB6Z4go.temporal.io/server/api/persistence/v1;persistenceb\x06proto3"

var (
	file_temporal_server_api_persistence_v1_namespaces_proto_rawDescOnce sync.Once
	file_temporal_server_api_persistence_v1_namespaces_proto_rawDescData []byte
)

func file_temporal_server_api_persistence_v1_namespaces_proto_rawDescGZIP() []byte {
	file_temporal_server_api_persistence_v1_namespaces_proto_rawDescOnce.Do(func() {
		file_temporal_server_api_persistence_v1_namespaces_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temporal_server_api_persistence_v1_namespaces_proto_rawDesc), len(file_temporal_server_api_persistence_v1_namespaces_proto_rawDesc)))
	})
	return file_temporal_server_api_persistence_v1_namespaces_proto_rawDescData
}

var file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_temporal_server_api_persistence_v1_namespaces_proto_goTypes = []any{
	(*NamespaceDetail)(nil),            // 0: temporal.server.api.persistence.v1.NamespaceDetail
	(*NamespaceInfo)(nil),              // 1: temporal.server.api.persistence.v1.NamespaceInfo
	(*NamespaceConfig)(nil),            // 2: temporal.server.api.persistence.v1.NamespaceConfig
	(*NamespaceReplicationConfig)(nil), // 3: temporal.server.api.persistence.v1.NamespaceReplicationConfig
	(*FailoverStatus)(nil),             // 4: temporal.server.api.persistence.v1.FailoverStatus
	nil,                                // 5: temporal.server.api.persistence.v1.NamespaceInfo.DataEntry
	nil,                                // 6: temporal.server.api.persistence.v1.NamespaceConfig.CustomSearchAttributeAliasesEntry
	nil,                                // 7: temporal.server.api.persistence.v1.NamespaceConfig.WorkflowRulesEntry
	(*timestamppb.Timestamp)(nil),      // 8: google.protobuf.Timestamp
	(v1.NamespaceState)(0),             // 9: temporal.api.enums.v1.NamespaceState
	(*durationpb.Duration)(nil),        // 10: google.protobuf.Duration
	(*v11.BadBinaries)(nil),            // 11: temporal.api.namespace.v1.BadBinaries
	(v1.ArchivalState)(0),              // 12: temporal.api.enums.v1.ArchivalState
	(v1.ReplicationState)(0),           // 13: temporal.api.enums.v1.ReplicationState
	(*v12.WorkflowRule)(nil),           // 14: temporal.api.rules.v1.WorkflowRule
}
var file_temporal_server_api_persistence_v1_namespaces_proto_depIdxs = []int32{
	1,  // 0: temporal.server.api.persistence.v1.NamespaceDetail.info:type_name -> temporal.server.api.persistence.v1.NamespaceInfo
	2,  // 1: temporal.server.api.persistence.v1.NamespaceDetail.config:type_name -> temporal.server.api.persistence.v1.NamespaceConfig
	3,  // 2: temporal.server.api.persistence.v1.NamespaceDetail.replication_config:type_name -> temporal.server.api.persistence.v1.NamespaceReplicationConfig
	8,  // 3: temporal.server.api.persistence.v1.NamespaceDetail.failover_end_time:type_name -> google.protobuf.Timestamp
	9,  // 4: temporal.server.api.persistence.v1.NamespaceInfo.state:type_name -> temporal.api.enums.v1.NamespaceState
	5,  // 5: temporal.server.api.persistence.v1.NamespaceInfo.data:type_name -> temporal.server.api.persistence.v1.NamespaceInfo.DataEntry
	10, // 6: temporal.server.api.persistence.v1.NamespaceConfig.retention:type_name -> google.protobuf.Duration
	11, // 7: temporal.server.api.persistence.v1.NamespaceConfig.bad_binaries:type_name -> temporal.api.namespace.v1.BadBinaries
	12, // 8: temporal.server.api.persistence.v1.NamespaceConfig.history_archival_state:type_name -> temporal.api.enums.v1.ArchivalState
	12, // 9: temporal.server.api.persistence.v1.NamespaceConfig.visibility_archival_state:type_name -> temporal.api.enums.v1.ArchivalState
	6,  // 10: temporal.server.api.persistence.v1.NamespaceConfig.custom_search_attribute_aliases:type_name -> temporal.server.api.persistence.v1.NamespaceConfig.CustomSearchAttributeAliasesEntry
	7,  // 11: temporal.server.api.persistence.v1.NamespaceConfig.workflow_rules:type_name -> temporal.server.api.persistence.v1.NamespaceConfig.WorkflowRulesEntry
	13, // 12: temporal.server.api.persistence.v1.NamespaceReplicationConfig.state:type_name -> temporal.api.enums.v1.ReplicationState
	4,  // 13: temporal.server.api.persistence.v1.NamespaceReplicationConfig.failover_history:type_name -> temporal.server.api.persistence.v1.FailoverStatus
	8,  // 14: temporal.server.api.persistence.v1.FailoverStatus.failover_time:type_name -> google.protobuf.Timestamp
	14, // 15: temporal.server.api.persistence.v1.NamespaceConfig.WorkflowRulesEntry.value:type_name -> temporal.api.rules.v1.WorkflowRule
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_temporal_server_api_persistence_v1_namespaces_proto_init() }
func file_temporal_server_api_persistence_v1_namespaces_proto_init() {
	if File_temporal_server_api_persistence_v1_namespaces_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temporal_server_api_persistence_v1_namespaces_proto_rawDesc), len(file_temporal_server_api_persistence_v1_namespaces_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_server_api_persistence_v1_namespaces_proto_goTypes,
		DependencyIndexes: file_temporal_server_api_persistence_v1_namespaces_proto_depIdxs,
		MessageInfos:      file_temporal_server_api_persistence_v1_namespaces_proto_msgTypes,
	}.Build()
	File_temporal_server_api_persistence_v1_namespaces_proto = out.File
	file_temporal_server_api_persistence_v1_namespaces_proto_goTypes = nil
	file_temporal_server_api_persistence_v1_namespaces_proto_depIdxs = nil
}
