// Code generated by protoc-gen-go-helpers. DO NOT EDIT.
package persistence

import (
	"google.golang.org/protobuf/proto"
)

// Marshal an object of type NexusServiceMetadataValue to the protobuf v3 wire format
func (val *NexusServiceMetadataValue) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type NexusServiceMetadataValue from the protobuf v3 wire format
func (val *NexusServiceMetadataValue) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *NexusServiceMetadataValue) Size() int {
	return proto.Size(val)
}

// Equal returns whether two NexusServiceMetadataValue values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *NexusServiceMetadataValue) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *NexusServiceMetadataValue
	switch t := that.(type) {
	case *NexusServiceMetadataValue:
		that1 = t
	case NexusServiceMetadataValue:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type NexusIncomingService to the protobuf v3 wire format
func (val *NexusIncomingService) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type NexusIncomingService from the protobuf v3 wire format
func (val *NexusIncomingService) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *NexusIncomingService) Size() int {
	return proto.Size(val)
}

// Equal returns whether two NexusIncomingService values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *NexusIncomingService) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *NexusIncomingService
	switch t := that.(type) {
	case *NexusIncomingService:
		that1 = t
	case NexusIncomingService:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}

// Marshal an object of type NexusIncomingServiceEntry to the protobuf v3 wire format
func (val *NexusIncomingServiceEntry) Marshal() ([]byte, error) {
	return proto.Marshal(val)
}

// Unmarshal an object of type NexusIncomingServiceEntry from the protobuf v3 wire format
func (val *NexusIncomingServiceEntry) Unmarshal(buf []byte) error {
	return proto.Unmarshal(buf, val)
}

// Size returns the size of the object, in bytes, once serialized
func (val *NexusIncomingServiceEntry) Size() int {
	return proto.Size(val)
}

// Equal returns whether two NexusIncomingServiceEntry values are equivalent by recursively
// comparing the message's fields.
// For more information see the documentation for
// https://pkg.go.dev/google.golang.org/protobuf/proto#Equal
func (this *NexusIncomingServiceEntry) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	var that1 *NexusIncomingServiceEntry
	switch t := that.(type) {
	case *NexusIncomingServiceEntry:
		that1 = t
	case NexusIncomingServiceEntry:
		that1 = &t
	default:
		return false
	}

	return proto.Equal(this, that1)
}
