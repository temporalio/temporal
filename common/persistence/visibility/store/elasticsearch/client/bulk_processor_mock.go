// Code generated by MockGen. DO NOT EDIT.
// Source: bulk_processor.go
//
// Generated by this command:
//
//	mockgen -package client -source bulk_processor.go -destination bulk_processor_mock.go
//

// Package client is a generated GoMock package.
package client

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBulkProcessor is a mock of BulkProcessor interface.
type MockBulkProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockBulkProcessorMockRecorder
	isgomock struct{}
}

// MockBulkProcessorMockRecorder is the mock recorder for MockBulkProcessor.
type MockBulkProcessorMockRecorder struct {
	mock *MockBulkProcessor
}

// NewMockBulkProcessor creates a new mock instance.
func NewMockBulkProcessor(ctrl *gomock.Controller) *MockBulkProcessor {
	mock := &MockBulkProcessor{ctrl: ctrl}
	mock.recorder = &MockBulkProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBulkProcessor) EXPECT() *MockBulkProcessorMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockBulkProcessor) Add(request *BulkableRequest) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", request)
}

// Add indicates an expected call of Add.
func (mr *MockBulkProcessorMockRecorder) Add(request any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockBulkProcessor)(nil).Add), request)
}

// Stop mocks base method.
func (m *MockBulkProcessor) Stop() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stop")
	ret0, _ := ret[0].(error)
	return ret0
}

// Stop indicates an expected call of Stop.
func (mr *MockBulkProcessorMockRecorder) Stop() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stop", reflect.TypeOf((*MockBulkProcessor)(nil).Stop))
}
