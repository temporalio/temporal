// Code generated by MockGen. DO NOT EDIT.
// Source: claim_mapper.go
//
// Generated by this command:
//
//	mockgen -package authorization -source claim_mapper.go -destination claim_mapper_mock.go
//

// Package authorization is a generated GoMock package.
package authorization

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockClaimMapper is a mock of ClaimMapper interface.
type MockClaimMapper struct {
	ctrl     *gomock.Controller
	recorder *MockClaimMapperMockRecorder
	isgomock struct{}
}

// MockClaimMapperMockRecorder is the mock recorder for MockClaimMapper.
type MockClaimMapperMockRecorder struct {
	mock *MockClaimMapper
}

// NewMockClaimMapper creates a new mock instance.
func NewMockClaimMapper(ctrl *gomock.Controller) *MockClaimMapper {
	mock := &MockClaimMapper{ctrl: ctrl}
	mock.recorder = &MockClaimMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClaimMapper) EXPECT() *MockClaimMapperMockRecorder {
	return m.recorder
}

// GetClaims mocks base method.
func (m *MockClaimMapper) GetClaims(authInfo *AuthInfo) (*Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClaims", authInfo)
	ret0, _ := ret[0].(*Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClaims indicates an expected call of GetClaims.
func (mr *MockClaimMapperMockRecorder) GetClaims(authInfo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClaims", reflect.TypeOf((*MockClaimMapper)(nil).GetClaims), authInfo)
}

// MockClaimMapperWithAuthInfoRequired is a mock of ClaimMapperWithAuthInfoRequired interface.
type MockClaimMapperWithAuthInfoRequired struct {
	ctrl     *gomock.Controller
	recorder *MockClaimMapperWithAuthInfoRequiredMockRecorder
	isgomock struct{}
}

// MockClaimMapperWithAuthInfoRequiredMockRecorder is the mock recorder for MockClaimMapperWithAuthInfoRequired.
type MockClaimMapperWithAuthInfoRequiredMockRecorder struct {
	mock *MockClaimMapperWithAuthInfoRequired
}

// NewMockClaimMapperWithAuthInfoRequired creates a new mock instance.
func NewMockClaimMapperWithAuthInfoRequired(ctrl *gomock.Controller) *MockClaimMapperWithAuthInfoRequired {
	mock := &MockClaimMapperWithAuthInfoRequired{ctrl: ctrl}
	mock.recorder = &MockClaimMapperWithAuthInfoRequiredMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClaimMapperWithAuthInfoRequired) EXPECT() *MockClaimMapperWithAuthInfoRequiredMockRecorder {
	return m.recorder
}

// AuthInfoRequired mocks base method.
func (m *MockClaimMapperWithAuthInfoRequired) AuthInfoRequired() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthInfoRequired")
	ret0, _ := ret[0].(bool)
	return ret0
}

// AuthInfoRequired indicates an expected call of AuthInfoRequired.
func (mr *MockClaimMapperWithAuthInfoRequiredMockRecorder) AuthInfoRequired() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthInfoRequired", reflect.TypeOf((*MockClaimMapperWithAuthInfoRequired)(nil).AuthInfoRequired))
}
