package mocks

import (
	"github.com/stretchr/testify/mock"

	"github.com/temporalio/temporal/common/persistence"
)

// TaskManager is an autogenerated mock type for the TaskManager type
type TaskManager struct {
	mock.Mock
}

// GetName provides a mock function with given fields:
func (_m *TaskManager) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *TaskManager) Close() {
	_m.Called()
}

// LeaseTaskList provides a mock function with given fields: request
func (_m *TaskManager) LeaseTaskList(request *persistence.LeaseTaskListRequest) (*persistence.LeaseTaskListResponse, error) {
	ret := _m.Called(request)

	var r0 *persistence.LeaseTaskListResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*persistence.LeaseTaskListRequest) (*persistence.LeaseTaskListResponse, error)); ok {
		return rf(request)
	} else if ret.Get(0) != nil {
		r0 = ret.Get(0).(*persistence.LeaseTaskListResponse)
	}

	if rf, ok := ret.Get(1).(func(*persistence.LeaseTaskListRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTaskList provides a mock function with given fields: request
func (_m *TaskManager) UpdateTaskList(request *persistence.UpdateTaskListRequest) (*persistence.UpdateTaskListResponse, error) {
	ret := _m.Called(request)

	var r0 *persistence.UpdateTaskListResponse
	if rf, ok := ret.Get(0).(func(*persistence.UpdateTaskListRequest) *persistence.UpdateTaskListResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*persistence.UpdateTaskListResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*persistence.UpdateTaskListRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CompleteTask provides a mock function with given fields: request
func (_m *TaskManager) CompleteTask(request *persistence.CompleteTaskRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*persistence.CompleteTaskRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CompleteTasksLessThan
func (_m *TaskManager) CompleteTasksLessThan(request *persistence.CompleteTasksLessThanRequest) (int, error) {
	ret := _m.Called(request)

	var r0 int
	if rf, ok := ret.Get(0).(func(*persistence.CompleteTasksLessThanRequest) int); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(int)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*persistence.CompleteTasksLessThanRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func (_m *TaskManager) ListTaskList(request *persistence.ListTaskListRequest) (*persistence.ListTaskListResponse, error) {
	ret := _m.Called(request)

	var r0 *persistence.ListTaskListResponse
	if rf, ok := ret.Get(0).(func(request *persistence.ListTaskListRequest) *persistence.ListTaskListResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*persistence.ListTaskListResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*persistence.ListTaskListRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

func (_m *TaskManager) DeleteTaskList(request *persistence.DeleteTaskListRequest) error {
	ret := _m.Called(request)

	var r0 error
	if rf, ok := ret.Get(0).(func(*persistence.DeleteTaskListRequest) error); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateTasks provides a mock function with given fields: request
func (_m *TaskManager) CreateTasks(request *persistence.CreateTasksRequest) (*persistence.CreateTasksResponse, error) {
	ret := _m.Called(request)

	var r0 *persistence.CreateTasksResponse
	if rf, ok := ret.Get(0).(func(*persistence.CreateTasksRequest) *persistence.CreateTasksResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*persistence.CreateTasksResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*persistence.CreateTasksRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTasks provides a mock function with given fields: request
func (_m *TaskManager) GetTasks(request *persistence.GetTasksRequest) (*persistence.GetTasksResponse, error) {
	ret := _m.Called(request)

	var r0 *persistence.GetTasksResponse
	if rf, ok := ret.Get(0).(func(*persistence.GetTasksRequest) *persistence.GetTasksResponse); ok {
		r0 = rf(request)
	} else if ret.Get(0) != nil {
		r0 = ret.Get(0).(*persistence.GetTasksResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*persistence.GetTasksRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
