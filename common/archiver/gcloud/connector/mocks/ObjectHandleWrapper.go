// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	connector "github.com/temporalio/temporal/common/archiver/gcloud/connector"

	mock "github.com/stretchr/testify/mock"

	storage "cloud.google.com/go/storage"
)

// ObjectHandleWrapper is an autogenerated mock type for the ObjectHandleWrapper type
type ObjectHandleWrapper struct {
	mock.Mock
}

// Attrs provides a mock function with given fields: ctx
func (_m *ObjectHandleWrapper) Attrs(ctx context.Context) (*storage.ObjectAttrs, error) {
	ret := _m.Called(ctx)

	var r0 *storage.ObjectAttrs
	if rf, ok := ret.Get(0).(func(context.Context) *storage.ObjectAttrs); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.ObjectAttrs)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewReader provides a mock function with given fields: ctx
func (_m *ObjectHandleWrapper) NewReader(ctx context.Context) (connector.ReaderWrapper, error) {
	ret := _m.Called(ctx)

	var r0 connector.ReaderWrapper
	if rf, ok := ret.Get(0).(func(context.Context) connector.ReaderWrapper); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(connector.ReaderWrapper)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewWriter provides a mock function with given fields: ctx
func (_m *ObjectHandleWrapper) NewWriter(ctx context.Context) connector.WriterWrapper {
	ret := _m.Called(ctx)

	var r0 connector.WriterWrapper
	if rf, ok := ret.Get(0).(func(context.Context) connector.WriterWrapper); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(connector.WriterWrapper)
		}
	}

	return r0
}
