// Copyright (c) 2019 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package sqlblobs;
option go_package = "github.com/temporalio/temporal/.gen/proto/sqlblobs";

message DomainInfo {
    string name = 1;
    string description = 2;
    string owner = 3;
    int32 status = 4;
    int32 retentionDays = 5;
    bool emitMetric = 6;
    string archivalBucket = 7;
    int32 archivalStatus = 8;
    int64 configVersion = 9;
    int64 notificationVersion = 10;
    int64 failoverNotificationVersion = 11;
    int64 failoverVersion = 12;
    string activeClusterName = 13;
    repeated string clusters = 14;
    map<string, string> data = 15;
    bytes badBinaries = 16;
    string badBinariesEncoding = 17;
    int32 historyArchivalStatus = 18;
    string historyArchivalURI = 19;
    int32 visibilityArchivalStatus = 20;
    string visibilityArchivalURI = 21;
}

message ActivityInfo {
    int64 version = 1;
    int64 scheduledEventBatchID = 2;
    bytes scheduledEvent = 3;
    string scheduledEventEncoding = 4;
    int64 scheduledTimeNanos = 5;
    int64 startedID = 6;
    bytes startedEvent = 7;
    string startedEventEncoding = 8;
    int64 startedTimeNanos = 9;
    string activityID = 10;
    string requestID = 11;
    int32 scheduleToStartTimeoutSeconds = 12;
    int32 scheduleToCloseTimeoutSeconds = 13;
    int32 startToCloseTimeoutSeconds = 14;
    int32 heartbeatTimeoutSeconds = 15;
    bool cancelRequested = 16;
    int64 cancelRequestID = 17;
    int32 timerTaskStatus = 18;
    int32 attempt = 19;
    string taskList = 20;
    string startedIdentity = 21;
    bool hasRetryPolicy = 22;
    int32 retryInitialIntervalSeconds = 23;
    int32 retryMaximumIntervalSeconds = 24;
    int32 retryMaximumAttempts = 25;
    int64 retryExpirationTimeNanos = 26;
    double retryBackoffCoefficient = 27;
    repeated string retryNonRetryableErrors = 28;
    string retryLastFailureReason = 29;
    string retryLastWorkerIdentity = 30;
    bytes retryLastFailureDetails = 31;
}

message ChildExecutionInfo {
    int64 version = 1;
    int64 initiatedEventBatchID = 2;
    int64 startedID = 3;
    bytes initiatedEvent = 4;
    string initiatedEventEncoding = 5;
    string startedWorkflowID = 6;
    bytes startedRunID = 7;
    bytes startedEvent = 8;
    string startedEventEncoding = 9;
    string createRequestID = 10;
    string domainName = 11;
    string workflowTypeName = 12;
    int32 parentClosePolicy = 13;
}