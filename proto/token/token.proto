// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package token;

option go_package = "github.com/temporalio/temporal/.gen/proto/token";

import "common/common.proto";
import "common/decision.proto";
import "replication/replication.proto";

message HistoryContinuation {
    string runId = 1;
    int64 firstEventId = 2;
    int64 nextEventId = 3;
    bool isWorkflowRunning = 5;
    bytes persistenceToken = 6;
    common.TransientDecisionInfo transientDecision = 7;
    bytes branchToken = 8;
    map<string,replication.ReplicationInfo> replicationInfo = 9;
}

message RawHistoryContinuation{
    string namespace = 1;
    string workflowId = 2;
    string runId = 3;
    int64 startEventId = 4;
    int64 startEventVersion = 5;
    int64 endEventId = 6;
    int64 endEventVersion = 7;
    bytes persistenceToken = 8;
    common.VersionHistories versionHistories = 9;
}

message Task {
    bytes namespaceId = 1;
    string workflowId  = 2;
    bytes runId = 3;
    int64 scheduleId = 4;
    int64 scheduleAttempt = 5;
    string activityId = 6;
    string workflowType = 7;
    string activityType = 8;
}

message QueryTask {
    string namespaceId = 1;
    string taskList = 2;
    string taskId = 3;
}
