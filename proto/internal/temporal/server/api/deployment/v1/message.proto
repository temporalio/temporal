// The MIT License
//
// Copyright (c) 2024 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.server.api.deployment.v1;

option go_package = "go.temporal.io/server/api/deployment/v1;deployment";

import "temporal/api/enums/v1/task_queue.proto";
import "google/protobuf/timestamp.proto";
import "temporal/api/deployment/v1/message.proto";
import "temporal/api/common/v1/message.proto";


// The source of truth for this data is in the WorkerDeployment entity workflows, which is
// synced to all TQs whenever the source changes.
message DeploymentVersionData {
    // Special case: `version.version` may be empty (but not `version.deployment_name`). That is
    // only valid when `ramp_percentage` is non-zero, representing ramping to unversioned in a
    // particular worker deployment.
    temporal.api.deployment.v1.WorkerDeploymentVersion version = 1;
    // Last time `is_current` or `ramp_percentage` of this version changed.
    google.protobuf.Timestamp routing_update_time = 2;
    // If this version is the current version of its deployment.
    bool is_current = 3;
    // Range: [0, 100]. Must be zero if is_current is true. Must be non-zero if `version.version`
    // is empty.
    float ramp_percentage = 4;

    // Experimental
    google.protobuf.Timestamp first_poller_time = 5;
}

// Local state for Worker Deployment Version
message VersionLocalState {
    string deployment_name = 1;
    string version = 2;

    map<string, TaskQueueFamilyData> task_queue_families = 3;

    bool is_current = 4;
    google.protobuf.Timestamp last_became_current_time = 5;

    google.protobuf.Timestamp create_time = 6;

    bool started_deployment_workflow = 7;

    message TaskQueueFamilyData {
        // Key: enums.TaskQueueType, Value: TaskQueueData
        // All fields in TaskQueueData are valid except last_became_current_time, the source of
        // truth for that is the value at the root of WorkerDeploymentLocalState.
        map<int32, DeploymentVersionData> task_queues = 1;
    }
}

// used as Worker Deployment Version workflow input:
message WorkerDeploymentVersionWorkflowArgs {
    string namespace_name = 1;
    string namespace_id = 2;
    VersionLocalState version_state = 3;
}

// used as Worker Deployment workflow input:
message WorkerDeploymentWorkflowArgs {
    string namespace_name = 1;
    string namespace_id = 2;
    string deployment_name = 3;
    WorkerDeploymentLocalState state = 4;
}

// Local state for Worker Deployment
message WorkerDeploymentLocalState {
    google.protobuf.Timestamp create_time = 1;
    // Encapsulates task routing information for this deployment.
    temporal.api.deployment.v1.RoutingInfo routing_info = 2;
    // Deployment Versions that are currently tracked in this Deployment. 
    // A DeploymentVersion will be cleaned up automatically if all the following conditions meet:
    // - It does not receive new executions (see WorkerDeploymentVersionInfo.accepts_new_executions) 
    // - It has no active pollers (see WorkerDeploymentVersionInfo.pollers_status) 
    // - It is drained (see WorkerDeploymentVersionInfo.drainage_status)
    // TODO (Shivam) - Removal of registered versions based on the above conditions.
    repeated string versions = 3; 
}

// used as Worker Deployment Version workflow update input:
message RegisterWorkerInVersionArgs {
    string task_queue_name = 1;
    temporal.api.enums.v1.TaskQueueType task_queue_type = 2;
    google.protobuf.Timestamp first_poller_time = 3;
    int32 max_task_queues = 4;
}

// used as Worker Deployment workflow update input (sent from Worker Deployment workflow):
message SyncVersionStateArgs {
    SetCurrent set_current = 1;

    message SetCurrent {
        // If last_became_current_time is present, then set the deployment's
        // last_became_current_time to it and set is_current true. If it's missing,
        // set is_current false.
        google.protobuf.Timestamp last_became_current_time = 1;
    }
}

// used as Worker Deployment workflow update response (sent from Worker Deployment workflow):
message SyncVersionStateResponse {
    VersionLocalState version_state = 1;
}

// used as Worker Deployment Version workflow query response:
message QueryDescribeVersionResponse {
    VersionLocalState version_state = 1;
}

// used as Worker Deployment Version workflow query response:
message QueryDescribeWorkerDeploymentResponse {
    WorkerDeploymentLocalState state = 1;
}

// used as Worker Deployment Version workflow memo:
message VersionWorkflowMemo {
    string deployment_name = 1;
    string version = 2;
    google.protobuf.Timestamp create_time = 3;
    bool is_current_deployment = 4;
}

// used as Worker Deployment Version workflow activity input:
message StartWorkerDeploymentRequest {
    string deployment_name = 1;
    string request_id = 2;
}

// used as Worker Deployment Version workflow activity input:
message SyncDeploymentVersionUserDataRequest {
    temporal.api.deployment.v1.WorkerDeploymentVersion worker_deployment_version = 1;
    repeated SyncUserData sync = 2;

    message SyncUserData {
        string name = 1;
        temporal.api.enums.v1.TaskQueueType type = 2;
        DeploymentVersionData data = 3;
    }
}

// used as Worker Deployment Version workflow activity output:
message SyncDeploymentVersionUserDataResponse {
    map<string, int64> task_queue_max_versions = 1;
}

// used as Worker Deployment Version workflow activity input:
message CheckWorkerDeploymentUserDataPropagationRequest {
    map<string, int64> task_queue_max_versions = 1;
}

// used as Worker Deployment workflow update input:
message SetCurrentVersionArgs {
    string identity = 1;
    string version = 2;
}

// used as Worker Deployment update response:
message SetCurrentVersionResponse {
    string previous_version = 1;
}

// used as Worker Deployment activity input:
message SyncVersionStateActivityArgs {
    string deployment_name = 1;
    string version = 2;
    SyncVersionStateArgs args = 3;
    string request_id = 4;
}

// used as Worker Deployment activity result:
message SyncVersionStateActivityResult {
    VersionLocalState version_state = 1;
}

// used as Worker Deployment workflow memo:
message WorkerDeploymentWorkflowMemo {
    string deployment_name = 1;
    google.protobuf.Timestamp create_time = 2;
    temporal.api.deployment.v1.RoutingInfo routing_info = 3;
}

// Subset of fields of WorkerDeploymentInfo returned in ListWorkerDeploymentsResponse
message WorkerDeploymentSummary {
    string name = 1;
    google.protobuf.Timestamp create_time = 2;
    temporal.api.deployment.v1.RoutingInfo routing_info = 3;
}

// Used as Worker Deployment Version workflow activity input:
message AddVersionToWorkerDeploymentRequest {
    string deployment_name = 1;
    string version = 2;
    string request_id = 3;
}

// Used as Worker Deployment Version workflow activity output:
message AddVersionToWorkerDeploymentResponse {
}

//////////////////////////////////////////////////////////////////////////
// Below this line are the messages for the pre-release Deployment APIs //
//////////////////////////////////////////////////////////////////////////
// Data for each deployment+task queue pair. This is stored in each deployment (for each task
// queue), and synced to task queue user data (for each deployment).
message TaskQueueData {
    google.protobuf.Timestamp first_poller_time = 1;
    google.protobuf.Timestamp last_became_current_time = 2;
}

message DeploymentLocalState {
    temporal.api.deployment.v1.Deployment deployment = 1;
    map<string, TaskQueueFamilyData> task_queue_families = 2;

    bool is_current = 3;
    google.protobuf.Timestamp last_became_current_time = 6;

    google.protobuf.Timestamp create_time = 4;
    map<string, temporal.api.common.v1.Payload> metadata = 5;

    bool started_series_workflow = 7;

    message TaskQueueFamilyData {
        // Key: enums.TaskQueueType, Value: TaskQueueData
        // All fields in TaskQueueData are valid except last_became_current_time, the source of
        // truth for that is the value at the root of DeploymentLocalState.
        map<int32, TaskQueueData> task_queues = 1;
    }
}

// used as deployment workflow input:
message DeploymentWorkflowArgs {
    string namespace_name = 1;
    string namespace_id = 2;
    DeploymentLocalState state = 3;
}

// used as deployment series workflow input:
message DeploymentSeriesWorkflowArgs {
    string namespace_name = 1;
    string namespace_id = 2;
    string series_name = 3;
    SeriesLocalState state = 4;
}

message SeriesLocalState {
    string current_build_id = 1;
    google.protobuf.Timestamp current_changed_time = 2;
}

// used as deployment workflow update input:
message RegisterWorkerInDeploymentArgs {
    string task_queue_name = 1;
    temporal.api.enums.v1.TaskQueueType task_queue_type = 2;
    google.protobuf.Timestamp first_poller_time = 3;
    int32 max_task_queues = 4;
}

// used as deployment series workflow update input (sent from series workflow):
message SyncDeploymentStateArgs {
    SetCurrent set_current = 1;
    // currently, update_metadata will only be set if set_current.last_became_current_time is
    // present. this could change in the future.
    temporal.api.deployment.v1.UpdateDeploymentMetadata update_metadata = 2;

    message SetCurrent {
        // If last_became_current_time is present, then set the deployment's
        // last_became_current_time to it and set is_current true. If it's missing,
        // set is_current false.
        google.protobuf.Timestamp last_became_current_time = 1;
    }
}

// used as deployment series workflow update response (sent from series workflow):
message SyncDeploymentStateResponse {
    DeploymentLocalState deployment_local_state = 1;
}

// used as deployment workflow query response:
message QueryDescribeDeploymentResponse {
    DeploymentLocalState deployment_local_state = 1;
}

// used as deployment workflow memo:
message DeploymentWorkflowMemo {
    temporal.api.deployment.v1.Deployment deployment = 1;
    google.protobuf.Timestamp create_time = 2;
    bool is_current_deployment = 3;
}

// used as deployment workflow activity input:
message StartDeploymentSeriesRequest {
    string series_name = 1;
    string request_id = 2;
}

// used as deployment workflow activity input:
message SyncUserDataRequest {
    temporal.api.deployment.v1.Deployment deployment = 1;
    repeated SyncUserData sync= 2;

    message SyncUserData {
        string name = 1;
        temporal.api.enums.v1.TaskQueueType type = 2;
        TaskQueueData data = 3;
    }
}

// used as deployment workflow activity output:
message SyncUserDataResponse {
    map<string, int64> task_queue_max_versions = 1;
}

// used as deployment workflow activity input:
message CheckUserDataPropagationRequest {
    map<string, int64> task_queue_max_versions = 1;
}

// used as deployment series workflow update input:
message SetCurrentDeploymentArgs {
    string identity = 1;
    string build_id = 2;
    temporal.api.deployment.v1.UpdateDeploymentMetadata update_metadata = 3;
    string request_id = 4;
}

// used as deployment series update response:
message SetCurrentDeploymentResponse {
    DeploymentLocalState current_deployment_state = 1;
    DeploymentLocalState previous_deployment_state = 2;
}

// used as deployment series activity input:
message SyncDeploymentStateActivityArgs {
    temporal.api.deployment.v1.Deployment deployment = 1;
    SyncDeploymentStateArgs args = 2;
    string request_id = 3;
}

// used as deployment series activity result:
message SyncDeploymentStateActivityResult {
    DeploymentLocalState state = 1;
}

// used as deployment series workflow memo:
message DeploymentSeriesWorkflowMemo {
    string series_name = 1;
    string current_build_id = 2;
    google.protobuf.Timestamp current_changed_time = 3;
}
