// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.server.api.persistence.v1;
option go_package = "go.temporal.io/server/api/persistence/v1;persistence";

import "temporal/server/api/enums/v1/predicate.proto";
import "temporal/server/api/enums/v1/task.proto";

message Predicate {
    temporal.server.api.enums.v1.PredicateType predicate_type = 1;
    oneof attributes {
        UniversalPredicateAttributes universal_predicate_attributes = 2;
        EmptyPredicateAttributes empty_predicate_attributes = 3;
        AndPredicateAttributes and_predicate_attributes = 4;
        OrPredicateAttributes or_predicate_attributes = 5;
        NotPredicateAttributes not_predicate_attributes = 6;
        NamespaceIdPredicateAttributes namespace_id_predicate_attributes = 7;
        TaskTypePredicateAttributes task_type_predicate_attributes = 8;
    }
}

message UniversalPredicateAttributes {
}

message EmptyPredicateAttributes {
}

message AndPredicateAttributes {
    repeated Predicate predicates = 1;
}

message OrPredicateAttributes {
    repeated Predicate predicates = 1;
}

message NotPredicateAttributes {
    Predicate predicate = 1;
}

message NamespaceIdPredicateAttributes {
    repeated string namespace_ids = 1;
}

message TaskTypePredicateAttributes {
    repeated temporal.server.api.enums.v1.TaskType task_types = 1;
}
