// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.server.api.token.v1;

option go_package = "go.temporal.io/server/api/token/v1;token";

import "temporal/server/api/history/v1/message.proto";
import "temporal/server/api/replication/v1/message.proto";

message HistoryContinuation {
    string run_id = 1;
    int64 first_event_id = 2;
    int64 next_event_id = 3;
    bool is_workflow_running = 5;
    bytes persistence_token = 6;
    temporal.server.api.history.v1.TransientWorkflowTaskInfo transient_workflow_task = 7;
    bytes branch_token = 8;
    map<string, temporal.server.api.replication.v1.ReplicationInfo> replication_info = 9;
}

message RawHistoryContinuation{
    string namespace = 1;
    string workflow_id = 2;
    string run_id = 3;
    int64 start_event_id = 4;
    int64 start_event_version = 5;
    int64 end_event_id = 6;
    int64 end_event_version = 7;
    bytes persistence_token = 8;
    temporal.server.api.history.v1.VersionHistories version_histories = 9;
}

message Task {
    string namespace_id = 1;
    string workflow_id  = 2;
    string run_id = 3;
    int64 schedule_id = 4;
    int32 schedule_attempt = 5;
    string activity_id = 6;
    string workflow_type = 7;
    string activity_type = 8;
}

message QueryTask {
    string namespace_id = 1;
    string task_queue = 2;
    string task_id = 3;
}
