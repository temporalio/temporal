// The MIT License
//
// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.server.api.clock.v1;

option go_package = "go.temporal.io/server/api/clock/v1;clock";

message VectorClock {
    int32 shard_id = 1;
    int64 clock = 2;
    int64 cluster_id = 3;
}

// A Hybrid Logical Clock timestamp.
// Guarantees strict total ordering for conflict resolution purposes.
message HybridLogicalClock {
    // Wall clock - A single time source MUST guarantee that 2 consecutive timestamps are monotonically non-decreasing.
    // e.g. by storing the last wall clock and returning max(gettimeofday(), lastWallClock).
    int64 wall_clock = 1;
    // Incremental sequence that is reset every time the system's wallclock moves forward.
    // Ensures the clock generates monotonically increasing timestamps.
    int32 version = 2;
    // The cluster version ID as described in the XDC docs - used as a tie breaker.
    // See: https://github.com/uber/cadence/blob/master/docs/design/2290-cadence-ndc.md
    int64 cluster_id = 3;
}
