syntax = "proto3";

package temporal.server.api.workflow.v1;

option go_package = "go.temporal.io/server/api/workflow/v1;workflow";

import "temporal/api/common/v1/message.proto";
import "temporal/api/deployment/v1/message.proto";

import "temporal/server/api/clock/v1/message.proto";

message ParentExecutionInfo {
    string namespace_id = 1;
    string namespace = 2;
    temporal.api.common.v1.WorkflowExecution execution = 3;
    int64 initiated_id = 4;
    temporal.server.api.clock.v1.VectorClock clock = 5;
    int64 initiated_version = 6;
    // When present, child workflow starts as Pinned to this Worker Deployment Version.
    // Set only if the parent execution is effectively Pinned to a Worker Deployment Version when it
    // first starts the child workflow, and the child workflow is starting on a Task Queue belonging
    // to the same Worker Deployment Version.
    // Not set in the subsequent execution if the child workflow continues-as-new.
    // Deprecated. Replaced with `pinned_deployment_version`.
    string pinned_worker_deployment_version = 7;
    // When present, child workflow starts as Pinned to this Worker Deployment Version.
    // Set only if the parent execution is effectively Pinned to a Worker Deployment Version when it
    // first starts the child workflow, and the child workflow is starting on a Task Queue belonging
    // to the same Worker Deployment Version.
    // Not set in the subsequent execution if the child workflow continues-as-new.
    temporal.api.deployment.v1.WorkerDeploymentVersion pinned_deployment_version = 8;
}

message RootExecutionInfo {
    temporal.api.common.v1.WorkflowExecution execution = 1;
}

message BaseExecutionInfo {
    string run_id = 1;
    int64 lowest_common_ancestor_event_id = 2;
    int64 lowest_common_ancestor_event_version = 3;
}
