// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package temporal.server.api.cluster.v1;

option go_package = "go.temporal.io/server/api/cluster/v1;cluster";

import "google/protobuf/timestamp.proto";
import "dependencies/gogoproto/gogo.proto";

import "temporal/server/api/enums/v1/cluster.proto";

message HostInfo {
    string identity = 1;
}

message RingInfo {
    string role = 1;
    int32 member_count = 2;
    repeated HostInfo members = 3;
}

message MembershipInfo {
    HostInfo current_host = 1;
    repeated string reachable_members = 2;
    repeated RingInfo rings = 3;
}

message ClusterMember {
    temporal.server.api.enums.v1.ClusterMemberRole role = 1;
    string host_id = 2;
    string rpc_address = 3;
    int32 rpc_port = 4;
    google.protobuf.Timestamp session_start_time = 5 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp last_heartbit_time = 6 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp record_expiry_time = 7 [(gogoproto.stdtime) = true];
}