syntax = "proto3";

package temporal.server.api.common.v1;
option go_package = "go.temporal.io/server/api/common/v1;commonspb";

import "temporal/api/common/v1/message.proto";

message HistoryTask {
  // shard_id is included to avoid having to deserialize the task blob.
  int32 shard_id = 1;
  temporal.api.common.v1.DataBlob blob = 2;
}

message HistoryDLQTaskMetadata {
  // message_id is the zero-indexed sequence number of the message in the queue that contains this history task.
  int64 message_id = 1;
}

// HistoryDLQTask is a history task that has been moved to the DLQ, so it also has a message ID (index within that
// queue).
message HistoryDLQTask {
  HistoryDLQTaskMetadata metadata = 1;
  // This is named payload to prevent stuttering (e.g. task.Task).
  HistoryTask payload = 2;
}

// HistoryDLQKey is a compound key that identifies a history DLQ.
message HistoryDLQKey {
  // task_category is the category of the task. The default values are defined in the TaskCategory enum. However, there
  // may also be other categories registered at runtime with the history/tasks package. As a result, the category here
  // is an integer instead of an enum to support both the default values and custom values.
  int32 task_category = 1;
  // source_cluster and target_cluster must both be non-empty. For non-cross DC tasks, i.e. non-replication tasks,
  // they should be the same. The reason for this is that we may support wildcard clusters in the future, and we want
  // to differentiate between queues which go from one cluster to all other clusters, and queues which don't leave the
  // current cluster.
  string source_cluster = 2;
  string target_cluster = 3;
}

