syntax = "proto3";

package temporal.server.api.batch.v1;
option go_package = "go.temporal.io/server/api/batch/v1;batch";

import "google/protobuf/duration.proto";

import "temporal/api/batch/v1/message.proto";
import "temporal/api/common/v1/message.proto";

message BatchOperation {
  // The namespace of the batch operation.
  string namespace = 1;

  // The query to perform.
  string query = 2;

  repeated temporal.api.common.v1.WorkflowExecution workflow_executions = 3;

  string reason = 4;

  oneof operation {
    temporal.api.batch.v1.BatchOperationTermination termination_operation = 5;
    temporal.api.batch.v1.BatchOperationCancellation cancellation_operation = 6;
    temporal.api.batch.v1.BatchOperationSignal signal_operation = 7;
    temporal.api.batch.v1.BatchOperationDeletion deletion_operation = 8;
    temporal.api.batch.v1.BatchOperationReset reset_operation = 9;
    temporal.api.batch.v1.BatchOperationUpdateWorkflowExecutionOptions update_workflow_execution_options_operation = 10;
    temporal.api.batch.v1.BatchOperationUnpauseActivities unpause_activities_operation = 11;
    temporal.api.batch.v1.BatchOperationUpdateActivityOptions update_activity_options_operation = 12;
    temporal.api.batch.v1.BatchOperationResetActivities reset_activities_operation = 13;
  }

  double rps = 14;

  int64 concurrency = 15;

  int64 attempts_on_retryable_error = 16;

  google.protobuf.Duration activity_heartbeat_timeout = 17;

  repeated string non_retryable_errors = 18;

  string batch_type = 19;
}
