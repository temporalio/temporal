// Copyright (c) 2020 Temporal Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package cli.v1;

option go_package = "github.com/temporalio/temporal/.gen/proto/cli/v1;cli";

import "common/v1/message.proto";
import "enums/v1/workflow.proto";
import "execution/v1/message.proto";

message DescribeWorkflowExecutionResponse {
    execution.v1.WorkflowExecutionConfiguration executionConfiguration = 1;
    WorkflowExecutionInfo workflowExecutionInfo = 2;
    repeated PendingActivityInfo pendingActivities = 3;
    repeated execution.v1.PendingChildExecutionInfo pendingChildren = 4;
}

message WorkflowExecutionInfo {
    common.v1.WorkflowExecution execution = 1;
    common.v1.WorkflowType type = 2;
    string startTime = 3;
    string closeTime = 4;
    enums.v1.WorkflowExecutionStatus status = 5;
    int64 historyLength = 6;
    string parentNamespaceId = 7;
    common.v1.WorkflowExecution parentExecution = 8;
    int64 executionTime = 9;
    common.v1.Memo memo = 10;
    SearchAttributes searchAttributes = 11;
    execution.v1.ResetPoints autoResetPoints = 12;
}

message PendingActivityInfo {
    string activityId = 1;
    common.v1.ActivityType activityType = 2;
    enums.v1.PendingActivityState state = 3;
    string heartbeatDetails = 4;
    string lastHeartbeatTimestamp = 5;
    string lastStartedTimestamp = 6;
    int32 attempt = 7;
    int32 maximumAttempts = 8;
    string scheduledTimestamp = 9;
    string expirationTimestamp = 10;
    string lastFailure = 11;
    string lastWorkerIdentity = 12;
}

message SearchAttributes {
    map<string, string> indexedFields = 1;
}
